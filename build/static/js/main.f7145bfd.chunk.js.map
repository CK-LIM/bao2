{"version":3,"sources":["components/images/discord.svg","components/images/docs.svg","components/images/github.svg","components/images/medium.svg","components/images/twitter.svg","components/images/joe.webp","components/images/kyber.webp","components/images/link.webp","components/images/pangolin.webp","components/images/baklava_mainBottom_removebg.webp","components/images/Litepaper_Protocol.pdf","components/images/Litepaper_Protocol(turkish).pdf","components/images/baklava.webp","components/images/logo.webp","components/images/coin98.webp","components/images/metamask-fox.svg","components/images/walletconnect-logo.svg","components/images/sAvax.webp","components/images/qi.webp","components/images/ust.webp","components/images/avax.svg","components/images/usdc.svg","components/images/usdt.svg","components/images/weth.svg","components/ImgNextGen.js","components/Navbar.js","components/NavbarMenu.js","components/Main.js","components/Deposit.js","components/Footer.js","components/Menu.js","components/Withdraw.js","components/MenuV2.js","components/Kyber.js","components/Stake.js","components/TraderJoe.js","components/TraderJoeV2.js","components/Airdrop.js","components/LitePaper.js","components/Synthetic.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ImgNextGen","_ref","srcWebp","srcJrx","srcJp2","fallback","alt","props","Object","objectWithoutProperties","react_default","a","createElement","srcSet","type","assign","src","Navb","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","show","show2","showDropdown","bind","assertThisInitialized","hideDropdown","show2Dropdown","hide2Dropdown","i","setState","_this2","Navbar","className","style","height","position","width","top","zIndex","backgroundColor","Nav","minWidth","react_responsive_default","maxWidth","BurgerMenu","react_router_dom","to","activeStyle","fontWeight","color","components_ImgNextGen","baklava","textDecoration","marginLeft","Dropdown","padding","onMouseEnter","onMouseLeave","Toggle","variant","paddingLeft","activeClassName","Menu","marginTop","Item","as","Link","fontSize","Divider","marginBottom","marginRight","pathname","target","docs","align","twitter","medium","github","discord","Button","size","wallet","walletConnect","autoClose","paddingBottom","first4Account","last4Account","margin","onClick","window","open","concat","account","setWalletTrigger","WalletDisconnect","reactjs_popup_esm","trigger","modal","contentStyle","background","border","borderRadius","close","borderBottom","asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","connectMetamask","stop","fox","_callee2","_context2","connectCoin98","coin98","_callee3","_context3","mobileWalletConnect","walletconnectlogo","Component","delay","ms","Promise","res","setTimeout","logo","BAVAPrice","NavbarMenu_regeneratorRuntime","_callee4","_context4","Main","id","joe","pangolin","kyber","minHeight","baklava_mainBottom_removebg","maxHeight","Deposit","message","txValidAmount","txApprovedValidAmount","changeHandler","changeHandlerLp","event","result","isNaN","countDecimals","bigInt","web3Ava","utils","toWei","value","lpBalanceAccount","n","x","Math","floor","valueOf","str","toString","indexOf","split","length","onSubmit","amount","preventDefault","alert","input","deposit","v","accountLoading","step","ref","placeholder","onKeyPress","test","key","onChange","e","required","cursor","disabled","event1","fromWei","poolSegmentInfo","platform","lpSegmentAllowanceV2_3","approve","Footer","gitbook","git","farmV2_2Open","clickfarmOpen","pair","boolean","ntg","parseFloat","bavaTokenBalance","toLocaleString","maximumFractionDigits","lockedBavaTokenBalance","index_esm","on","offsetY","offsetX","totalpendingReward","farmloading","Menu_regeneratorRuntime","totalTVL","ButtonGroup","component","poolSegmentInfoV2_2","map","lpName","status","projectLink","exlink","getLPLink","farmContract","scope","aprV2_2","total3rdPartyAPR","lpBalanceAccountV2_2","userSegmentInfoV2_2","aprloading","returnRatioV2_2","apyDailyV2_2","tvlV2_2","pendingSegmentRewardV2_2","console","log","harvest","lpSegmentAllowanceV2_2","components_Deposit","userSegmentInfo","withdraw","bavaPoolSegmentInfo","bavaapr","bavaLpBalanceAccount","bavaUserSegmentInfo","bavaReturnRatio","bavaapyDaily","bavatvl","farmV1Open","setI","bavaPendingSegmentReward","bavaLpSegmentAllowance","bavaContract","apr","returnRatio","apyDaily","tvl","farmV2Open","pendingSegmentReward","lpSegmentAllowance","components_Footer","Withdraw","farmV2_3Open","depositAction","withdrawAction","setAction","page","MenuV2_regeneratorRuntime","href","poolSegmentInfoV2_3","icon","image","imagePosition","bava","imageSize","avax","usdc","usdt","ust","qi","savax","png","weth","aprV2_3","lpBalanceAccountV2_3","userSegmentInfoV2_3","returnRatioV2_3","apyDailyV2_3","tvlV2_3","pendingSegmentRewardV2_3","reinvestAmount","reinvest","paddingTop","_callee5","_context5","_callee6","_context6","_callee7","_context7","components_Withdraw","_callee8","_context8","_callee9","_context9","_callee10","_context10","_callee11","_context11","Kyber","farmV2_3_kyberOpen","Kyber_regeneratorRuntime","Stake","stakeOpen","unstakeOpen","inputstate","changeHandlerDeposit","changeHandlerWithdraw","changeHandlerApprove","stakeAmount","earnedAmount","totalStake","rewardRate","Stake_regeneratorRuntime","setStake","setUnstake","getReward","exit","stake","unstake","bavaTokenAllowance","approveStake","TraderJoe","TraderJoe_regeneratorRuntime","farmV1_joeOpen","TraderJoeV2_regeneratorRuntime","Airdrop","addValid","claimMessage","timeConverter","airdropStart","airdropEnd","airdropAmount","opacity","LitePaper","turkish","english","clickLanguage","language","LitePaper_regeneratorRuntime","data","litepaper_turkish","litepaper","App","ethereum","request","method","then","App_regeneratorRuntime","_callee40","_context40","switchNetwork","process","sent","loadBlockchainUserData","catch","err","code","error","_ref2","_callee41","accounts","_context41","_x19","apply","arguments","_callee43","_context43","provider","WalletConnectProvider","rpc","43114","chainId","enable","Web3","web3Con","eth","getAccounts","substring","slice","handleAccountsChanged","reason","_callee42","_context42","_callee44","_context44","connected","disconnect","_callee45","_context45","params","t0","rpcUrls","chainName","nativeCurrency","name","symbol","decimals","blockExplorerUrls","networkName","t1","_ref7","_callee46","_accounts","_context46","web3","airdropCheck","_x20","handleChainChanged","_callee47","_context47","UNIX_timestamp","Date","year","getFullYear","month","getMonth","getDate","getHours","minimumIntegerDigits","useGrouping","getMinutes","getSeconds","_ref9","_callee50","bavaMasterFarmer","bavaCompoundPool","poolAddress","_poolAddress2","_context50","Contract","BavaMasterFarmerV1","abi","BavaMasterFarmer","BavaMasterFarmerV2_2","BavaMasterFarmerV2_3","methods","poolInfo","poolContract","BavaCompoundPool","send","from","_ref10","_callee48","_context48","_x25","_ref11","_callee49","_context49","_x26","_x21","_x22","_x23","_x24","_ref12","_callee52","lpTokenAddress","bavaMasterFarmerAddress","lpToken","_context52","lpAddresses","farmNetworkId","bavaMasterFarmerV1","_address","bavaMasterFarmerV2_2","LpToken","_ref13","_callee51","_context51","_x30","_x27","_x28","_x29","_ref14","_callee55","_poolAddress3","_context55","_ref15","_callee53","_context53","_x35","_ref16","_callee54","_context54","_x36","_x31","_x32","_x33","_x34","_ref17","_callee58","_poolAddress4","_context58","abrupt","claimReward","_ref18","_callee56","_context56","_x40","_ref19","_callee57","_context57","_x41","_x37","_x38","_x39","_ref20","_callee60","_poolAddress5","_context60","_ref21","_callee59","_context59","_x44","_x42","_x43","checkAirdrop","_ref22","_callee61","address","_context61","toChecksumAddress","airdropList","validAirdrop","_x45","claimAirdrop","_callee63","bavaAirdrop","hash","_context63","BavaAirdrop","now","toFixed","processedAirdrops","airdropIteration","claimTokens","_ref24","_callee62","_context62","_x46","_callee65","bavaToken","_context65","BavaToken","_ref26","_callee64","_context64","_x47","_ref27","_callee66","bavaStake","_context66","StakingRewards","_x48","_ref28","_callee68","_context68","_ref29","_callee67","_context67","_x50","_x49","_callee70","_context70","_ref31","_callee69","_context69","_x51","_ref32","_callee72","_context72","_ref33","_callee71","_context71","_x53","_x52","version","_ref34","_callee73","_context73","_x54","restakingFarm","bavaTokenTotalSupply","bavaTokenCapSupply","bavaTokenLock","loading","lpTokenSegmentInContract","lpTokenSegmentBsymbol","lpTokenValue","buttonPopup","poolLength","startBlk","totalAirdropAmount","loadWeb3","loadFarmData","loadBlockchainData","loadTVLAPR","farm","Farm","farmBava","FarmV1","farmV2_2","FarmV2_2","farmV2_3","FarmV2_3","AirdropList","networkId","farmNetwork","chainID","bavaMasterFarmerV2_3","response0","loadPoolLength","response1","loadBavaPoolLength","response2","loadAirdropIteration","response3","loadAirdropAmount","response5","loadAirdropStart","response6","loadAirdropEnd","response7","loadTotalStake","response8","loadRewardRate","response9","loadPoolLengthV2_2","response10","loadPoolLengthV2_3","bavaPoolLength","poolLengthV2_2","poolLengthV2_3","b","c","d","bavaLpTokenPairsymbols","lpTokenPairsymbols","lpTokenPairsymbolsV2_2","lpTokenPairsymbolsV2_3","bavaLpTokenAddresses","lpTokenAddresses","lpTokenAddressesV2_2","lpTokenAddressesV2_3","returnRatioArray","myJsonMongo","returnRatioArrayV2_2","returnRatioArrayV2_3","responseV2_3","loadFarmReinvest","lpTokenPairsymbol","bavaPoolInfo","bavaLpTokenAddress","bavaLpTokenPairsymbol","userResponse0","loadBavaTokenBalance","userResponse1","loadLockedBavaTokenBalance","userResponse2","loadBavaTokenAllowance","userResponse3","loadEarnedAmount","userResponse4","loadStakeAmount","response0V2_2","response1V2_2","response2V2_2","response3V2_2","response0V2_3","response1V2_3","response2V2_3","response3V2_3","bavaResponse0","bavaResponse1","bavaResponse2","bavaResponse3","loadUserInfo","loadUserInfo1","loadUserInfo2","loadUserInfo3","loadUserInfoV2_2","loadUserInfo1V2_2","loadUserInfo2V2_2","loadUserInfo3V2_2","loadUserInfoV2_3","loadUserInfo1V2_3","loadUserInfo2V2_3","loadUserInfo3V2_3","loadBavaUserInfo","loadBavaUserInfo1","loadBavaUserInfo2","loadBavaUserInfo3","parseInt","balanceOf","lockOf","allowance","earned","userInfo","lpTokenPair","IPancakePair","lpTokenBalance","lpTokenAllowance","pendingReward","finalReinvestAmount","bonusReinvestAmount","bonusRewardPrice","checkReward","PNGPrice","AVAXPrice","BavaCompoundPoolVariable","QIPrice","LUNAPrice","startAirdrop","endAirdrop","totalSupply","tvlArray","aprArray","bavatvlArray","bavaaprArray","tvlArrayV2_2","aprArrayV2_2","tvlArrayV2_3","aprArrayV2_3","pow","lpTokenInContract","REWARD_PER_BLOCK","rewardPerBlock","array","TVL","APR","APY","fetch","responseMongo","responseGecko","json","myJsonGecko","JOEPrice","mainContent","menuContent","menuV2Content","kyberContent","traderjoeContent","airdropContent","stakeContent","litepaperContent","syntheticContent","traderjoeV2Content","navLandingContent","navMenuContent","components_Navbar","NavbarMenu","components_Main","components_Menu","MenuV2","components_TraderJoe","TraderJoeV2","components_Kyber","components_Airdrop","checkClaimAmount","claimDistributePurse","rewardEndTime","rewardStartTime","distributedAmount","distributedPercentage","rewardStartTimeDate","rewardEndTimeDate","claimAmount","totalTransferAmount","purseTokenTotalSupply","components_Stake","components_LitePaper","Synthetic","react_router","path","exact","role","Boolean","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f7145bfd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/discord.ca9b0ada.svg\";","module.exports = __webpack_public_path__ + \"static/media/docs.131690cc.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.e38195f2.svg\";","module.exports = __webpack_public_path__ + \"static/media/medium.adaf12a4.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter.7680e731.svg\";","module.exports = __webpack_public_path__ + \"static/media/joe.d6df8ccf.webp\";","module.exports = __webpack_public_path__ + \"static/media/kyber.8a51b798.webp\";","module.exports = __webpack_public_path__ + \"static/media/link.c82cc2aa.webp\";","module.exports = __webpack_public_path__ + \"static/media/pangolin.3477b3df.webp\";","module.exports = __webpack_public_path__ + \"static/media/baklava_mainBottom_removebg.61e23e03.webp\";","module.exports = __webpack_public_path__ + \"static/media/Litepaper_Protocol.55022142.pdf\";","module.exports = __webpack_public_path__ + \"static/media/Litepaper_Protocol(turkish).e0e108cf.pdf\";","module.exports = __webpack_public_path__ + \"static/media/baklava.f4bf4979.webp\";","module.exports = __webpack_public_path__ + \"static/media/logo.7011d8ad.webp\";","module.exports = __webpack_public_path__ + \"static/media/coin98.814bc745.webp\";","module.exports = __webpack_public_path__ + \"static/media/metamask-fox.c06f3a3e.svg\";","module.exports = __webpack_public_path__ + \"static/media/walletconnect-logo.37f2bc6e.svg\";","module.exports = __webpack_public_path__ + \"static/media/sAvax.242bef04.webp\";","module.exports = __webpack_public_path__ + \"static/media/qi.320fa07c.webp\";","module.exports = __webpack_public_path__ + \"static/media/ust.2abe15e5.webp\";","module.exports = __webpack_public_path__ + \"static/media/avax.47be62e8.svg\";","module.exports = __webpack_public_path__ + \"static/media/usdc.3b5972c1.svg\";","module.exports = __webpack_public_path__ + \"static/media/usdt.0b8d2118.svg\";","module.exports = __webpack_public_path__ + \"static/media/weth.946772ab.svg\";","import React from 'react';\n\nconst ImgNextGen = ({\n  srcWebp,\n  srcJrx,\n  srcJp2,\n  fallback,\n  alt,\n  ...props\n\n}) => {\n  return (\n    <picture>\n       <source srcSet={srcWebp} type=\"image/webp\" />\n       <source srcSet={srcJrx} type=\"image/jxr\" />\n       <source srcSet={srcJp2} type=\"image/jp2\" />\n       <source srcSet={fallback} type=\"image/jpeg\" />\n       <img src={fallback} alt={alt} {...props} />\n    </picture>\n  );\n};\n\nexport default ImgNextGen;","import React, { Component } from 'react'\r\nimport MediaQuery from 'react-responsive';\r\nimport Buttons from 'react-bootstrap/Button'\r\nimport { Link } from 'react-router-dom';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Navbar, Nav, Container } from 'react-bootstrap';\r\nimport Popup from 'reactjs-popup';\r\nimport ImgNextGen from './ImgNextGen';\r\nimport { slide as Menu } from 'react-burger-menu'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport 'reactjs-popup/dist/index.css';\r\nimport './App.css';\r\nimport baklava from './images/baklava.webp';\r\nimport discord from './images/discord.svg';\r\nimport docs from './images/docs.svg';\r\nimport github from './images/github.svg';\r\nimport medium from './images/medium.svg';\r\nimport twitter from './images/twitter.svg';\r\nimport coin98 from './images/coin98.webp';\r\nimport fox from './images/metamask-fox.svg';\r\nimport walletconnectlogo from './images/walletconnect-logo.svg';\r\n\r\nclass Navb extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      show: false,\r\n      show2: false\r\n    }\r\n    this.showDropdown = this.showDropdown.bind(this)\r\n    this.hideDropdown = this.hideDropdown.bind(this)\r\n    this.show2Dropdown = this.show2Dropdown.bind(this)\r\n    this.hide2Dropdown = this.hide2Dropdown.bind(this)\r\n  }\r\n\r\n  showDropdown(i) {\r\n    let show = this.state.show\r\n    this.setState({ show: !show })  //do ntg, just to push react setstate\r\n  }\r\n\r\n  hideDropdown() {\r\n    let show = this.state.show\r\n    this.setState({ show: false })  //do ntg, just to push react setstate\r\n  }\r\n\r\n  show2Dropdown(i) {\r\n    let show2 = this.state.show2\r\n    this.setState({ show2: true })  //do ntg, just to push react setstate\r\n  }\r\n\r\n  hide2Dropdown() {\r\n    this.setState({ show2: false })  //do ntg, just to push react setstate\r\n  }\r\n\r\n  render() {\r\n    const contentStyle = { background: '#fffae6', border: \"1px solid #596169\", width: \"30%\", borderRadius: \"15px\", minWidth: \"320px\" };\r\n    return (\r\n      <Navbar className=\"navbar top\" style={{ height: \"80px\", position: \"fixed\", width: \"100%\", top: \"0\", zIndex: \"999\", backgroundColor: \"#fffae6\" }}>\r\n        <Nav style={{ minWidth: '250px' }}>\r\n          <MediaQuery maxWidth={1200}>\r\n            <Menu >\r\n              <div className='dropdown0'><NavLink className='dropdown' to='/menu/v2/' activeStyle={{ fontWeight: \"bold\", color: \"#ffae00\" }}>Farm</NavLink></div>\r\n              <div className='dropdown0'><NavLink className='dropdown' to='/stake/' activeStyle={{ fontWeight: \"bold\", color: \"#ffae00\" }}>Stake</NavLink></div>\r\n              {/* <div className='dropdown0'><NavLink className='dropdown' to='/claim/' activeStyle={{ fontWeight: \"bold\", color: \"#ffae00\" }}>Claim</NavLink></div> */}\r\n              {/* <div className='dropdown0'><NavLink className='dropdown' to='/collateral/' activeStyle={{ fontWeight: \"bold\", color: \"#ffae00\" }}>Collateral</NavLink></div> */}\r\n              <div className='dropdown0'><NavLink className='dropdown' to='/synthetic/' activeStyle={{ fontWeight: \"bold\", color: \"#ffae00\" }}>Synthetic</NavLink></div>\r\n              <div className='dropdown0'><NavLink className='dropdown' to='/litepaper/' activeStyle={{ fontWeight: \"bold\", color: \"#ffae00\" }}>LitePaper</NavLink></div>\r\n            </Menu>\r\n          </MediaQuery>\r\n\r\n          <MediaQuery minWidth={1201}>\r\n            <NavLink className=\"topleft\" to=\"/\">\r\n              <ImgNextGen\r\n                srcWebp={baklava}\r\n                width=\"35\" alt=\"\"\r\n              />\r\n            </NavLink>\r\n          </MediaQuery>\r\n          <MediaQuery minWidth={351}>\r\n            <NavLink className=\"topleft1 textMiddleBold2 reallyBold\" to=\"/\"><b>BAKLAVA.SPACE</b></NavLink>\r\n          </MediaQuery>\r\n          <MediaQuery minWidth={280} maxWidth={350}>\r\n            <NavLink className=\"topleft1 textMiddleBold2 reallyBold\" to=\"/\"><b>BAKLAVA</b></NavLink>\r\n          </MediaQuery>\r\n\r\n\r\n          <div className=\"rowS topleft2\" style={{ textDecoration: 'none' }}>\r\n            <MediaQuery minWidth={1201}>\r\n              {/* <div\r\n                style={{ marginLeft: \"25px\" }}\r\n              ><Popup trigger={open => (\r\n                <NavLink className=\"textSmallBold1\" activeClassName=\" \" activeStyle={{ fontWeight: \"bold\", color: \"#ffc400\" }} to=\"/menu/v2/\">Farm &#8595;</NavLink>\r\n              )}\r\n                on=\"hover\"\r\n                position=\"bottom center\"\r\n                offsetY={5}\r\n                offsetX={0}\r\n                mouseLeaveDelay={100}\r\n                contentStyle={{ padding: '3px', width: '90px', textDecoration: \"none\" }}\r\n                arrow={false}\r\n              ><div>\r\n                    <Link to=\"/traderjoe/\"></Link>\r\n                    <div className='dropdown0'><Link className=\"textInfo center\" to=\"/menu/\">Version 1</Link></div>\r\n                    <div className='dropdown'><Link className=\"textInfo center\" to=\"/menu/v2/\">Version 2</Link></div>\r\n                  </div>\r\n                </Popup>\r\n              </div> */}\r\n\r\n              <div style={{ marginLeft: \"25px\" }} >\r\n                <Dropdown style={{ padding: \"0px\" }}\r\n                  onMouseEnter={this.showDropdown}\r\n                  onMouseLeave={this.hideDropdown}\r\n                  show={this.state.show}\r\n                >\r\n                  <Dropdown.Toggle className='center cell2' variant=\"transparent\" style={{ paddingLeft: \"10px\" }}>\r\n                    <NavLink className=\"textSmallBold1\" activeClassName=\"\" activeStyle={{ fontWeight: \"bold\", color: \"#ffae00\" }} to=\"/menu/v2/\">Farm &#8595;</NavLink>\r\n                  </Dropdown.Toggle>\r\n                  <Dropdown.Menu style={{ backgroundColor: \"#fffae6\", marginTop: \"0px\", padding: '0px', minWidth: '7rem' }}>\r\n                    <Dropdown.Item as={Link} to=\"/menu/\" className='cell2' style={{ padding: '0px', marginLeft: \"8px\", width: '50px' }}>\r\n                      <div className=\"dropdown center\" style={{ fontSize: '15px', marginLeft: \"20px\" }}>Version 1</div>\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Divider style={{ marginTop: \"4px\", marginBottom: '4px' }} />\r\n                    <Dropdown.Item as={Link} to=\"/menu/v2/\" className='cell2' style={{ padding: '0px', marginLeft: \"8px\", width: '50px' }}>\r\n                      <div className=\"dropdown center\" style={{ fontSize: '15px', marginLeft: \"20px\" }}>Version 2</div>\r\n                    </Dropdown.Item>\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n              </div>\r\n\r\n              <div\r\n                style={{ marginLeft: \"10px\" }}\r\n              ><NavLink className=\"textSmallBold1\" activeClassName=\" \" activeStyle={{ fontWeight: \"bold\", color: \"#ffc400\" }} to=\"/stake/\">Stake</NavLink></div>\r\n              {/* <div\r\n                style={{ marginLeft: \"20px\" }}\r\n              ><NavLink className=\"textSmallBold1\" activeClassName=\" \" activeStyle={{ fontWeight: \"bold\", color: \"#ffc400\" }} to=\"/claim/\">Claim</NavLink></div> */}\r\n              {/* <div\r\n                style={{ marginLeft: \"25px\" }}\r\n              ><NavLink className=\"textSmallBold1\" activeClassName=\" \" activeStyle={{ fontWeight: \"bold\", color: \"#ffc400\" }} to=\"/collateral/\">Collateral</NavLink></div> */}\r\n              <div\r\n                style={{ marginLeft: \"20px\" }}\r\n              ><NavLink className=\"textSmallBold1\" activeClassName=\" \" activeStyle={{ fontWeight: \"bold\", color: \"#ffc400\" }} to=\"/litepaper/\">LitePaper</NavLink></div>\r\n              <div\r\n                style={{ marginLeft: \"20px\" }}\r\n              ><NavLink className=\"textSmallBold1\" activeClassName=\" \" activeStyle={{ fontWeight: \"bold\", color: \"#ffc400\" }} to=\"/synthetic/\">Synthetic</NavLink></div>\r\n            </MediaQuery>\r\n          </div>\r\n\r\n          <div>\r\n            <MediaQuery minWidth={771}>\r\n              <div className=\"center topright1\">\r\n                <div className=\"rowC\">\r\n                  <Link className=\"exLink0\" style={{ marginRight: '40px' }} to={{ pathname: \"https://baklavaspace.gitbook.io/\" }} target=\"_blank\">\r\n                    <div className=\"center mb-2\"><img src={docs} width=\"20\" height=\"20\" align=\"right\" alt=\"\" /></div>\r\n                  </Link>\r\n                  <Link className=\"exLink0\" style={{ marginRight: '40px' }} to={{ pathname: \"https://twitter.com/baklavaspace\" }} target=\"_blank\">\r\n                    <div className=\"center mb-2\"><img src={twitter} width=\"20\" height=\"20\" align=\"right\" alt=\"\" /></div>\r\n                  </Link>\r\n                  <Link className=\"exLink0\" style={{ marginRight: '40px' }} to={{ pathname: \"https://medium.com/@baklavaspace\" }} target=\"_blank\">\r\n                    <div className=\"center mb-2\"><img src={medium} width=\"20\" height=\"20\" align=\"right\" alt=\"\" /></div>\r\n                  </Link>\r\n                  <Link className=\"exLink0\" style={{ marginRight: '40px' }} to={{ pathname: \"https://github.com/baklavaspace\" }} target=\"_blank\">\r\n                    <div className=\"center mb-2\"><img src={github} width=\"20\" height=\"20\" align=\"right\" alt=\"\" /></div>\r\n                  </Link>\r\n                  <Link className=\"exLink0\" style={{ marginRight: '20px' }} to={{ pathname: \"https://discord.gg/E6aYX5ukAw\" }} target=\"_blank\">\r\n                    <div className=\"center mb-2\"><img src={discord} width=\"20\" height=\"20\" align=\"right\" alt=\"\" /></div>\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </MediaQuery>\r\n\r\n            <div>\r\n              <ul className=\"topright rowC\">\r\n                <MediaQuery minWidth={500}>\r\n                  <div>\r\n                    <Link to=\"/menu/v2/\">\r\n                      <Buttons className=\"textWhiteLarge center\" style={{ minWidth: '80px', height: '30px', marginRight: '8px' }} variant=\"secondary\" size=\"lg\"> Menu</Buttons>\r\n                    </Link>\r\n                  </div>\r\n                </MediaQuery>\r\n                <div>\r\n                  {this.props.wallet || this.props.walletConnect ?\r\n                    // <div>\r\n                    //   <Popup trigger={open => (\r\n                    //     <Buttons className=\"textWhiteLarge center\" style={{ width: '100px', height: '30px' }} variant=\"warning\" size=\"sm\" > {this.props.first4Account}...{this.props.last4Account}</Buttons>\r\n                    //   )}\r\n                    //     on=\"hover\"\r\n                    //     position=\"bottom right\"\r\n                    //     offsetY={5}\r\n                    //     offsetX={0}\r\n                    //     mouseLeaveDelay={100}\r\n                    //     contentStyle={{ padding: '5px' }}\r\n                    //     arrow={false}\r\n                    //   ><div>\r\n                    //       <div className='dropdown0' onClick={() => {\r\n                    //         window.open(`https://snowtrace.io/address/${this.props.account}`, '_blank')\r\n                    //       }}>Wallet</div>\r\n                    //       <div className='dropdown' onClick={() => {\r\n                    //         this.props.setWalletTrigger(false)\r\n                    //         if (this.props.walletConnect == true) {\r\n                    //           this.props.WalletDisconnect()\r\n                    //         }\r\n                    //       }}>Disconnect</div>\r\n                    //     </div>\r\n                    //   </Popup>\r\n                    // </div>\r\n\r\n                    <Dropdown\r\n                      onMouseEnter={this.show2Dropdown}\r\n                      onMouseLeave={this.hide2Dropdown}\r\n                      show={this.state.show2}\r\n                      autoClose=\"outside\"\r\n                      style={{ padding: '0px', paddingBottom: \"5px\" }}\r\n                    >\r\n                      <Dropdown.Toggle className='textWhiteLarge center cell2' variant=\"warning\" size=\"sm\" style={{ width: '110px', height: '30px' }}>\r\n                        <div>{this.props.first4Account}...{this.props.last4Account}</div>\r\n                      </Dropdown.Toggle>\r\n\r\n                      <Dropdown.Menu style={{ backgroundColor: \"#fffae6\", margin: \"0px\", padding: '5px', minWidth: '110px', maxWidth: '110px' }}>\r\n                        <Dropdown.Item className=\"cell2 dropdown0\" style={{ margin: '0px', padding: '5px', fontSize: '16px' }}>\r\n                          <div onClick={() => {\r\n                            window.open(`https://snowtrace.io/address/${this.props.account}`, '_blank')\r\n                          }}>Wallet</div>\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item className=\"cell2 dropdown\" style={{ margin: '0px', padding: '5px', fontSize: '16px' }}>\r\n                          <div onClick={() => {\r\n                            this.props.setWalletTrigger(false)\r\n                            if (this.props.walletConnect == true) {\r\n                              this.props.WalletDisconnect()\r\n                            }\r\n                          }}>Disconnect</div>\r\n                        </Dropdown.Item>\r\n                      </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    : <div>\r\n                      <Popup trigger={open => (<Buttons className=\"textWhiteLarge center\" style={{ width: '110px', height: '30px' }} variant=\"warning\" size=\"lg\" >Connect</Buttons>)} modal {...{ contentStyle }}>\r\n                        {close => (\r\n                          <div>\r\n                            <Buttons className=\"close cell2\" style={{ background: \"#fffae6\", borderRadius: \"12px\", padding: \"2px 5px\", fontSize: \"18px\" }} onClick={close}>\r\n                              &times;\r\n                            </Buttons>\r\n                            <div className=\"textWhiteMedium mb-2\" style={{ borderBottom: \"1px Solid Gray\", padding: \"10px\" }}> Connect a Wallet </div>\r\n                            <div className=\"center mt-4 mb-2\">\r\n                              <Buttons type=\"button\" variant=\"secondary\" style={{ height: \"50px\", width: \"100%\", minWidth: \"150px\", maxWidth: \"300px\", padding: \"6px 25px\" }} onClick={async () => {\r\n                                await this.props.connectMetamask()\r\n                              }}><img src={fox} width=\"23\" height=\"23\" className=\"float-right\" alt=\"\" /><span className=\"float-left\">Metamask</span></Buttons>\r\n                            </div>\r\n                            <div className=\"center mt-2 mb-2\">\r\n                              <Buttons type=\"button\" variant=\"secondary\" style={{ height: \"50px\", width: \"100%\", minWidth: \"150px\", maxWidth: \"300px\", padding: \"6px 25px\" }} onClick={async () => {\r\n                                await this.props.connectCoin98()\r\n                              }}>\r\n                                <ImgNextGen\r\n                                  srcWebp={coin98}\r\n                                  width=\"23\" height=\"23\" className=\"float-right\" alt=\"\"\r\n                                />\r\n                                <span className=\"float-left\">Coin98</span></Buttons>\r\n                            </div>\r\n                            <div className=\"center mt-2 mb-4\">\r\n                              <Buttons type=\"button\" variant=\"secondary\" style={{ height: \"50px\", width: \"100%\", minWidth: \"150px\", maxWidth: \"300px\", padding: \"6px 25px\" }} onClick={async () => {\r\n                                await this.props.mobileWalletConnect()\r\n                              }}><img src={walletconnectlogo} width=\"26\" height=\"23\" className=\"float-right\" alt=\"\" /><span className=\"float-left\">WalletConnect</span></Buttons>\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                      </Popup>\r\n                    </div>}\r\n                </div>&nbsp;\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </Nav>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navb;\r\n","import React, { Component } from 'react'\nimport MediaQuery from 'react-responsive';\nimport Buttons from 'react-bootstrap/Button'\nimport { Link } from 'react-router-dom';\nimport { NavLink } from 'react-router-dom';\nimport { Navbar, Nav, Container } from 'react-bootstrap';\nimport Popup from 'reactjs-popup';\nimport ImgNextGen from './ImgNextGen';\nimport { slide as Menu } from 'react-burger-menu'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport 'reactjs-popup/dist/index.css';\nimport './App.css';\n\nimport baklava from './images/baklava.webp';\nimport coin98 from './images/coin98.webp';\nimport logo from './images/logo.webp';\nimport fox from './images/metamask-fox.svg';\nimport walletconnectlogo from './images/walletconnect-logo.svg';\n\n\nclass Navb extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      show2: false,\n      show: false,\n    }\n    this.showDropdown = this.showDropdown.bind(this)\n    this.hideDropdown = this.hideDropdown.bind(this)\n    this.show2Dropdown = this.show2Dropdown.bind(this)\n    this.hide2Dropdown = this.hide2Dropdown.bind(this)\n  }\n\n  showDropdown(i) {\n    let show = this.state.show\n    this.setState({ show: true })  //do ntg, just to push react setstate\n  }\n\n  hideDropdown() {\n    this.setState({ show: false })  //do ntg, just to push react setstate\n  }\n\n  show2Dropdown(i) {\n    let show2 = this.state.show2\n    this.setState({ show2: true })  //do ntg, just to push react setstate\n\n  }\n\n  hide2Dropdown() {\n    this.setState({ show2: false })  //do ntg, just to push react setstate\n  }\n\n  delay = ms => new Promise(res => setTimeout(res, ms));\n\n  render() {\n\n    const contentStyle = { background: '#fffae6', border: \"1px solid #596169\", width: \"30%\", borderRadius: \"15px\", minWidth: \"320px\" };\n\n    return (\n      <Navbar className=\"navbar top\" style={{ height: \"80px\", position: \"fixed\", width: \"100%\", top: \"0\", zIndex: \"999\", backgroundColor: \"#fffae6\" }}>\n        <Nav>\n          <MediaQuery maxWidth={1050}  >\n            <Menu>\n              <div className='dropdown0'><NavLink className='dropdown' to='/menu/v2/' activeStyle={{ fontWeight: \"bold\", color: \"#ffae00\" }}>Farm</NavLink></div>\n              <div className='dropdown0'><NavLink className='dropdown' to='/stake/' activeStyle={{ fontWeight: \"bold\", color: \"#ffae00\" }}>Stake</NavLink></div>\n              {/* <div className='dropdown0'><NavLink className='dropdown' to='/claim/' activeStyle={{ fontWeight: \"bold\", color: \"#ffae00\" }}>Claim</NavLink></div> */}\n              {/* <div className='dropdown0'><NavLink className='dropdown' to='/collateral/' activeStyle={{ fontWeight: \"bold\", color: \"#ffae00\" }}>Collateral</NavLink></div> */}\n              <div className='dropdown0'><NavLink className='dropdown' to='/litepaper/' activeStyle={{ fontWeight: \"bold\", color: \"#ffae00\" }}>LitePaper</NavLink></div>\n              <div className='dropdown0'><NavLink className='dropdown' to='/synthetic/' activeStyle={{ fontWeight: \"bold\", color: \"#ffae00\" }}>Synthetic</NavLink></div>\n            </Menu>\n          </MediaQuery>\n\n          <MediaQuery minWidth={1051}>\n            <NavLink className=\"topleft\" to=\"/\">\n              <ImgNextGen\n                srcWebp={baklava}\n                width=\"35\" alt=\"\"\n              />\n            </NavLink>\n          </MediaQuery>\n          <MediaQuery minWidth={501}>\n            <NavLink className=\"topleft1 textMiddleBold2 reallyBold\" to=\"/\"><b>BAKLAVA.SPACE</b></NavLink>\n          </MediaQuery>\n          <MediaQuery minWidth={280} maxWidth={500}>\n            <NavLink className=\"topleft1 textMiddleBold2 reallyBold\" to=\"/\"><b>BAKLAVA</b></NavLink>\n          </MediaQuery>\n\n\n          <div className=\"rowS topleft2\" style={{ textDecoration: 'none' }}>\n            <MediaQuery minWidth={1051}>\n              <div style={{ marginLeft: \"25px\" }} >\n                <Dropdown style={{ padding: \"0px\" }}\n                  onMouseEnter={this.showDropdown}\n                  onMouseLeave={this.hideDropdown}\n                  show={this.state.show}\n                >\n                  <Dropdown.Toggle className='center cell2' variant=\"transparent\" style={{ paddingLeft: \"10px\" }}>\n                    <NavLink className=\"textSmallBold1\" activeClassName=\"\" activeStyle={{ fontWeight: \"bold\", color: \"#ffae00\" }} to=\"/menu/v2/\">Farm &#8595;</NavLink>\n                  </Dropdown.Toggle>\n                  <Dropdown.Menu style={{ backgroundColor: \"#fffae6\", marginTop: \"0px\", padding: '0px', minWidth: '7rem' }}>\n                    <Dropdown.Item as={Link} to=\"/menu/\" className='cell2' style={{ padding: '0px', marginLeft: \"8px\", width: '50px' }}>\n                      <div className=\"dropdown center\" style={{ fontSize: '16px', marginLeft: \"20px\" }}>Version 1</div>\n                    </Dropdown.Item>\n                    <Dropdown.Divider style={{ marginTop: \"4px\", marginBottom: '4px' }} />\n                    <Dropdown.Item as={Link} to=\"/menu/v2/\" className='cell2' style={{ padding: '0px', marginLeft: \"8px\", width: '50px' }}>\n                      <div className=\"dropdown center\" style={{ fontSize: '16px', marginLeft: \"20px\" }}>Version 2</div>\n                    </Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>\n              </div>\n\n              <div\n                style={{ marginLeft: \"10px\" }}\n              ><NavLink className=\"textSmallBold1\" activeClassName=\" \" activeStyle={{ fontWeight: \"bold\", color: \"#ffae00\" }} to=\"/stake/\">Stake</NavLink></div>\n              {/* <div\n                style={{ marginLeft: \"20px\" }}\n              ><NavLink className=\"textSmallBold1\" activeClassName=\" \" activeStyle={{ fontWeight: \"bold\", color: \"#ffae00\" }} to=\"/claim/\">Claim</NavLink></div> */}\n              {/* <div\n                style={{ marginLeft: \"20px\" }}\n              ><NavLink className=\"textSmallBold1\" activeClassName=\" \" activeStyle={{ fontWeight: \"bold\", color: \"#ffae00\" }} to=\"/collateral/\">Collateral</NavLink></div> */}\n              <div\n                style={{ marginLeft: \"20px\" }}\n              ><NavLink className=\"textSmallBold1\" activeClassName=\" \" activeStyle={{ fontWeight: \"bold\", color: \"#ffae00\" }} to=\"/litepaper/\">LitePaper</NavLink></div>\n              <div\n                style={{ marginLeft: \"20px\" }}\n              ><NavLink className=\"textSmallBold1\" activeClassName=\" \" activeStyle={{ fontWeight: \"bold\", color: \"#ffae00\" }} to=\"/synthetic/\">Synthetic</NavLink></div>\n            </MediaQuery>\n          </div>\n\n\n          <div>\n            <div >\n              <ul className=\"topright rowC\">\n                <MediaQuery minWidth={401}>\n                  <div className=\"center\" style={{ marginTop: '2px', marginRight: '12px' }}>\n                    <ImgNextGen\n                      srcWebp={logo}\n                      style={{ marginLeft: '0px', marginRight: '5px' }} width=\"25\" height=\"25\" alt=\"\"\n                    />\n                    <div className=\"textbavaPriceBold\" onClick={() => {\n                      window.open(`https://kyberswap.com/swap/avalanche/avax-to-bava`, '_blank')\n                    }}><b>${this.props.BAVAPrice}</b></div>\n                  </div>\n                </MediaQuery>\n                <MediaQuery minWidth={601}>\n                  <div>\n                    <Buttons className=\"textWhiteLarge center\" style={{ height: '30px', marginRight: '8px' }} variant=\"secondary\" size=\"lg\">&nbsp;Avalanche&nbsp;</Buttons>\n                  </div>\n                </MediaQuery>\n                <div>\n                  {this.props.wallet || this.props.walletConnect ?\n                    <Dropdown\n                      onMouseEnter={this.show2Dropdown}\n                      onMouseLeave={this.hide2Dropdown}\n                      show={this.state.show2}\n                      autoClose=\"outside\"\n                      style={{ padding: '0px', paddingBottom: \"5px\" }}\n                    >\n                      <Dropdown.Toggle className='textWhiteLarge center cell2' variant=\"warning\" size=\"sm\" style={{ backgroundColor: \"#ffc107\", width: '110px', height: '30px' }}>\n                        <div>{this.props.first4Account}...{this.props.last4Account}</div>\n                      </Dropdown.Toggle>\n\n                      <Dropdown.Menu style={{ backgroundColor: \"#fffae6\", margin: \"0px\", padding: '5px', minWidth: '110px', maxWidth: '110px' }}>\n                        <Dropdown.Item className=\"cell2 dropdown0\" style={{ margin: '0px', padding: '5px', fontSize: '16px' }}>\n                          <div onClick={() => {\n                            window.open(`https://snowtrace.io/address/${this.props.account}`, '_blank')\n                          }}>Wallet</div>\n                        </Dropdown.Item>\n                        <Dropdown.Item className=\"cell2 dropdown\" style={{ margin: '0px', padding: '5px', fontSize: '16px' }}>\n                          <div onClick={async () => {\n                            this.props.setWalletTrigger(false)\n                            if (this.props.walletConnect == true) {\n                              await this.props.WalletDisconnect()\n                            }\n                            await this.hide2Dropdown()\n                          }}>Disconnect</div>\n                        </Dropdown.Item>\n                      </Dropdown.Menu>\n                    </Dropdown>\n                    : <div>\n                      <Popup trigger={open => (<Buttons className=\"textWhiteLarge center\" style={{ width: '110px', height: '30px' }} variant=\"warning\" size=\"lg\" >Connect</Buttons>)} modal {...{ contentStyle }}>\n                        {close => (\n                          <div>\n                            <Buttons className=\"close cell2\" style={{ background: \"#fffae6\", borderRadius: \"12px\", padding: \"2px 5px\", fontSize: \"18px\" }} onClick={close}>\n                              &times;\n                            </Buttons>\n                            <div className=\"textWhiteMedium mb-2\" style={{ borderBottom: \"1px Solid Gray\", padding: \"10px\" }}> Connect a Wallet </div>\n                            <div className=\"center mt-4 mb-2\">\n                              <Buttons type=\"button\" variant=\"secondary\" style={{ height: \"50px\", width: \"100%\", minWidth: \"150px\", maxWidth: \"300px\", padding: \"6px 25px\" }} onClick={async () => {\n                                await this.props.connectMetamask()\n                              }}><img src={fox} width=\"23\" height=\"23\" className=\"float-right\" alt=\"\" /><span className=\"float-left\">Metamask</span></Buttons>\n                            </div>\n                            <div className=\"center mt-2 mb-2\">\n                              <Buttons type=\"button\" variant=\"secondary\" style={{ height: \"50px\", width: \"100%\", minWidth: \"150px\", maxWidth: \"300px\", padding: \"6px 25px\" }} onClick={async () => {\n                                await this.props.connectCoin98()\n                              }}>\n                                <ImgNextGen\n                                  srcWebp={coin98}\n                                  width=\"23\" height=\"23\" className=\"float-right\" alt=\"\"\n                                />\n                                <span className=\"float-left\">Coin98</span></Buttons>\n                            </div>\n                            <div className=\"center mt-2 mb-4\">\n                              <Buttons type=\"button\" variant=\"secondary\" style={{ height: \"50px\", width: \"100%\", minWidth: \"150px\", maxWidth: \"300px\", padding: \"6px 25px\" }} onClick={async () => {\n                                await this.props.mobileWalletConnect()\n                              }}><img src={walletconnectlogo} width=\"26\" height=\"23\" className=\"float-right\" alt=\"\" /><span className=\"float-left\">WalletConnect</span></Buttons>\n                            </div>\n                          </div>\n                        )}\n                      </Popup>\n                    </div>}\n                </div>&nbsp;\n              </ul>\n            </div>\n          </div>\n        </Nav>\n      </Navbar>\n    );\n  }\n}\n\nexport default Navb;\n","import React, { Component } from 'react'\r\nimport MediaQuery from 'react-responsive';\r\nimport { Link } from 'react-router-dom';\r\nimport ImgNextGen from './ImgNextGen';\r\nimport './App.css';\r\nimport baklava from './images/baklava.webp';\r\nimport baklava_mainBottom_removebg from './images/baklava_mainBottom_removebg.webp';\r\nimport joe from './images/joe.webp';\r\nimport pangolin from './images/pangolin.webp';\r\nimport kyber from './images/kyber.webp';\r\n\r\nimport discord from './images/discord.svg';\r\nimport docs from './images/docs.svg';\r\nimport github from './images/github.svg';\r\nimport medium from './images/medium.svg';\r\nimport twitter from './images/twitter.svg';\r\n\r\n\r\nclass Main extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"content\">\r\n        <MediaQuery minWidth={771}>\r\n          <div className=\"text-center\" style={{ marginTop: \"35px\" }}>\r\n            <ImgNextGen\r\n              srcWebp={baklava}\r\n              width=\"200\" height=\"200\" className=\"\" alt=\"\"\r\n            />\r\n          </div>\r\n          <div className=\"center text\" style={{ fontSize: \"45px\" }}>BAKLAVA SPACE</div>\r\n          <div className=\"center textMiddleBold\" style={{ fontSize: \"25px\", marginTop: \"5px\" }}><b>Baklava stands for \"layered, rich, and sweet\". </b></div>\r\n          <div className=\"center textMiddle\" style={{ fontSize: \"18px\", marginTop: \"10px\" }}>Baklava Space is designed as a combination of automated yield farming</div>\r\n          <div className=\"center textMiddle\" style={{ fontSize: \"18px\" }}>for your LP tokens and a synthetic creation mechainsm using LP tokens.</div>\r\n          <div className=\"center\" style={{ marginTop: \"40px\" }} >\r\n            <Link className=\"exLink0\" style={{ marginRight: '35px' }} to={{ pathname: \"https://traderjoexyz.com/#/home\" }} target=\"_blank\">\r\n              <div className=\"center mb-2\">\r\n                <ImgNextGen\r\n                  srcWebp={joe}\r\n                  width=\"50\" height=\"50\" align=\"right\" alt=\"\"\r\n                />\r\n              </div>\r\n            </Link>\r\n            <Link className=\"exLink0\" style={{ marginRight: '33px' }} to={{ pathname: \"https://app.pangolin.exchange/\" }} target=\"_blank\">\r\n              <div className=\"center mb-2\">\r\n                <ImgNextGen\r\n                  srcWebp={pangolin}\r\n                  width=\"50\" height=\"50\" align=\"right\" alt=\"\"\r\n                />\r\n              </div>\r\n            </Link>\r\n            <Link className=\"exLink0\" to={{ pathname: \"https://kyberswap.com/#/about/\" }} target=\"_blank\">\r\n              <div className=\"center mb-2\">\r\n                <ImgNextGen\r\n                  srcWebp={kyber}\r\n                  width=\"50\" height=\"50\" align=\"right\" alt=\"\"\r\n                />\r\n              </div>\r\n            </Link>\r\n          </div>\r\n          <MediaQuery minHeight={700}>\r\n            <ImgNextGen\r\n              srcWebp={baklava_mainBottom_removebg}\r\n              alt=\"\"\r\n              height=\"8%\" width=\"100%\" className=\"fixed-bottom\"\r\n            />\r\n          </MediaQuery>\r\n        </MediaQuery>\r\n\r\n\r\n        <MediaQuery minWidth={401} maxWidth={770}>\r\n          <div style={{ minWidth: \"300px\" }} >\r\n            <div className=\"center\">\r\n              <ImgNextGen\r\n                srcWebp={baklava}\r\n                width=\"180\" height=\"180\" className=\"\" alt=\"\"\r\n              />\r\n            </div>\r\n            <div className=\"center text\" style={{ fontSize: \"40px\" }}>BAKLAVA SPACE</div>\r\n            <div className=\"center textMiddleBold ml-3 mr-3\" style={{ fontSize: \"23px\", marginTop: \"5px\" }}><b>Baklava stands for \"layered, rich, and sweet\". </b></div>\r\n            <div className=\"center textMiddle ml-3 mr-3\" style={{ fontSize: \"16px\", marginTop: \"10px\" }}>Baklava Space is designed as a combination of automated yield farming for your LP tokens and a synthetic creation mechainsm using LP tokens.</div>\r\n            <div className=\"center\" style={{ marginTop: \"40px\" }} >\r\n              <Link className=\"exLink0\" style={{ marginRight: '35px' }} to={{ pathname: \"https://traderjoexyz.com/#/home\" }} target=\"_blank\">\r\n                <div className=\"center mb-2\">\r\n                  <ImgNextGen\r\n                    srcWebp={joe}\r\n                    width=\"45\" height=\"45\" align=\"right\" alt=\"\"\r\n                  />\r\n                </div>\r\n              </Link>\r\n              <Link className=\"exLink0\" style={{ marginRight: '33px' }} to={{ pathname: \"https://app.pangolin.exchange/\" }} target=\"_blank\">\r\n                <div className=\"center mb-2\">\r\n                  <ImgNextGen\r\n                    srcWebp={pangolin}\r\n                    width=\"45\" height=\"45\" align=\"right\" alt=\"\"\r\n                  />\r\n                </div>\r\n              </Link>\r\n              <Link className=\"exLink0\" to={{ pathname: \"https://kyberswap.com/#/about/\" }} target=\"_blank\">\r\n                <div className=\"center mb-2\">\r\n                  <ImgNextGen\r\n                    srcWebp={kyber}\r\n                    width=\"45\" height=\"45\" align=\"right\" alt=\"\"\r\n                  />\r\n                </div>\r\n              </Link>\r\n            </div>\r\n            <MediaQuery minHeight={701}>\r\n              <div className=\"center fixed-bottom\" style={{ marginBottom: \"30px\" }}>\r\n                <div className=\"rowC\">\r\n                  <Link className=\"exLink0\" style={{ marginRight: '40px' }} to={{ pathname: \"https://baklavaspace.gitbook.io/\" }} target=\"_blank\">\r\n                    <div className=\"center mb-2\"><img src={docs} width=\"20\" height=\"20\" align=\"right\" alt=\"\" /></div>\r\n                  </Link>\r\n                  <Link className=\"exLink0\" style={{ marginRight: '40px' }} to={{ pathname: \"https://twitter.com/baklavaspace\" }} target=\"_blank\">\r\n                    <div className=\"center mb-2\"><img src={twitter} width=\"20\" height=\"20\" align=\"right\" alt=\"\" /></div>\r\n                  </Link>\r\n                  <Link className=\"exLink0\" style={{ marginRight: '40px' }} to={{ pathname: \"https://medium.com/@baklavaspace\" }} target=\"_blank\">\r\n                    <div className=\"center mb-2\"><img src={medium} width=\"20\" height=\"20\" align=\"right\" alt=\"\" /></div>\r\n                  </Link>\r\n                  <Link className=\"exLink0\" style={{ marginRight: '40px' }} to={{ pathname: \"https://github.com/baklavaspace\" }} target=\"_blank\">\r\n                    <div className=\"center mb-2\"><img src={github} width=\"20\" height=\"20\" align=\"right\" alt=\"\" /></div>\r\n                  </Link>\r\n                  <Link className=\"exLink0\" style={{ marginRight: '' }} to={{ pathname: \"https://discord.gg/E6aYX5ukAw\" }} target=\"_blank\">\r\n                    <div className=\"center mb-2\"><img src={discord} width=\"20\" height=\"20\" align=\"right\" alt=\"\" /></div>\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </MediaQuery>\r\n            <MediaQuery maxHeight={700}>\r\n              <div className=\"center\" style={{ marginTop: \"60px\" }}>\r\n                <div className=\"rowC\">\r\n                  <Link className=\"exLink0\" style={{ marginRight: '40px' }} to={{ pathname: \"https://baklavaspace.gitbook.io/\" }} target=\"_blank\">\r\n                    <div className=\"center mb-2\"><img src={docs} width=\"20\" height=\"20\" align=\"right\" alt=\"\" /></div>\r\n                  </Link>\r\n                  <Link className=\"exLink0\" style={{ marginRight: '40px' }} to={{ pathname: \"https://twitter.com/baklavaspace\" }} target=\"_blank\">\r\n                    <div className=\"center mb-2\"><img src={twitter} width=\"20\" height=\"20\" align=\"right\" alt=\"\" /></div>\r\n                  </Link>\r\n                  <Link className=\"exLink0\" style={{ marginRight: '40px' }} to={{ pathname: \"https://medium.com/@baklavaspace\" }} target=\"_blank\">\r\n                    <div className=\"center mb-2\"><img src={medium} width=\"20\" height=\"20\" align=\"right\" alt=\"\" /></div>\r\n                  </Link>\r\n                  <Link className=\"exLink0\" style={{ marginRight: '40px' }} to={{ pathname: \"https://github.com/baklavaspace\" }} target=\"_blank\">\r\n                    <div className=\"center mb-2\"><img src={github} width=\"20\" height=\"20\" align=\"right\" alt=\"\" /></div>\r\n                  </Link>\r\n                  <Link className=\"exLink0\" style={{ marginRight: '' }} to={{ pathname: \"https://discord.gg/E6aYX5ukAw\" }} target=\"_blank\">\r\n                    <div className=\"center mb-2\"><img src={discord} width=\"20\" height=\"20\" align=\"right\" alt=\"\" /></div>\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n              <br />\r\n            </MediaQuery>\r\n          </div>\r\n        </MediaQuery>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        <MediaQuery maxWidth={400}>\r\n          <div style={{ minWidth: \"300px\" }}>\r\n            <div className=\"text-center\">\r\n              <ImgNextGen\r\n                srcWebp={baklava}\r\n                width=\"180\" height=\"180\" className=\"\" alt=\"\"\r\n              />\r\n            </div>\r\n            <div className=\"center text\" style={{ fontSize: \"35px\" }}>BAKLAVA SPACE</div>\r\n            <div className=\"center textMiddleBold ml-3 mr-3\" style={{ fontSize: \"20px\" }}><b>Baklava stands for \"layered, rich, and sweet\". </b></div>\r\n            <div className=\"center textMiddle ml-3 mr-3\" style={{ fontSize: \"15px\" }}>Baklava Space is designed as a combination of automated yield farming for your LP tokens and a synthetic creation mechainsm using LP tokens.</div>\r\n            <div className=\"center\" style={{ marginTop: \"30px\" }} >\r\n              <Link className=\"exLink0\" style={{ marginRight: '35px' }} to={{ pathname: \"https://traderjoexyz.com/#/home\" }} target=\"_blank\">\r\n                <div className=\"center mb-2\">\r\n                  <ImgNextGen\r\n                    srcWebp={joe}\r\n                    width=\"40\" height=\"40\" align=\"right\" alt=\"\"\r\n                  />\r\n                </div>\r\n              </Link>\r\n              <Link className=\"exLink0\" style={{ marginRight: '33px' }} to={{ pathname: \"https://app.pangolin.exchange/\" }} target=\"_blank\">\r\n                <div className=\"center mb-2\">\r\n                  <ImgNextGen\r\n                    srcWebp={pangolin}\r\n                    width=\"40\" height=\"40\" align=\"right\" alt=\"\"\r\n                  />\r\n                </div>\r\n              </Link>\r\n              <Link className=\"exLink0\" to={{ pathname: \"https://kyberswap.com/#/about/\" }} target=\"_blank\">\r\n                <div className=\"center mb-2\">\r\n                  <ImgNextGen\r\n                    srcWebp={kyber}\r\n                    width=\"40\" height=\"40\" align=\"right\" alt=\"\"\r\n                  />\r\n                </div>\r\n              </Link>\r\n            </div>\r\n            <MediaQuery minHeight={701}>\r\n              <div className=\"center fixed-bottom\" style={{ marginBottom: \"30px\" }}>\r\n                <div className=\"rowC\">\r\n                  <Link className=\"exLink0\" style={{ marginRight: '40px' }} to={{ pathname: \"https://baklavaspace.gitbook.io/\" }} target=\"_blank\">\r\n                    <div className=\"center mb-2\"><img src={docs} width=\"20\" height=\"20\" align=\"right\" alt=\"\" /></div>\r\n                  </Link>\r\n                  <Link className=\"exLink0\" style={{ marginRight: '40px' }} to={{ pathname: \"https://twitter.com/baklavaspace\" }} target=\"_blank\">\r\n                    <div className=\"center mb-2\"><img src={twitter} width=\"20\" height=\"20\" align=\"right\" alt=\"\" /></div>\r\n                  </Link>\r\n                  <Link className=\"exLink0\" style={{ marginRight: '40px' }} to={{ pathname: \"https://medium.com/@baklavaspace\" }} target=\"_blank\">\r\n                    <div className=\"center mb-2\"><img src={medium} width=\"20\" height=\"20\" align=\"right\" alt=\"\" /></div>\r\n                  </Link>\r\n                  <Link className=\"exLink0\" style={{ marginRight: '40px' }} to={{ pathname: \"https://github.com/baklavaspace\" }} target=\"_blank\">\r\n                    <div className=\"center mb-2\"><img src={github} width=\"20\" height=\"20\" align=\"right\" alt=\"\" /></div>\r\n                  </Link>\r\n                  <Link className=\"exLink0\" style={{ marginRight: '' }} to={{ pathname: \"https://discord.gg/E6aYX5ukAw\" }} target=\"_blank\">\r\n                    <div className=\"center mb-2\"><img src={discord} width=\"20\" height=\"20\" align=\"right\" alt=\"\" /></div>\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </MediaQuery>\r\n            <MediaQuery maxHeight={700}>\r\n              <div className=\"center\" style={{ marginTop: \"60px\" }}>\r\n                <div className=\"rowC\">\r\n                  <Link className=\"exLink0\" style={{ marginRight: '40px' }} to={{ pathname: \"https://baklavaspace.gitbook.io/\" }} target=\"_blank\">\r\n                    <div className=\"center mb-2\"><img src={docs} width=\"20\" height=\"20\" align=\"right\" alt=\"\" /></div>\r\n                  </Link>\r\n                  <Link className=\"exLink0\" style={{ marginRight: '40px' }} to={{ pathname: \"https://twitter.com/baklavaspace\" }} target=\"_blank\">\r\n                    <div className=\"center mb-2\"><img src={twitter} width=\"20\" height=\"20\" align=\"right\" alt=\"\" /></div>\r\n                  </Link>\r\n                  <Link className=\"exLink0\" style={{ marginRight: '40px' }} to={{ pathname: \"https://medium.com/@baklavaspace\" }} target=\"_blank\">\r\n                    <div className=\"center mb-2\"><img src={medium} width=\"20\" height=\"20\" align=\"right\" alt=\"\" /></div>\r\n                  </Link>\r\n                  <Link className=\"exLink0\" style={{ marginRight: '40px' }} to={{ pathname: \"https://github.com/baklavaspace\" }} target=\"_blank\">\r\n                    <div className=\"center mb-2\"><img src={github} width=\"20\" height=\"20\" align=\"right\" alt=\"\" /></div>\r\n                  </Link>\r\n                  <Link className=\"exLink0\" style={{ marginRight: '' }} to={{ pathname: \"https://discord.gg/E6aYX5ukAw\" }} target=\"_blank\">\r\n                    <div className=\"center mb-2\"><img src={discord} width=\"20\" height=\"20\" align=\"right\" alt=\"\" /></div>\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n              <br />\r\n            </MediaQuery>\r\n          </div>\r\n        </MediaQuery>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React, { Component } from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\nimport MediaQuery from 'react-responsive'\r\nimport bigInt from 'big-integer'\r\nimport 'reactjs-popup/dist/index.css'\r\nimport './App.css'\r\n\r\nimport ImgNextGen from './ImgNextGen'\r\nimport baklava from './images/baklava.webp'\r\nimport pangolin from './images/pangolin.webp'\r\nimport kyber from './images/kyber.webp'\r\nimport joe from './images/joe.webp'\r\n\r\nclass Deposit extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      message: '',\r\n      txValidAmount: false,\r\n      txApprovedValidAmount: false\r\n    }\r\n    this.changeHandler = this.changeHandler.bind(this)\r\n    this.changeHandlerLp = this.changeHandlerLp.bind(this)\r\n  }\r\n\r\n  changeHandler(event) {\r\n    let result = !isNaN(+event); // true if its a number, false if not\r\n    if (event == \"\") {\r\n      this.setState({\r\n        message: '',\r\n        txValidAmount: false\r\n      })\r\n    } else if (result == false) {\r\n      this.setState({\r\n        message: 'Not a valid number',\r\n        txValidAmount: false\r\n      })\r\n    } else if (this.countDecimals(event) > 18) {\r\n      this.setState({\r\n        message: 'Input decimal more than 18.',\r\n        txValidAmount: false\r\n      })\r\n    } else if (event <= 0) {\r\n      this.setState({\r\n        message: 'Value need to be greater than 0',\r\n        txValidAmount: false\r\n      })\r\n    } else if (bigInt(window.web3Ava.utils.toWei(event, 'ether')).value > bigInt(this.props.lpBalanceAccount[this.props.n][this.props.i]).value) {\r\n      this.setState({\r\n        message: 'Value more than Wallet.',\r\n        txValidAmount: false\r\n      })\r\n    } else {\r\n      this.setState({\r\n        message: '',\r\n        txValidAmount: true\r\n      })\r\n    }\r\n  }\r\n\r\n  changeHandlerLp(event) {\r\n    let result = !isNaN(+event); // true if its a number, false if not\r\n    if (event == \"\") {\r\n      this.setState({\r\n        txApprovedValidAmount: false\r\n      })\r\n    } else if (result == false) {\r\n      this.setState({\r\n        txApprovedValidAmount: false\r\n      })\r\n    } else if (this.countDecimals(event) > 18) {\r\n      this.setState({\r\n        txApprovedValidAmount: false\r\n      })\r\n    } else {\r\n      this.setState({\r\n        txApprovedValidAmount: true\r\n      })\r\n    }\r\n  }\r\n\r\n  countDecimals(x) {\r\n    if (Math.floor(x.valueOf()) === x.valueOf()) return 0;\r\n\r\n    var str = x.toString();\r\n    if (str.indexOf(\".\") !== -1 && str.indexOf(\"-\") !== -1) {\r\n      return str.split(\"-\")[1] || 0;\r\n    } else if (str.indexOf(\".\") !== -1) {\r\n      return str.split(\".\")[1].length || 0;\r\n    }\r\n    return str.split(\"-\")[1] || 0;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"content\">\r\n        <div className=\"text-center\">\r\n        </div>\r\n        <form className=\"mb-1\" onSubmit={(event) => {\r\n          event.preventDefault()\r\n          if (this.state.txValidAmount === false) {\r\n            alert(\"Invalid input! PLease check your input again\")\r\n          } else {\r\n            let amount\r\n            amount = this.input.value.toString()\r\n            amount = window.web3Ava.utils.toWei(amount, 'Ether')\r\n\r\n            this.props.deposit(this.props.i, amount, this.props.n, this.props.v)\r\n          }\r\n\r\n        }}>\r\n          <div>\r\n            <div className=\"input-group mb-2\">\r\n              {(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ?\r\n                <input\r\n                  type=\"number\"\r\n                  id=\"inputColor\"\r\n                  step=\"any\"\r\n                  ref={(input) => { this.input = input }}\r\n                  style={{ fontSize: '18px', backgroundColor: '#fffcf0' }}\r\n                  className=\"form-control cell cardbody\"\r\n                  placeholder=\"0\"\r\n                  onKeyPress={(event) => {\r\n                    if (!/[0-9.]/.test(event.key)) {\r\n                      event.preventDefault();\r\n                    }\r\n                  }}\r\n                  onChange={(e) => {\r\n                    const value = e.target.value;\r\n                    this.changeHandler(value)\r\n                    this.changeHandlerLp(value)\r\n                  }}\r\n                  required />\r\n                : <input\r\n                  type=\"number\"\r\n                  id=\"inputColor\"\r\n                  style={{ fontSize: '18px', backgroundColor: '#fffcf0', cursor: 'not-allowed' }}\r\n                  placeholder=\"0\"\r\n                  className=\"form-control cell cardbody\"\r\n                  disabled />}\r\n              <div className=\"input-group-append\" >\r\n                <div className=\"input-group-text cardbodyLeft\" style={{ padding: '0 0.5rem' }}>\r\n                  <Button className=\"textTransparentButton2\" size=\"sm\" onClick={(event1) => {\r\n                    this.state.txValidAmount = true\r\n                    // this.setState({ message: \"\" })\r\n                    this.input.value = window.web3Ava.utils.fromWei(this.props.lpBalanceAccount[this.props.n][this.props.i], 'Ether')\r\n                    this.changeHandler(this.input.value)\r\n                    this.changeHandlerLp(this.input.value)\r\n                  }}>Max</Button>\r\n                </div>\r\n                <div className=\"input-group-text cardbody\" style={{ padding: '0 0.5rem' }}>\r\n                  {this.props.poolSegmentInfo[this.props.n][this.props.i].platform == 'Pangolin' ?\r\n                    <ImgNextGen srcWebp={pangolin} height='30' className=\"\" alt=\"\" />\r\n                    : <div>{this.props.poolSegmentInfo[this.props.n][this.props.i].platform == 'KyberSwap' ? <ImgNextGen srcWebp={kyber} height='30' className=\"\" alt=\"\" />\r\n                      : <ImgNextGen srcWebp={joe} height='30' className=\"\" alt=\"\" />}</div>}\r\n                </div>\r\n              </div >\r\n            </div >\r\n            <div style={{ color: 'red' }}>{this.state.message} </div>\r\n\r\n            <div className=\"mt-3\">\r\n              <MediaQuery minWidth={651} className=\"rowC\">\r\n                <div className=\"float-left\" style={{ color: 'grey' }}>\r\n                  <ImgNextGen\r\n                    srcWebp={baklava}\r\n                    style={{ marginRight: '5px' }} height='20' alt=\"\"\r\n                  />\r\n                  <small>Automatically harvest BAVA rewards when deposit</small></div>\r\n                <div style={{ minWidth: '150px' }}>\r\n                  <div className=\"float-right\" >\r\n                    {this.state.txValidAmount === true ?\r\n                      <div>{bigInt(this.props.lpSegmentAllowanceV2_3).value >= bigInt(window.web3Ava.utils.toWei(this.input.value, 'Ether')).value ?\r\n                        <Button type=\"submit\" className=\"btn btn-primary btn-sm\" style={{ height: '32px', fontSize: '15px' }}>Confirm</Button>\r\n                        : <Button className=\"textDarkMedium1 btn-sm\" variant=\"outline\" style={{ height: '32px', fontSize: '15px' }}>Confirm</Button>}</div>\r\n                      : <Button className=\"textDarkMedium1 btn-sm\" variant=\"outline\" style={{ height: '32px', fontSize: '15px' }}>Confirm</Button>}\r\n                  </div>\r\n                  <div className=\"float-right mr-1\">\r\n                    {this.state.txApprovedValidAmount === true ?\r\n                      <div>{bigInt(this.props.lpSegmentAllowanceV2_3).value < bigInt(window.web3Ava.utils.toWei(this.input.value, 'Ether')).value ? <Button className=\"btn btn-primary btn-sm\" style={{ height: '32px', fontSize: '15px' }} onClick={(event) => {\r\n                        this.props.approve(this.props.i, this.props.n, this.props.v)\r\n                      }}>Approve</Button>\r\n                        : <Button className=\"textDarkMedium1 btn-sm\" style={{ height: '32px', fontSize: '15px' }} variant=\"outline\">Approved</Button>}</div>\r\n                      : <Button className=\"textDarkMedium1 btn-sm\" style={{ height: '32px', fontSize: '15px' }} variant=\"outline\">Approved</Button>}\r\n                  </div>\r\n                </div>\r\n              </MediaQuery>\r\n\r\n              <MediaQuery maxWidth={650}>\r\n                <div className=\"float-left mr-1\">{this.state.txApprovedValidAmount === true ?\r\n                  <div>{bigInt(this.props.lpSegmentAllowanceV2_3).value < bigInt(window.web3Ava.utils.toWei(this.input.value, 'Ether')).value ?\r\n                    <Button className=\"btn btn-primary btn-sm\" style={{ height: '32px', fontSize: '15px' }} onClick={(event) => {\r\n                      this.props.approve(this.props.i, this.props.n, this.props.v)\r\n                    }}>Approve</Button>\r\n                    : <Button className=\"textDarkMedium1 btn-sm\" style={{ height: '32px', fontSize: '15px' }} variant=\"outline\">Approved</Button>}</div>\r\n                  : <Button className=\"textDarkMedium1 btn-sm\" style={{ height: '32px', fontSize: '15px' }} variant=\"outline\">Approved</Button>}\r\n                </div>\r\n                <div className=\"left mr-1\" >{this.state.txValidAmount === true ?\r\n                  <div>{bigInt(this.props.lpSegmentAllowanceV2_3).value > bigInt(window.web3Ava.utils.toWei(this.input.value, 'Ether')).value ?\r\n                    <Button type=\"submit\" className=\"btn btn-primary btn-sm\" style={{ height: '32px', fontSize: '15px' }}>Confirm</Button> : <Button className=\"textDarkMedium1 btn-sm\" variant=\"outline\" style={{ height: '32px', fontSize: '15px' }}>Confirm</Button>} </div>\r\n                  : <Button className=\"textDarkMedium1 btn-sm\" variant=\"outline\" style={{ height: '32px', fontSize: '15px' }}>Confirm</Button>}</div>\r\n                <div className=\"left mt-2\" style={{ color: 'grey' }}>\r\n                  <ImgNextGen\r\n                    srcWebp={baklava}\r\n                    style={{ marginRight: '5px' }} height='20' alt=\"\"\r\n                  /><small>Automatically harvest BAVA rewards when deposit</small></div>\r\n              </MediaQuery>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Deposit;\r\n","import React, { Component } from 'react'\nimport './App.css';\nimport baklava from './images/baklava.webp';\nimport discord from './images/discord.svg'\nimport twitter from './images/twitter.svg'\nimport medium from './images/medium.svg'\nimport git from './images/github.svg'\nimport gitbook from './images/docs.svg'\n\nclass Footer extends Component {\n\n    render() {\n        return (\n            <footer id=\"content\" className=\"mt-5\">\n                <div style={{ marginTop: '18px' }}>\n                    <div className=\"rowS center \">\n                        <img className=\"center\" src={baklava} width=\"25\" alt=\"\" />&nbsp;&nbsp;\n                        <div className=\"center\" style={{ color: \"black\", fontSize: '16px', marginRight: \"25px\" }}><b>BAKLAVA.SPACE © 2022 </b></div>\n                    </div>\n                    <div className=\"center\" style={{ color: \"black\", fontSize: '14px', marginTop: \"5px\" }}>Tools for defi users.</div>\n                    <div className=\"center\" style={{ color: \"black\", fontSize: '14px', marginTop: \"5px\" }}>Baklava Farms autocompound farm rewards.</div>\n                    <div className=\"center\" style={{ color: \"black\", fontSize: '14px', marginTop: \"5px\" }}>Use at your own risk.</div>\n\n                    <div className=\"center\" style={{ marginTop: \"15px\" }}>\n                        <div className=\"rowC\">\n                            <div className=\"exLink0\" style={{ marginRight: '40px' }} onClick={() => {\n                                window.open(`https://baklavaspace.gitbook.io/`, '_blank')\n                            }}><div className=\"center mb-2\"><img src={gitbook} width=\"20\" height=\"20\" align=\"right\" alt=\"\" /></div>\n                            </div>\n                            <div className=\"exLink0\" style={{ marginRight: '40px' }} onClick={() => {\n                                window.open(`https://twitter.com/baklavaspace`, '_blank')\n                            }}><div className=\"center mb-2\"><img src={twitter} width=\"20\" height=\"20\" align=\"right\" alt=\"\" /></div>\n                            </div>\n                            <div className=\"exLink0\" style={{ marginRight: '40px' }} onClick={() => {\n                                window.open(`https://medium.com/@baklavaspace`, '_blank')\n                            }}><div className=\"center mb-2\"><img src={medium} width=\"20\" height=\"20\" align=\"right\" alt=\"\" /></div>\n                            </div>\n                            <div className=\"exLink0\" style={{ marginRight: '40px' }} onClick={() => {\n                                window.open(`https://github.com/baklavaspace`, '_blank')\n                            }}><div className=\"center mb-2\"><img src={git} width=\"20\" height=\"20\" align=\"right\" alt=\"\" /></div>\n                            </div>\n                            <div className=\"exLink0\" style={{ marginRight: '0px' }} onClick={() => {\n                                window.open(`https://discord.gg/E6aYX5ukAw`, '_blank')\n                            }}><div className=\"center mb-2\"><img src={discord} width=\"20\" height=\"20\" align=\"right\" alt=\"\" /></div>\n                            </div>\n                        </div>\n                    </div>\n                </div><br/>\n            </footer>\n        );\n    }\n}\n\nexport default Footer;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport exlink from './images/link.webp'\r\nimport Buttons from 'react-bootstrap/Button'\r\nimport { BsFillQuestionCircleFill } from 'react-icons/bs';\r\nimport Popup from 'reactjs-popup';\r\nimport 'reactjs-popup/dist/index.css';\r\nimport Deposit from './Deposit'\r\nimport './App.css';\r\nimport Footer from './Footer'\r\n\r\nclass Menu extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            farmV2_2Open: []\r\n        }\r\n        this.clickfarmOpen = this.clickfarmOpen.bind(this)\r\n    }\r\n\r\n    clickfarmOpen(pair, boolean) {\r\n        // this.setState({\r\n        //     farmV2_2Open[pair]: boolean\r\n        // })\r\n        let ntg = 0\r\n        this.state.farmV2_2Open[pair] = boolean\r\n        this.setState({ ntg })  //do ntg, just to push react setstate\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"content\" className=\"mt-3\" style={{ margin: \"0\", color: '#ff9a04' }}>\r\n                <div >\r\n                    <div className=\"ml-auto mr-auto card mb-3 cardbody\" style={{ width: '1000px', height: '170px', color: 'black' }}>\r\n                        {this.props.wallet || this.props.walletConnect ?\r\n                            <div className=\"card-body\">\r\n                                <div className='mb-5'>\r\n                                    <span className=\"float-left\" style={{ color: 'black', fontSize: '16px' }}>\r\n                                        Your BAVA Balance<br /><b>{parseFloat(window.web3Ava.utils.fromWei(this.props.bavaTokenBalance, 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 0 })} BAVA / $ {(window.web3Ava.utils.fromWei(this.props.bavaTokenBalance, 'Ether') * this.props.BAVAPrice).toLocaleString('en-US', { maximumFractionDigits: 0 })}</b>\r\n                                    </span>\r\n                                    <span className=\"float-right\" style={{ color: 'black', fontSize: '16px' }}>\r\n                                        Your Locked BAVA<br /><b>{parseFloat(window.web3Ava.utils.fromWei(this.props.lockedBavaTokenBalance, 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 0 })} BAVA / $ {(window.web3Ava.utils.fromWei(this.props.lockedBavaTokenBalance, 'Ether') * this.props.BAVAPrice).toLocaleString('en-US', { maximumFractionDigits: 0 })}</b>\r\n                                    </span>\r\n                                </div><br /><br />\r\n                                <div>\r\n                                    <span className=\"float-left\" style={{ color: 'black', fontSize: '16px' }}>Total pending harvest&nbsp;&nbsp;\r\n                                        <Popup\r\n                                            trigger={open => (\r\n                                                <span><BsFillQuestionCircleFill size={13} /></span>\r\n                                            )}\r\n                                            on=\"hover\"\r\n                                            offsetY={-10}\r\n                                            offsetX={10}\r\n                                            position=\"right center\"\r\n                                        ><span className=\"textInfo\"><small>Total BAVA tokens earned acrossed all farm </small></span>\r\n                                        </Popup>\r\n                                    </span><br />\r\n                                    <span className=\"float-left \" style={{ color: 'black', fontSize: '16px' }}><b>\r\n                                        {parseFloat(window.web3Ava.utils.fromWei(this.props.totalpendingReward, 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 0 })} BAVA / $ {(window.web3Ava.utils.fromWei(this.props.totalpendingReward, 'Ether') * this.props.BAVAPrice).toLocaleString('en-US', { maximumFractionDigits: 0 })}</b>\r\n                                    </span>\r\n                                    <span className=\"float-right \">\r\n                                        <span><small>All pools compound at an optimal rate</small></span>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            :\r\n                            <div className=\"card-body \">\r\n                                <span>\r\n                                    <span className=\"float-left\" style={{ color: 'silver' }}>\r\n                                        Your BAVA Balance<br />\r\n                                        <div style={{ color: 'silver' }}><b>0 BAVA</b></div>\r\n                                    </span>\r\n                                    <span className=\"float-right\" style={{ color: 'silver' }}>\r\n                                        Your Locked BAVA<br />\r\n                                        <div style={{ color: 'silver' }}><b>0 BAVA</b></div>\r\n                                    </span>\r\n                                    <br /><br />\r\n                                </span>\r\n                                <span className=\"center mb-1\">\r\n                                    {this.props.farmloading ?\r\n                                        <Buttons className=\"textDarkMedium\" variant=\"outline\" size=\"lg\" onClick={async () => {\r\n                                            await this.props.connectMetamask()\r\n                                        }}>Connect to display</Buttons> :\r\n                                        <Buttons className=\"textDarkMedium1\" variant=\"outline\" size=\"lg\" >Connect to display</Buttons>\r\n                                    }\r\n                                </span>\r\n                                <span>\r\n                                    <span className=\"float-left\" style={{ color: 'silver' }}>Total pending harvest&nbsp;&nbsp;\r\n                                        <Popup\r\n                                            trigger={open => (\r\n                                                <span><BsFillQuestionCircleFill size={13} /></span>\r\n                                            )}\r\n                                            on=\"hover\"\r\n                                            offsetY={-10}\r\n                                            offsetX={10}\r\n                                            position=\"right center\"\r\n                                        ><span className=\"textInfo\"><small>Total BAVA tokens earned acrossed all farm </small></span>\r\n                                        </Popup>\r\n                                    </span><br />\r\n                                    <span className=\"float-left \">\r\n                                        <div style={{ color: 'silver' }}><b>0 BAVA</b></div>\r\n                                    </span>\r\n                                    <span className=\"float-right\" style={{ color: 'silver' }}>\r\n                                        <small><span>All pools compound at an optimal rate</span></small>\r\n                                    </span>\r\n                                </span>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n                {/* <div className=\"textMiddle center\" ><b><big>BAVA Price: $ {this.props.BAVAPrice}&nbsp;&nbsp;\r\n                    <Popup\r\n                        trigger={open => (\r\n                            <span><BsFillQuestionCircleFill size={13} /></span>\r\n                        )}\r\n                        on=\"hover\"\r\n                        offsetY={-10}\r\n                        offsetX={10}\r\n                        position=\"right center\"\r\n                    ><span className=\"textInfo\"><small>Initial BAVA token price to USD will be fixed at the rate $ 0.10 </small></span>\r\n                    </Popup></big></b></div> */}\r\n\r\n                {/* <div className=\"center\" style={{ color: 'grey' }}><small>&nbsp;! Attention:&nbsp;Be sure to read <a href=\"https://baklavaspace.gitbook.io/\" target=\"_blank\">baklavaspace.gitbook</a> before using the pools so you are familiar with protocol risks and fees!</small></div> */}\r\n\r\n                <div className=\"center mt-4\" style={{ color: 'black' }}><big><b>&nbsp;! Attention:&nbsp;Please use Version 2 farm for higher yield!&nbsp;&nbsp;&gt;&gt;&nbsp;<Link to=\"/menu/v2/\"><Buttons className=\"textDarkMedium\" variant=\"outline\" size=\"sm\" >Switch to V2</Buttons></Link></b></big></div>\r\n            \r\n                <div className=\"ml-auto mr-auto mt-3\" style={{ width: '1000px' }}>\r\n                    <div className=\"\">\r\n                        <div className=\"textMiddleBold1 float-left\" style={{ marginLeft: '2px' }}><big>Select Platform</big></div>\r\n                        <div className=\"textMiddleBold1 float-right\" style={{ marginRight: '5px' }}><big>TVL $ {parseFloat(this.props.totalTVL).toLocaleString('en-US', { maximumFractionDigits: 0 })}</big></div><br /><br />\r\n                        <span className=\"float-left\">\r\n                            <ButtonGroup>\r\n                                <Buttons variant=\"outlined\" size=\"small\" color=\"inherit\" component={Link} to=\"/menu/\">Pangolin</Buttons>\r\n                                <Buttons variant=\"text\" size=\"small\" color=\"inherit\" component={Link} to=\"/menu/traderjoe/\">Trader Joe</Buttons>\r\n                            </ButtonGroup>\r\n                        </span>\r\n                    </div>\r\n                    <br /><br />\r\n\r\n\r\n\r\n\r\n\r\n                    <div>\r\n                        {this.props.farmloading ?\r\n                            <div className=\"\" style={{ width: '1000px' }}>\r\n                                {this.props.poolSegmentInfoV2_2[0].map((poolSegmentInfoV2_2, key) => {\r\n                                    let i = this.props.poolSegmentInfoV2_2[0].indexOf(poolSegmentInfoV2_2)\r\n                                    return (\r\n                                        <div key={key}>\r\n                                            <div>\r\n                                                <div className=\"card mb-3 cardbody\">\r\n                                                    <div className=\"card-body\" style={{ padding: '1rem' }}>\r\n                                                        <div>\r\n                                                            <div>\r\n                                                                <div className=\"float-left\">\r\n                                                                    <div className=\"textMiddle\"><b>{this.props.poolSegmentInfoV2_2[0][i].lpName}{this.props.poolSegmentInfoV2_2[0][i].status}</b></div>\r\n                                                                    <div className=\"textGrey exLink0\" onClick={() => {\r\n                                                                        window.open(this.props.poolSegmentInfoV2_2[0][i].projectLink, '_blank')\r\n                                                                    }}>Uses: {this.props.poolSegmentInfoV2_2[0][i].platform} <img src={exlink} style={{ marginBottom: \"3px\" }} height='12' alt=\"\" /></div>\r\n                                                                    <div className=\"textGrey exLink0\" onClick={() => {\r\n                                                                        window.open(this.props.poolSegmentInfoV2_2[0][i].getLPLink, '_blank')\r\n                                                                    }}>Get {this.props.poolSegmentInfoV2_2[0][i].lpName} <img src={exlink} style={{ marginBottom: \"3px\" }} height='12' alt=\"\" /></div>\r\n                                                                    <div className=\"textGrey exLink0\" onClick={() => {\r\n                                                                        window.open(this.props.poolSegmentInfoV2_2[0][i].farmContract, '_blank')\r\n                                                                    }}>View On Explorer <img src={exlink} style={{ marginBottom: \"3px\" }} height='12' alt=\"\" /></div>\r\n                                                                </div>\r\n                                                                <div className=\"float-right mr-auto\">\r\n                                                                    <table>\r\n                                                                        <thead className=\"textBlackSmall\" style={{ color: 'black' }}>\r\n                                                                            <tr>\r\n                                                                                <th scope=\"col\" width=\"140\">Wallet</th>\r\n                                                                                <th scope=\"col\" width=\"140\">Deposited</th>\r\n                                                                                <th scope=\"col\">Growth</th>\r\n                                                                                <th scope=\"col\">APR <Popup\r\n                                                                                    trigger={open => (<span><BsFillQuestionCircleFill style={{ marginBottom: \"2px\" }} size={10} /></span>)}\r\n                                                                                    on=\"hover\"\r\n                                                                                    offsetY={-8}\r\n                                                                                    offsetX={5}\r\n                                                                                    position=\"right center\"\r\n                                                                                    contentStyle={{ width: '150px' }}\r\n                                                                                ><div className=\"textInfo\">APR Breakdown: </div><br />\r\n                                                                                    <div className=\"textInfo\">Baklava   : {parseFloat(this.props.aprV2_2[0][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })} %</div><br />\r\n                                                                                    <div className=\"textInfo\">Pangolin : {parseFloat(this.props.poolSegmentInfoV2_2[0][i].total3rdPartyAPR).toLocaleString('en-US', { maximumFractionDigits: 0 })} %</div>\r\n                                                                                </Popup></th>\r\n                                                                                <th scope=\"col\">APY <Popup\r\n                                                                                    trigger={open => (<span><BsFillQuestionCircleFill style={{ marginBottom: \"2px\" }} size={10} /></span>)}\r\n                                                                                    on=\"hover\"\r\n                                                                                    offsetY={-8}\r\n                                                                                    offsetX={5}\r\n                                                                                    position=\"right center\"\r\n                                                                                    contentStyle={{ width: '150px' }}\r\n                                                                                ><div className=\"textInfo\"><small>APY are calculated based on the compound APR number excluded locked reward.</small></div><br />\r\n                                                                                    <div className=\"textInfo\"><small>The value shown is based on daily compounding frequency.</small></div>\r\n                                                                                </Popup></th>\r\n                                                                                <th scope=\"col\">TVL</th>\r\n                                                                            </tr>\r\n                                                                        </thead>\r\n                                                                        <tbody className=\"textGrey\">\r\n                                                                            <tr>\r\n                                                                                <td className=\"\">{(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.lpBalanceAccountV2_2[0][i]), 'Ether').toLocaleString('en-US', { maximumFractionDigits: 18 })}</div> : <div className=\"center\">\r\n                                                                                    <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>}</td>\r\n                                                                                <td className=\"\">{(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.userSegmentInfoV2_2[0][i], 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 18 })}</div> : <div className=\"center\">\r\n                                                                                    <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\r\n                                                                                <td className=\"\">{this.props.aprloading ? <div>{parseFloat(this.props.returnRatioV2_2[0][i]).toLocaleString('en-US', { maximumFractionDigits: 5 })}</div> : <div className=\"center\">\r\n                                                                                    <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\r\n                                                                                <td className=\"\">{this.props.aprloading ? <div>{(parseFloat(this.props.aprV2_2[0][i]) + parseFloat(this.props.poolSegmentInfoV2_2[0][i].total3rdPartyAPR)).toLocaleString('en-US', { maximumFractionDigits: 0 })}%</div> : <div className=\"center\">\r\n                                                                                    <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\r\n                                                                                <td className=\"\">{this.props.aprloading ? <div>{parseFloat(this.props.apyDailyV2_2[0][i]) > 100000 ? <div>&#x3e;100,000%</div> : <div>{parseFloat(this.props.apyDailyV2_2[0][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })}%</div>}</div> : <div className=\"center\">\r\n                                                                                    <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>}</td>\r\n                                                                                <td className=\"\">$ {parseFloat(this.props.tvlV2_2[0][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })} </td>\r\n                                                                            </tr>\r\n                                                                        </tbody>\r\n                                                                    </table>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <br /><br /><br /><br />\r\n                                                            {this.state.farmV2_2Open[i] ?\r\n                                                                <div>\r\n                                                                    <div>\r\n                                                                        <Buttons variant=\"outline-secondary\" size=\"sm\" style={{ width: '60px' }} onClick={() => {\r\n                                                                            this.clickfarmOpen(i, false)\r\n                                                                        }}>Close</Buttons>&nbsp;&nbsp;&nbsp;</div>\r\n                                                                    {this.props.wallet || this.props.walletConnect ? <div className=\"borderTop \"><div className=\"rowC mt-3\">\r\n                                                                        <div className=\"card cardbody float-left mr-3\" style={{ width: '300px' }}>\r\n                                                                            <div className=\"card-body\" style={{ padding: '0.5rem' }}>\r\n                                                                                <span className=\"float-left\" style={{ color: 'black' }}><small>BAVA earned</small></span><br />\r\n                                                                                <span className=\"float-left\" style={{ color: 'black', marginTop: '8px' }}><small>{this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.pendingSegmentRewardV2_2[0][i], 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 0 })}</div> :\r\n                                                                                    <div className=\"ml-3 lds-facebook\"><div></div><div></div><div></div></div>}</small></span>\r\n                                                                                <span className=\"float-right\">\r\n                                                                                    <Buttons\r\n                                                                                        variant=\"success\"\r\n                                                                                        size=\"sm\"\r\n                                                                                        style={{ minWidth: '80px' }}\r\n                                                                                        onClick={(event) => {\r\n                                                                                            event.preventDefault()\r\n                                                                                            console.log(i)\r\n                                                                                            this.props.harvest(i, 0, 3)\r\n                                                                                        }}>\r\n                                                                                        Harvest\r\n                                                                                    </Buttons></span>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        <div className=\"float-right\">\r\n                                                                            <span className=\"card cardbody float-right\" style={{ width: '650px' }}>\r\n                                                                                <div className=\"card-body\" style={{ padding: '0.5rem' }}>\r\n                                                                                    {this.props.lpSegmentAllowanceV2_2[0][i] > 2000000000000000000000000000 ?\r\n                                                                                        <div><Deposit\r\n                                                                                            lpBalanceAccount={this.props.lpBalanceAccountV2_2}\r\n                                                                                            poolSegmentInfo={this.props.poolSegmentInfoV2_2}\r\n                                                                                            userSegmentInfo={this.props.userSegmentInfoV2_2}\r\n                                                                                            i={i}\r\n                                                                                            n='0'\r\n                                                                                            v='3'\r\n                                                                                            deposit={this.props.deposit}\r\n                                                                                            withdraw={this.props.withdraw}\r\n                                                                                        /></div>\r\n                                                                                        :\r\n                                                                                        <div>\r\n                                                                                            <span className=\"float-left \" style={{ color: 'black' }}><small>Enable Pool</small></span>\r\n                                                                                            <Buttons className=\"btn-block\"\r\n                                                                                                variant=\"outline-primary\"\r\n                                                                                                size=\"sm\"\r\n                                                                                                style={{ minWidth: '80px' }}\r\n                                                                                                onClick={(event) => {\r\n                                                                                                    event.preventDefault()\r\n                                                                                                    this.props.approve(i, 0, 3)\r\n                                                                                                }}>\r\n                                                                                                Approve\r\n                                                                                            </Buttons>\r\n                                                                                        </div>}\r\n                                                                                </div>\r\n                                                                            </span>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    </div> :\r\n                                                                        <div className=\"center borderTop\" >\r\n                                                                            <span className=\"mt-3\" style={{ color: 'black' }}><small>Wallet Connection to Avalanche required</small></span>\r\n                                                                        </div>}\r\n                                                                </div> :\r\n                                                                <div>\r\n                                                                    <Buttons variant=\"outline-secondary\" size=\"sm\" style={{ width: '60px' }} onClick={() => {\r\n                                                                        this.clickfarmOpen(i, true)\r\n                                                                    }}><b>Open</b></Buttons></div>}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                {this.props.bavaPoolSegmentInfo[0].map((bavaPoolSegmentInfo, key) => {\r\n                                    let i = this.props.bavaPoolSegmentInfo[0].indexOf(bavaPoolSegmentInfo)\r\n                                    return (\r\n                                        <div key={key}>\r\n                                            <div>\r\n                                                <div className=\"card mb-3 cardbody\">\r\n                                                    <div className=\"card-body\" style={{ padding: '1rem' }}>\r\n                                                        <div>\r\n                                                            <div>\r\n                                                                <div className=\"float-left\">\r\n                                                                    <div className=\"textMiddle\"><b>{this.props.bavaPoolSegmentInfo[0][i].lpName}{this.props.bavaPoolSegmentInfo[0][i].status}</b></div>\r\n                                                                    <div className=\"textGrey exLink0\" onClick={() => {\r\n                                                                        window.open(this.props.bavaPoolSegmentInfo[0][i].projectLink, '_blank')\r\n                                                                    }}>Uses: {this.props.bavaPoolSegmentInfo[0][i].platform} <img src={exlink} style={{ marginBottom: \"3px\" }} height='12' alt=\"\" /></div>\r\n                                                                    <div className=\"textGrey exLink0\" onClick={() => {\r\n                                                                        window.open(this.props.bavaPoolSegmentInfo[0][i].getLPLink, '_blank')\r\n                                                                    }}>Get {this.props.bavaPoolSegmentInfo[0][i].lpName} <img src={exlink} style={{ marginBottom: \"3px\" }} height='12' alt=\"\" /></div>\r\n                                                                    <div className=\"textGrey exLink0\" onClick={() => {\r\n                                                                        window.open(this.props.bavaPoolSegmentInfo[0][i].farmContract, '_blank')\r\n                                                                    }}>View On Explorer <img src={exlink} style={{ marginBottom: \"3px\" }} height='12' alt=\"\" /></div>\r\n                                                                </div>\r\n                                                                <div className=\"float-right mr-auto\">\r\n                                                                    <table>\r\n                                                                        <thead className=\"textBlackSmall\" style={{ color: 'black' }}>\r\n                                                                            <tr>\r\n                                                                                <th scope=\"col\" width=\"140\">Wallet</th>\r\n                                                                                <th scope=\"col\" width=\"140\">Deposited</th>\r\n                                                                                <th scope=\"col\">Growth</th>\r\n                                                                                <th scope=\"col\">APR&nbsp;<Popup\r\n                                                                                    trigger={open => (<span><BsFillQuestionCircleFill style={{ marginBottom: \"2px\" }} size={10} /></span>)}\r\n                                                                                    on=\"hover\"\r\n                                                                                    offsetY={-8}\r\n                                                                                    offsetX={5}\r\n                                                                                    position=\"right center\"\r\n                                                                                    contentStyle={{ width: '150px' }}\r\n                                                                                ><div className=\"textInfo\">APR Breakdown: </div><br />\r\n                                                                                    <div className=\"textInfo\">Baklava   : {parseFloat(this.props.bavaapr[0][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })} %</div><br />\r\n                                                                                    <div className=\"textInfo\">Pangolin : {parseFloat(this.props.bavaPoolSegmentInfo[0][i].total3rdPartyAPR).toLocaleString('en-US', { maximumFractionDigits: 0 })} %</div>\r\n                                                                                </Popup></th>\r\n                                                                                <th scope=\"col\">APY <Popup\r\n                                                                                    trigger={open => (<span><BsFillQuestionCircleFill style={{ marginBottom: \"2px\" }} size={10} /></span>)}\r\n                                                                                    on=\"hover\"\r\n                                                                                    offsetY={-8}\r\n                                                                                    offsetX={5}\r\n                                                                                    position=\"right center\"\r\n                                                                                    contentStyle={{ width: '150px' }}\r\n                                                                                ><div className=\"textInfo\"><small>APY are calculated based on the compound APR number excluded locked reward.</small></div><br />\r\n                                                                                    <div className=\"textInfo\"><small>The value shown is based on daily compounding frequency.</small></div>\r\n                                                                                </Popup></th>\r\n                                                                                <th scope=\"col\">TVL</th>\r\n                                                                            </tr>\r\n                                                                        </thead>\r\n                                                                        <tbody className=\"textGrey\">\r\n                                                                            <tr>\r\n                                                                                <td className=\"\">{(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.bavaLpBalanceAccount[0][i]), 'Ether').toLocaleString('en-US', { maximumFractionDigits: 18 })}</div> : <div className=\"center\">\r\n                                                                                    <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>}</td>\r\n                                                                                <td className=\"\">{(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.bavaUserSegmentInfo[0][i], 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 18 })}</div> : <div className=\"center\">\r\n                                                                                    <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\r\n                                                                                <td className=\"\">{this.props.aprloading ? <div>{parseFloat(this.props.bavaReturnRatio[0][i]).toLocaleString('en-US', { maximumFractionDigits: 5 })}</div> : <div className=\"center\">\r\n                                                                                    <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\r\n                                                                                <td className=\"\">{this.props.aprloading ? <div>{(parseFloat(this.props.bavaapr[0][i]) + parseFloat(this.props.bavaPoolSegmentInfo[0][i].total3rdPartyAPR)).toLocaleString('en-US', { maximumFractionDigits: 0 })}%</div> : <div className=\"center\">\r\n                                                                                    <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\r\n                                                                                <td className=\"\">{this.props.aprloading ? <div>{parseFloat(this.props.bavaapyDaily[0][i]) > 100000 ? <div>&#x3e;100,000%</div> : <div>{parseFloat(this.props.bavaapyDaily[0][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })}%</div>}</div> : <div className=\"center\">\r\n                                                                                    <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>}</td>\r\n                                                                                <td className=\"\">$ {parseFloat(this.props.bavatvl[0][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })} </td>\r\n                                                                            </tr>\r\n                                                                        </tbody>\r\n                                                                    </table>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <br /><br /><br /><br />\r\n                                                            {this.props.farmV1Open[i] ?\r\n                                                                <div>\r\n                                                                    <div>\r\n                                                                        <Buttons variant=\"outline-secondary\" size=\"sm\" style={{ width: '60px' }} onClick={() => {\r\n                                                                            this.props.setI(i, false, 1)\r\n                                                                        }}>Close</Buttons>&nbsp;&nbsp;&nbsp;</div>\r\n                                                                    {this.props.wallet || this.props.walletConnect ? <div className=\"borderTop \"><div className=\"rowC mt-3\">\r\n                                                                        <div className=\"card cardbody float-left mr-3\" style={{ width: '300px' }}>\r\n                                                                            <div className=\"card-body\" style={{ padding: '0.5rem' }}>\r\n                                                                                <span className=\"float-left\" style={{ color: 'black' }}><small>BAVA earned</small></span><br />\r\n                                                                                <span className=\"float-left\" style={{ color: 'black', marginTop: '8px' }}><small>{this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.bavaPendingSegmentReward[0][i], 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 0 })}</div> :\r\n                                                                                    <div className=\"ml-3 lds-facebook\"><div></div><div></div><div></div></div>}</small></span>\r\n                                                                                <span className=\"float-right\">\r\n                                                                                    <Buttons\r\n                                                                                        variant=\"success\"\r\n                                                                                        size=\"sm\"\r\n                                                                                        style={{ minWidth: '80px' }}\r\n                                                                                        onClick={(event) => {\r\n                                                                                            event.preventDefault()\r\n                                                                                            console.log(i)\r\n                                                                                            this.props.harvest(i, 0, 1)\r\n                                                                                        }}>\r\n                                                                                        Harvest\r\n                                                                                    </Buttons></span>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        <div className=\"float-right\">\r\n                                                                            <span className=\"card cardbody float-right\" style={{ width: '650px' }}>\r\n                                                                                <div className=\"card-body\" style={{ padding: '0.5rem' }}>\r\n                                                                                    {this.props.bavaLpSegmentAllowance[0][i] > 2000000000000000000000000000 ?\r\n                                                                                        <div><Deposit\r\n                                                                                            lpBalanceAccount={this.props.bavaLpBalanceAccount}\r\n                                                                                            poolSegmentInfo={this.props.bavaPoolSegmentInfo}\r\n                                                                                            userSegmentInfo={this.props.bavaUserSegmentInfo}\r\n                                                                                            i={i}\r\n                                                                                            n='0'\r\n                                                                                            v='1'\r\n                                                                                            deposit={this.props.deposit}\r\n                                                                                            withdraw={this.props.withdraw}\r\n                                                                                        /></div>\r\n                                                                                        :\r\n                                                                                        <div>\r\n                                                                                            <span className=\"float-left \" style={{ color: 'black' }}><small>Enable Pool</small></span>\r\n                                                                                            <Buttons className=\"btn-block\"\r\n                                                                                                variant=\"outline-primary\"\r\n                                                                                                size=\"sm\"\r\n                                                                                                style={{ minWidth: '80px' }}\r\n                                                                                                onClick={(event) => {\r\n                                                                                                    event.preventDefault()\r\n                                                                                                    this.props.approve(i, 0, 1)\r\n                                                                                                }}>\r\n                                                                                                Approve\r\n                                                                                            </Buttons>\r\n                                                                                        </div>}\r\n                                                                                </div>\r\n                                                                            </span>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    </div> :\r\n                                                                        <div className=\"center borderTop\" >\r\n                                                                            <span className=\"mt-3\" style={{ color: 'black' }}><small>Wallet Connection to Avalanche required</small></span>\r\n                                                                        </div>}\r\n                                                                </div> :\r\n                                                                <div>\r\n                                                                    <Buttons variant=\"outline-secondary\" size=\"sm\" style={{ width: '60px' }} onClick={() => {\r\n                                                                        this.props.setI(i, true, 1)\r\n                                                                    }}><b>Open</b></Buttons></div>}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                {this.props.poolSegmentInfo[0].map((poolSegmentInfo, key) => {\r\n                                    let i = this.props.poolSegmentInfo[0].indexOf(poolSegmentInfo)\r\n                                    return (\r\n                                        <div key={key}>\r\n                                            <div>\r\n                                                <div className=\"card mb-3 cardbody\">\r\n                                                    <div className=\"card-body\" style={{ padding: '1rem' }}>\r\n                                                        <div>\r\n                                                            <div>\r\n                                                                <div className=\"float-left\">\r\n                                                                    <div className=\"textMiddle\"><b>{this.props.poolSegmentInfo[0][i].lpName}{this.props.poolSegmentInfo[0][i].status}</b></div>\r\n                                                                    <div className=\"textGrey exLink0\" onClick={() => {\r\n                                                                        window.open(this.props.poolSegmentInfo[0][i].projectLink, '_blank')\r\n                                                                    }}>Uses: {this.props.poolSegmentInfo[0][i].platform} <img src={exlink} style={{ marginBottom: \"3px\" }} height='12' alt=\"\" /></div>\r\n                                                                    <div className=\"textGrey exLink0\" onClick={() => {\r\n                                                                        window.open(this.props.poolSegmentInfo[0][i].getLPLink, '_blank')\r\n                                                                    }}>Get {this.props.poolSegmentInfo[0][i].lpName} <img src={exlink} style={{ marginBottom: \"3px\" }} height='12' alt=\"\" /></div>\r\n                                                                    <div className=\"textGrey exLink0\" onClick={() => {\r\n                                                                        window.open(this.props.bavaContract, '_blank')\r\n                                                                    }}>View On Explorer <img src={exlink} style={{ marginBottom: \"3px\" }} height='12' alt=\"\" /></div>\r\n                                                                </div>\r\n                                                                <div className=\"float-right mr-auto\">\r\n                                                                    <table>\r\n                                                                        <thead className=\"textBlackSmall\" style={{ color: 'black' }}>\r\n                                                                            <tr>\r\n                                                                                <th scope=\"col\" width=\"140\">Wallet</th>\r\n                                                                                <th scope=\"col\" width=\"140\">Deposited</th>\r\n                                                                                <th scope=\"col\">Growth</th>\r\n                                                                                <th scope=\"col\">APR&nbsp;<Popup\r\n                                                                                    trigger={open => (<span><BsFillQuestionCircleFill style={{ marginBottom: \"2px\" }} size={10} /></span>)}\r\n                                                                                    on=\"hover\"\r\n                                                                                    offsetY={-8}\r\n                                                                                    offsetX={5}\r\n                                                                                    position=\"right center\"\r\n                                                                                    contentStyle={{ width: '150px' }}\r\n                                                                                ><div className=\"textInfo\">APR Breakdown: </div><br />\r\n                                                                                    <div className=\"textInfo\">Baklava : {parseFloat(this.props.apr[0][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })} %</div><br />\r\n                                                                                    <div className=\"textInfo\">Pangolin : {parseFloat(this.props.poolSegmentInfo[0][i].total3rdPartyAPR).toLocaleString('en-US', { maximumFractionDigits: 0 })} %</div>\r\n                                                                                </Popup></th>\r\n                                                                                <th scope=\"col\">APY <Popup\r\n                                                                                    trigger={open => (<span><BsFillQuestionCircleFill style={{ marginBottom: \"2px\" }} size={10} /></span>)}\r\n                                                                                    on=\"hover\"\r\n                                                                                    offsetY={-8}\r\n                                                                                    offsetX={5}\r\n                                                                                    position=\"right center\"\r\n                                                                                    contentStyle={{ width: '150px' }}\r\n                                                                                ><div className=\"textInfo\"><small>APY are calculated based on the compound APR number excluded locked reward.</small></div><br />\r\n                                                                                    <div className=\"textInfo\"><small>The value shown is based on daily compounding frequency.</small></div>\r\n                                                                                </Popup></th>\r\n                                                                                <th scope=\"col\">TVL</th>\r\n                                                                            </tr>\r\n                                                                        </thead>\r\n                                                                        <tbody className=\"textGrey\">\r\n                                                                            <tr>\r\n                                                                                <td className=\"\">{(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.lpBalanceAccount[0][i]), 'Ether').toLocaleString('en-US', { maximumFractionDigits: 18 })}</div> : <div className=\"center\">\r\n                                                                                    <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>}</td>\r\n                                                                                <td className=\"\">{(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.userSegmentInfo[0][i], 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 18 })}</div> : <div className=\"center\">\r\n                                                                                    <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\r\n                                                                                <td className=\"\">{this.props.aprloading ? <div>{parseFloat(this.props.returnRatio[0][i]).toLocaleString('en-US', { maximumFractionDigits: 5 })}</div> : <div className=\"center\">\r\n                                                                                    <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\r\n                                                                                <td className=\"\">{this.props.aprloading ? <div>{(parseFloat(this.props.apr[0][i]) + parseFloat(this.props.poolSegmentInfo[0][i].total3rdPartyAPR)).toLocaleString('en-US', { maximumFractionDigits: 0 })}%</div> : <div className=\"center\">\r\n                                                                                    <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\r\n                                                                                <td className=\"\">{this.props.aprloading ? <div>{parseFloat(this.props.apyDaily[0][i]) > 100000 ? <div>&#x3e;100,000%</div> : <div>{parseFloat(this.props.apyDaily[0][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })}%</div>}</div> : <div className=\"center\">\r\n                                                                                    <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>}</td>\r\n                                                                                <td className=\"\">$ {parseFloat(this.props.tvl[0][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })} </td>\r\n                                                                            </tr>\r\n                                                                        </tbody>\r\n                                                                    </table>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <br /><br /><br /><br />\r\n                                                            {this.props.farmV2Open[i] ?\r\n                                                                <div>\r\n                                                                    <div>\r\n                                                                        <Buttons variant=\"outline-secondary\" size=\"sm\" style={{ width: '60px' }} onClick={() => {\r\n                                                                            this.props.setI(i, false, 2)\r\n                                                                        }}>Close</Buttons>&nbsp;&nbsp;&nbsp;</div>\r\n                                                                    {this.props.wallet || this.props.walletConnect ? <div className=\"borderTop \"><div className=\"rowC\">\r\n                                                                        <div className=\"card cardbody float-left mr-3\" style={{ width: '300px' }}>\r\n                                                                            <div className=\"card-body\" style={{ padding: '0.5rem' }}>\r\n                                                                                <span className=\"float-left\" style={{ color: 'black' }}><small>BAVA earned</small></span><br />\r\n                                                                                <span className=\"float-left\" style={{ color: 'black', marginTop: '8px' }}><small>{this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.pendingSegmentReward[0][i], 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 0 })}</div> :\r\n                                                                                    <div className=\"ml-3 lds-facebook\"><div></div><div></div><div></div></div>}</small></span>\r\n                                                                                <span className=\"float-right\">\r\n                                                                                    <Buttons\r\n                                                                                        variant=\"success\"\r\n                                                                                        size=\"sm\"\r\n                                                                                        style={{ minWidth: '80px' }}\r\n                                                                                        onClick={(event) => {\r\n                                                                                            event.preventDefault()\r\n                                                                                            this.props.harvest(i, 0, 2)\r\n                                                                                        }}>\r\n                                                                                        Harvest\r\n                                                                                    </Buttons></span>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        <div className=\"float-right\">\r\n                                                                            <span className=\"card cardbody float-right\" style={{ width: '650px' }}>\r\n                                                                                <div className=\"card-body\" style={{ padding: '0.5rem' }}>\r\n                                                                                    {this.props.lpSegmentAllowance[0][i] > 2000000000000000000000000000 ?\r\n                                                                                        <div><Deposit\r\n                                                                                            lpBalanceAccount={this.props.lpBalanceAccount}\r\n                                                                                            poolSegmentInfo={this.props.poolSegmentInfo}\r\n                                                                                            userSegmentInfo={this.props.userSegmentInfo}\r\n                                                                                            i={i}\r\n                                                                                            n='0'\r\n                                                                                            v='2'\r\n                                                                                            deposit={this.props.deposit}\r\n                                                                                            withdraw={this.props.withdraw}\r\n                                                                                        /></div>\r\n                                                                                        :\r\n                                                                                        <div>\r\n                                                                                            <span className=\"float-left \" style={{ color: 'black' }}><small>Enable Pool</small></span>\r\n                                                                                            <Buttons className=\"btn-block\"\r\n                                                                                                variant=\"outline-primary\"\r\n                                                                                                size=\"sm\"\r\n                                                                                                style={{ minWidth: '80px' }}\r\n                                                                                                onClick={(event) => {\r\n                                                                                                    event.preventDefault()\r\n                                                                                                    this.props.approve(i, 0, 2)\r\n                                                                                                }}>\r\n                                                                                                Approve\r\n                                                                                            </Buttons>\r\n                                                                                        </div>}\r\n                                                                                </div>\r\n                                                                            </span>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    </div> :\r\n                                                                        <div className=\"center borderTop\" >\r\n                                                                            <span className=\"mt-3\" style={{ color: 'black' }}><small>Wallet Connection to Avalanche required</small></span>\r\n                                                                        </div>}\r\n                                                                </div> :\r\n                                                                <div>\r\n                                                                    <Buttons variant=\"outline-secondary\" size=\"sm\" style={{ width: '60px' }} onClick={() => {\r\n                                                                        // this.props.setTrigger(true)\r\n                                                                        this.props.setI(i, true, 2)\r\n                                                                    }}><b>Open</b></Buttons></div>}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                            :\r\n                            <div className=\"center\">\r\n                                <div style={{ marginBottom: '350px' }}>\r\n                                    <div className=\"bounceball\"></div> &nbsp;\r\n                                    <div className=\"textLoadingSmall\">NETWORK IS Loading...</div>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div><br />\r\n                <Footer />\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Menu;\r\n","import React, { Component } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport MediaQuery from 'react-responsive';\nimport bigInt from 'big-integer'\nimport 'reactjs-popup/dist/index.css';\nimport './App.css';\n\nimport ImgNextGen from './ImgNextGen'\nimport baklava from './images/baklava.webp'\nimport pangolin from './images/pangolin.webp'\nimport kyber from './images/kyber.webp'\nimport joe from './images/joe.webp'\n\nclass Withdraw extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            message: '',\n            txValidAmount: false\n        }\n        this.changeHandler = this.changeHandler.bind(this)\n    }\n\n    changeHandler(event) {\n        let result = !isNaN(+event); // true if its a number, false if not\n        if (event == \"\") {\n            this.setState({\n                message: '',\n                txValidAmount: false\n            })\n        } else if (result == false) {\n            this.setState({\n                message: 'Not a valid number',\n                txValidAmount: false\n            })\n        } else if (this.countDecimals(event) > 18) {\n            this.setState({\n                message: 'Input decimal more than 18.',\n                txValidAmount: false\n            })\n        } else if (event <= 0) {\n            this.setState({\n                message: 'Value need to be greater than 0',\n                txValidAmount: false\n            })\n        } else if (bigInt(window.web3Ava.utils.toWei(event, 'ether')).value > bigInt(this.props.userSegmentInfo[this.props.n][this.props.i]).value) {\n            this.setState({\n                message: 'Withdraw tokens more than deposit LP tokens',\n                txValidAmount: false\n            })\n        } else {\n            this.setState({\n                message: '',\n                txValidAmount: true\n            })\n        }\n    }\n\n    countDecimals(x) {\n        if (Math.floor(x.valueOf()) === x.valueOf()) return 0;\n\n        var str = x.toString();\n        if (str.indexOf(\".\") !== -1 && str.indexOf(\"-\") !== -1) {\n            return str.split(\"-\")[1] || 0;\n        } else if (str.indexOf(\".\") !== -1) {\n            return str.split(\".\")[1].length || 0;\n        }\n        return str.split(\"-\")[1] || 0;\n    }\n\n    render() {\n        return (\n            <div id=\"content\">\n                <div className=\"text-center\">\n                </div>\n\n                <form className=\"mb-1\" onSubmit={(event) => {\n                    event.preventDefault()\n                    if (this.state.txValidAmount === false) {\n                        alert(\"Invalid input! PLease check your input again\")\n                    } else {\n                        let amount\n                        amount = this.input.value.toString()\n                        amount = window.web3Ava.utils.toWei(amount, 'Ether')\n\n                        this.props.withdraw(this.props.i, amount, this.props.n, this.props.v)\n                    }\n                }}>\n                    <div>\n                        <div className=\"input-group mb-2\">\n                            {(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ?\n                                <input\n                                    type=\"number\"\n                                    id=\"inputColor\"\n                                    step=\"any\"\n                                    ref={(input) => { this.input = input }}\n                                    style={{ fontSize: '18px', backgroundColor: '#fffcf0' }}\n                                    className=\"form-control cell cardbody\"\n                                    placeholder=\"0\"\n                                    onKeyPress={(event) => {\n                                        if (!/[0-9.]/.test(event.key)) {\n                                            event.preventDefault();\n                                        }\n                                    }}\n                                    onChange={(e) => {\n                                        const value = e.target.value;\n                                        this.changeHandler(value)\n                                    }}\n                                    required />\n                                : <input\n                                    type=\"number\"\n                                    id=\"inputColor\"\n                                    style={{ fontSize: '18px', backgroundColor: '#fffcf0', cursor: 'not-allowed' }}\n                                    placeholder=\"0\"\n                                    className=\"form-control cell cardbody\"\n                                    disabled />}\n                            <div className=\"input-group-append\">\n                                <div className=\"input-group-text cardbodyLeft\" style={{ padding: '0 0.5rem' }}>\n                                    <Button className=\"textTransparentButton2\" size=\"sm\" onClick={(event1) => {\n                                        this.state.txValidAmount = true\n                                        // this.setState({ message: \"\" })\n                                        this.input.value = window.web3Ava.utils.fromWei(this.props.userSegmentInfo[this.props.n][this.props.i], 'Ether')\n                                        this.changeHandler(this.input.value)\n                                    }}>Max</Button>\n                                </div>\n                                <div className=\"input-group-text cardbody\" style={{ padding: '0 0.5rem' }}>\n                                    {this.props.poolSegmentInfo[this.props.n][this.props.i].platform == 'Pangolin' ?\n                                        <ImgNextGen\n                                            srcWebp={pangolin}\n                                            height='30' className=\"\" alt=\"\"\n                                        /> : <div>{this.props.poolSegmentInfo[this.props.n][this.props.i].platform == 'KyberSwap' ?\n                                            <ImgNextGen\n                                                srcWebp={kyber}\n                                                height='30' className=\"\" alt=\"\"\n                                            /> : <ImgNextGen\n                                                srcWebp={joe}\n                                                height='30' className=\"\" alt=\"\"\n                                            />}</div>}\n                                </div>\n                            </div>\n                        </div >\n                        <div style={{ color: 'red' }}>{this.state.message}</div>\n\n                        <div className=\"mt-3\">\n                            <MediaQuery minWidth={651}>\n                                <div className=\"float-left\" style={{ color: 'grey' }}>\n                                    <ImgNextGen\n                                        srcWebp={baklava}\n                                        style={{ marginRight: '5px' }} height='20' alt=\"\"\n                                    /><small>Automatically harvest BAVA rewards when withdraw</small></div>\n                                <div className=\"float-right\" >{this.state.txValidAmount === true ?\n                                    <div>{bigInt(this.props.userSegmentInfo[this.props.n][this.props.i]).value >= bigInt(window.web3Ava.utils.toWei(this.input.value, 'Ether')).value ? <Button type=\"submit\" className=\"btn btn-primary btn-sm\" style={{ height: '32px', fontSize: '15px' }}>Confirm</Button>\n                                        : <Button className=\"textDarkMedium1 btn-sm\" variant=\"outline\" style={{ height: '32px', fontSize: '15px' }}>Confirm</Button>}</div>\n                                    : <Button className=\"textDarkMedium1 btn-sm\" variant=\"outline\" style={{ height: '32px', fontSize: '15px' }}>Confirm</Button>}\n                                </div>\n                            </MediaQuery>\n                            <MediaQuery maxWidth={650}>\n                                <div className=\"left mr-1\" >{this.state.txValidAmount === true ?\n                                    <div>{bigInt(this.props.userSegmentInfo[this.props.n][this.props.i]).value >= bigInt(window.web3Ava.utils.toWei(this.input.value, 'Ether')).value ? <Button type=\"submit\" className=\"btn btn-primary btn-sm\" style={{ height: '32px', fontSize: '15px' }}>Confirm</Button> : <Button className=\"textDarkMedium1 btn-sm\" variant=\"outline\" style={{ height: '32px', fontSize: '15px' }}>Confirm</Button>} </div>\n                                    : <Button className=\"textDarkMedium1 btn-sm\" variant=\"outline\" style={{ height: '32px', fontSize: '15px' }}>Confirm</Button>}\n                                </div>\n                                <div className=\"left mt-2\" style={{ color: 'grey' }}><ImgNextGen\n                                    srcWebp={baklava}\n                                    style={{ marginRight: '5px' }} height='20' alt=\"\"\n                                /><small>Automatically harvest BAVA rewards when withdraw</small></div>\n                            </MediaQuery>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default Withdraw;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport MediaQuery from 'react-responsive';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Buttons from 'react-bootstrap/Button'\nimport { BsFillQuestionCircleFill } from 'react-icons/bs';\nimport ImgNextGen from './ImgNextGen';\nimport bigInt from 'big-integer'\nimport Popup from 'reactjs-popup';\nimport Deposit from './Deposit'\nimport Withdraw from './Withdraw'\nimport Footer from './Footer'\nimport 'reactjs-popup/dist/index.css';\nimport './App.css';\n\nimport exlink from './images/link.webp';\nimport coin98 from './images/coin98.webp';\nimport fox from './images/metamask-fox.svg';\nimport walletconnectlogo from './images/walletconnect-logo.svg';\n\nimport bava from './images/logo.webp';\nimport savax from './images/sAvax.webp';\nimport qi from './images/qi.webp';\nimport ust from './images/ust.webp';\nimport png from './images/pangolin.webp';\nimport avax from './images/avax.svg';\nimport usdc from './images/usdc.svg';\nimport usdt from './images/usdt.svg';\nimport weth from './images/weth.svg';\n\nclass Menu extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            farmV2_3Open: [],\n            depositAction: [],\n            withdrawAction: []\n        }\n        this.clickfarmOpen = this.clickfarmOpen.bind(this)\n        this.setAction = this.setAction.bind(this)\n    }\n\n    clickfarmOpen(i) {\n        let ntg = 0\n        this.state.farmV2_3Open[i] = !(this.state.farmV2_3Open[i])\n        this.state.depositAction[i] = true\n        this.state.withdrawAction[i] = false\n        this.setState({ ntg })  //do ntg, just to push react setstate\n    }\n\n    setAction(i, page) {\n        let ntg = 0\n        if (page == 0) {\n            this.state.depositAction[i] = true\n            this.state.withdrawAction[i] = false\n        } else {\n            this.state.depositAction[i] = false\n            this.state.withdrawAction[i] = true\n        }\n        this.setState({ ntg })\n    }\n\n    render() {\n        const contentStyle = { background: '#fffae6', border: \"1px solid #596169\", width: \"30%\", borderRadius: \"15px\", minWidth: \"320px\" };\n        return (\n            <div id=\"content\" className=\"\" style={{ margin: \"0\", color: '#ff9a04' }}>\n                <MediaQuery minWidth={601}>\n                    <div className=\"ml-auto mr-auto card mb-3 cardbody\" style={{ color: 'black' }}>\n                        {this.props.wallet || this.props.walletConnect ?\n                            <div className=\"card-body\" style={{ paddingBottom: '5px' }}>\n                                <div className='mb-5'>\n                                    <span className=\"float-left\" style={{ color: 'black', fontSize: '16px' }}>\n                                        Your BAVA Balance<br /><b>{parseFloat(window.web3Ava.utils.fromWei(this.props.bavaTokenBalance, 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 0 })} BAVA / $ {(window.web3Ava.utils.fromWei(this.props.bavaTokenBalance, 'Ether') * this.props.BAVAPrice).toLocaleString('en-US', { maximumFractionDigits: 0 })}</b>\n                                    </span>\n                                    <span className=\"float-right\" style={{ color: 'black', fontSize: '16px' }}>\n                                        Your Locked BAVA<br /><b>{parseFloat(window.web3Ava.utils.fromWei(this.props.lockedBavaTokenBalance, 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 0 })} BAVA / $ {(window.web3Ava.utils.fromWei(this.props.lockedBavaTokenBalance, 'Ether') * this.props.BAVAPrice).toLocaleString('en-US', { maximumFractionDigits: 0 })}</b>\n                                    </span>\n                                </div><br /><br />\n                                <div>\n                                    <span className=\"float-left\" style={{ color: 'black', fontSize: '16px' }}>Total pending harvest&nbsp;&nbsp;\n                                        <Popup\n                                            trigger={open => (\n                                                <span><BsFillQuestionCircleFill size={13} /></span>\n                                            )}\n                                            on=\"hover\"\n                                            offsetY={0}\n                                            offsetX={5}\n                                            position=\"right center\"\n                                        ><span className=\"textInfo\"><small>Total BAVA tokens earned acrossed all farm </small></span>\n                                        </Popup>\n                                    </span><br />\n                                    <span className=\"float-left \" style={{ color: 'black', fontSize: '16px' }}><b>\n                                        {parseFloat(window.web3Ava.utils.fromWei(this.props.totalpendingReward, 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 0 })} BAVA / $ {(window.web3Ava.utils.fromWei(this.props.totalpendingReward, 'Ether') * this.props.BAVAPrice).toLocaleString('en-US', { maximumFractionDigits: 0 })}</b>\n                                    </span>\n                                    <span className=\"float-right \">\n                                        <span><small>All pools compound at an optimal rate</small></span>\n                                    </span>\n                                </div>\n                            </div>\n                            :\n                            <div className=\"card-body\" style={{ paddingBottom: '5px' }}>\n                                <span>\n                                    <span className=\"float-left\" style={{ color: 'silver' }}>\n                                        Your BAVA Balance<br />\n                                        <div style={{ color: 'silver' }}><b>0 BAVA</b></div>\n                                    </span>\n                                    <span className=\"float-right\" style={{ color: 'silver' }}>\n                                        Your Locked BAVA<br />\n                                        <div style={{ color: 'silver' }}><b>0 BAVA</b></div>\n                                    </span>\n                                    <br /><br />\n                                </span>\n                                <span className=\"center mb-1\">\n                                    {this.props.farmloading ?\n                                        <div>\n                                            <Popup trigger={open => (<Buttons className=\"textDarkMedium cell2\" variant=\"outline\" size=\"lg\" >Connect to display</Buttons>)} modal {...{ contentStyle }}>\n                                                {close => (\n                                                    <div>\n                                                        <Buttons className=\"close cell2\" style={{ background: \"#fffae6\", borderRadius: \"12px\", padding: \"2px 5px\", fontSize: \"18px\" }} onClick={close}>\n                                                            &times;\n                                                        </Buttons>\n                                                        <div className=\"textWhiteMedium mb-2\" style={{ borderBottom: \"1px Solid Gray\", padding: \"10px\" }}> Connect a Wallet </div>\n                                                        <div className=\"center mt-4 mb-2\">\n                                                            <Buttons type=\"button\" variant=\"secondary\" style={{ height: \"50px\", width: \"100%\", minWidth: \"150px\", maxWidth: \"300px\", padding: \"6px 25px\" }} onClick={async () => {\n                                                                await this.props.connectMetamask()\n                                                            }}>\n                                                                <img src={fox} width=\"23\" height=\"23\" className=\"float-right\" alt=\"\" />\n                                                                <span className=\"float-left\">Metamask</span></Buttons>\n                                                        </div>\n                                                        <div className=\"center mt-2 mb-2\">\n                                                            <Buttons type=\"button\" variant=\"secondary\" style={{ height: \"50px\", width: \"100%\", minWidth: \"150px\", maxWidth: \"300px\", padding: \"6px 25px\" }} onClick={async () => {\n                                                                await this.props.connectCoin98()\n                                                            }}>\n                                                                <ImgNextGen\n                                                                    srcWebp={coin98}\n                                                                    width=\"23\" height=\"23\" className=\"float-right\" alt=\"\"\n                                                                />\n                                                                <span className=\"float-left\">Coin98</span></Buttons>\n                                                        </div>\n                                                        <div className=\"center mt-2 mb-4\">\n                                                            <Buttons type=\"button\" variant=\"secondary\" style={{ height: \"50px\", width: \"100%\", minWidth: \"150px\", maxWidth: \"300px\", padding: \"6px 25px\" }} onClick={async () => {\n                                                                await this.props.mobileWalletConnect()\n                                                            }}><img src={walletconnectlogo} width=\"26\" height=\"23\" className=\"float-right\" alt=\"\" /><span className=\"float-left\">WalletConnect</span></Buttons>\n                                                        </div>\n                                                    </div>\n                                                )}\n                                            </Popup>\n                                        </div>\n                                        : <Buttons className=\"textDarkMedium1 cell2\" variant=\"outline\" size=\"lg\" >Connect to display</Buttons>\n                                    }\n                                </span>\n                                <span>\n                                    <span className=\"float-left\" style={{ color: 'silver' }}>Total pending harvest&nbsp;\n                                        <Popup\n                                            trigger={open => (\n                                                <span><BsFillQuestionCircleFill size={13} /></span>\n                                            )}\n                                            on=\"hover\"\n                                            offsetY={0}\n                                            offsetX={5}\n                                            position=\"right center\"\n                                        ><span className=\"textInfo\"><small>Total BAVA tokens earned acrossed all farm </small></span>\n                                        </Popup>\n                                    </span><br />\n                                    <span className=\"float-left\">\n                                        <div style={{ color: 'silver' }}><b>0 BAVA</b></div>\n                                    </span>\n                                    <span className=\"float-right\" style={{ color: 'silver' }}>\n                                        <small><span>All pools compound at an optimal rate</span></small>\n                                    </span>\n                                </span>\n                            </div>\n                        }\n                    </div>\n                </MediaQuery>\n\n                <MediaQuery maxWidth={600}>\n                    <div className=\"ml-auto mr-auto card mb-3 cardbody\" style={{ color: 'black' }}>\n                        {this.props.wallet || this.props.walletConnect ?\n                            <div className=\"card-body\" style={{ paddingBottom: '5px' }}>\n                                <div>\n                                    <div className=\"left mb-3\" style={{ color: 'black', fontSize: '16px' }}>\n                                        Your BAVA Balance<br /><b>{parseFloat(window.web3Ava.utils.fromWei(this.props.bavaTokenBalance, 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 0 })} BAVA / $ {(window.web3Ava.utils.fromWei(this.props.bavaTokenBalance, 'Ether') * this.props.BAVAPrice).toLocaleString('en-US', { maximumFractionDigits: 0 })}</b>\n                                    </div>\n                                    <div className=\"left mb-3\" style={{ color: 'black', fontSize: '16px' }}>\n                                        Your Locked BAVA<br /><b>{parseFloat(window.web3Ava.utils.fromWei(this.props.lockedBavaTokenBalance, 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 0 })} BAVA / $ {(window.web3Ava.utils.fromWei(this.props.lockedBavaTokenBalance, 'Ether') * this.props.BAVAPrice).toLocaleString('en-US', { maximumFractionDigits: 0 })}</b>\n                                    </div>\n                                    <div className=\"left mb-2\" style={{ color: 'black', fontSize: '16px' }}>Total pending harvest&nbsp;\n                                        <Popup\n                                            trigger={open => (\n                                                <span><BsFillQuestionCircleFill size={13} /></span>\n                                            )}\n                                            on=\"hover\"\n                                            offsetY={0}\n                                            offsetX={5}\n                                            position=\"right center\"\n                                        ><span className=\"textInfo\"><small>Total BAVA tokens earned acrossed all farm </small></span>\n                                        </Popup><br /><b>{parseFloat(window.web3Ava.utils.fromWei(this.props.totalpendingReward, 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 0 })} BAVA / $ {(window.web3Ava.utils.fromWei(this.props.totalpendingReward, 'Ether') * this.props.BAVAPrice).toLocaleString('en-US', { maximumFractionDigits: 0 })}</b>\n                                    </div>\n                                    <div className=\"left \">\n                                        <span><small>All pools compound at an optimal rate</small></span>\n                                    </div>\n                                </div>\n                            </div>\n                            : <div className=\"card-body\" style={{ paddingBottom: '5px' }}>\n                                <div>\n                                    <div className=\"left mb-3\" style={{ color: 'silver' }}>\n                                        Your BAVA Balance<br />\n                                        <div style={{ color: 'silver' }}><b>0 BAVA</b></div>\n                                        {/* <div className=\"float-right\">\n                                            {this.props.farmloading ?\n                                                <div>\n                                                    <Popup trigger={open => (<Buttons className=\"textDarkMedium cell2\" style={{ maxWidth: '110px', height: '90px', marginRight: '15px' }} variant=\"outline\" size=\"lg\" >Connect to display</Buttons>)} modal {...{ contentStyle }}>\n                                                        {close => (\n                                                            <div>\n                                                                <Buttons className=\"close cell2\" style={{ background: \"#fffae6\", borderRadius: \"12px\", padding: \"2px 5px\", fontSize: \"18px\" }} onClick={close}>\n                                                                    &times;\n                                                                </Buttons>\n                                                                <div className=\"textWhiteMedium mb-2\" style={{ borderBottom: \"1px Solid Gray\", padding: \"10px\" }}> Connect a Wallet </div>\n                                                                <div className=\"center mt-4 mb-2\">\n                                                                    <Buttons type=\"button\" variant=\"secondary\" style={{ height: \"50px\", width: \"100%\", minWidth: \"150px\", maxWidth: \"300px\", padding: \"6px 25px\" }} onClick={async () => {\n                                                                        await this.props.connectMetamask()\n                                                                    }}>\n                                                                        <img src={fox} width=\"23\" height=\"23\" className=\"float-right\" alt=\"\" />\n                                                                        <span className=\"float-left\">Metamask</span></Buttons>\n                                                                </div>\n                                                                <div className=\"center mt-2 mb-2\">\n                                                                    <Buttons type=\"button\" variant=\"secondary\" style={{ height: \"50px\", width: \"100%\", minWidth: \"150px\", maxWidth: \"300px\", padding: \"6px 25px\" }} onClick={async () => {\n                                                                        await this.props.connectCoin98()\n                                                                    }}>\n                                                                        <ImgNextGen\n                                                                            srcWebp={coin98}\n                                                                            width=\"23\" height=\"23\" className=\"float-right\" alt=\"\"\n                                                                        />\n                                                                        <span className=\"float-left\">Coin98</span></Buttons>\n                                                                </div>\n                                                                <div className=\"center mt-2 mb-4\">\n                                                                    <Buttons type=\"button\" variant=\"secondary\" style={{ height: \"50px\", width: \"100%\", minWidth: \"150px\", maxWidth: \"300px\", padding: \"6px 25px\" }} onClick={async () => {\n                                                                        await this.props.mobileWalletConnect()\n                                                                    }}><img src={walletconnectlogo} width=\"26\" height=\"23\" className=\"float-right\" alt=\"\" /><span className=\"float-left\">WalletConnect</span></Buttons>\n                                                                </div>\n                                                            </div>\n                                                        )}\n                                                    </Popup>\n                                                </div>\n                                                : <Buttons className=\"textDarkMedium1 cell2\" style={{ maxWidth: '110px', height: '90px', marginRight: '15px' }} variant=\"outline\" size=\"lg\" >Connect to display</Buttons>\n                                            }\n                                        </div> */}\n                                    </div>\n                                    <div className=\"left mb-3\" style={{ color: 'silver' }}>\n                                        Your Locked BAVA<br />\n                                        <div style={{ color: 'silver' }}><b>0 BAVA</b></div>\n                                    </div>\n                                    <div className=\"left mb-2\" style={{ color: 'silver' }}>Total pending harvest&nbsp;&nbsp;\n                                        <Popup\n                                            trigger={open => (\n                                                <span><BsFillQuestionCircleFill size={13} /></span>\n                                            )}\n                                            on=\"hover\"\n                                            offsetY={0}\n                                            offsetX={5}\n                                            position=\"right center\"\n                                        ><span className=\"textInfo\"><small>Total BAVA tokens earned acrossed all farm </small></span>\n                                        </Popup><br /><div style={{ color: 'silver' }}><b>0 BAVA</b></div>\n                                    </div>\n                                    <span className=\"left \" style={{ color: 'silver' }}>\n                                        <small><span>All pools compound at an optimal rate</span></small>\n                                    </span>\n                                </div>\n                            </div>\n                        }\n                    </div>\n                </MediaQuery>\n\n                <div className=\"center\" style={{ color: 'grey' }}><small>&nbsp;! Attention:&nbsp;Be sure to read <a href=\"https://baklavaspace.gitbook.io/\" target=\"_blank\">baklavaspace.gitbook</a> before using the pools so you are familiar with protocol risks and fees!</small></div>\n                <div className=\"ml-auto mr-auto mt-3\">\n                    <div className=\"mb-4\">\n                        <div className=\"textMiddleBold1 float-right\" style={{ marginRight: '5px' }}><big>TVL $ {parseFloat(this.props.totalTVL).toLocaleString('en-US', { maximumFractionDigits: 0 })}</big></div>\n                        <div className=\"textMiddleBold1 left\" style={{ marginLeft: '2px', marginBottom: '5px' }}><big>Select Platform</big></div>\n                        <div className=\"left\">\n                            <ButtonGroup>\n                                <Buttons style={{ color: \"#ff9a04\", border: \"1px solid #ff9a04\" }} variant=\"link\" size=\"sm\" as={Link} to=\"/menu/v2\">PANGOLIN</Buttons>\n                                <Buttons style={{ color: \"#ff9a04\" }} variant=\"link\" size=\"sm\" as={Link} to=\"/menu/v2/kyber\">KYBERSWAP</Buttons>\n                                <Buttons style={{ color: \"#ff9a04\" }} variant=\"link\" size=\"sm\" as={Link} to=\"/menu/v2/traderjoe\">TRADER JOE</Buttons>\n                            </ButtonGroup>\n                        </div>\n                    </div>\n                    <div>\n                        {this.props.farmloading ?\n                            <div className=\"\" style={{}}>\n                                {this.props.poolSegmentInfoV2_3[0].map((poolSegmentInfoV2_3, key) => {\n                                    let i = this.props.poolSegmentInfoV2_3[0].indexOf(poolSegmentInfoV2_3)\n                                    return (\n                                        <div key={key}>\n                                            <div>\n                                                {this.props.poolSegmentInfoV2_3[0][i].lpName != \"BAVA-AVAX\" ? <div></div> :\n                                                    <div className=\"card mb-3 cardbody\">\n                                                        <div className=\"card-body\" style={{ padding: '1rem' }}>\n                                                            <div className=\"card cardbody\" style={{ border: '0px' }}>\n                                                                <MediaQuery minWidth={1001}>\n                                                                    <div className='rowC' style={{ padding: '0rem', cursor: 'pointer' }} onClick={() => {\n                                                                        this.clickfarmOpen(i)\n                                                                    }}>\n                                                                        <div className=\"float-left rowC\" style={{ minWidth: '220px' }}>\n                                                                            <span className=\"mr-3 mt-2\">\n                                                                                <div className=\"textMiddle\" style={{ width: '48px' }}>\n                                                                                    {this.props.poolSegmentInfoV2_3[0][i].icon.map((icon, key) => {\n                                                                                        return (<div key={key}>\n                                                                                            {icon.image == \"bava\" && <img className={icon.imagePosition} src={bava} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                            {icon.image == \"avax\" && <img className={icon.imagePosition} src={avax} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                            {icon.image == \"usdc\" && <img className={icon.imagePosition} src={usdc} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                            {icon.image == \"usdt\" && <img className={icon.imagePosition} src={usdt} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                            {icon.image == \"ust\" && <img className={icon.imagePosition} src={ust} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                            {icon.image == \"qi\" && <img className={icon.imagePosition} src={qi} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                            {icon.image == \"savax\" && <img className={icon.imagePosition} src={savax} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                            {icon.image == \"png\" && <img className={icon.imagePosition} src={png} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                            {icon.image == \"weth\" && <img className={icon.imagePosition} src={weth} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                        </div>)\n                                                                                    })}\n                                                                                </div>\n                                                                            </span>\n                                                                            <span>\n                                                                                <div className=\"textMiddle\"><b>{this.props.poolSegmentInfoV2_3[0][i].lpName}{this.props.poolSegmentInfoV2_3[0][i].status}</b></div>\n                                                                                <div className=\"textGrey exLink0\" onClick={() => {\n                                                                                    window.open(this.props.poolSegmentInfoV2_3[0][i].projectLink, '_blank')\n                                                                                }}>Uses: {this.props.poolSegmentInfoV2_3[0][i].platform}&nbsp;\n                                                                                    <ImgNextGen\n                                                                                        srcWebp={exlink}\n                                                                                        style={{ marginBottom: \"3px\" }} height='12' alt=\"\"\n                                                                                    /></div>\n                                                                                <div className=\"textGrey exLink0\" onClick={() => {\n                                                                                    window.open(this.props.poolSegmentInfoV2_3[0][i].getLPLink, '_blank')\n                                                                                }}>Get {this.props.poolSegmentInfoV2_3[0][i].lpName}&nbsp;\n                                                                                    <ImgNextGen\n                                                                                        srcWebp={exlink}\n                                                                                        style={{ marginBottom: \"3px\" }} height='12' alt=\"\"\n                                                                                    /></div>\n                                                                                <div className=\"textGrey exLink0\" onClick={() => {\n                                                                                    window.open(this.props.poolSegmentInfoV2_3[0][i].farmContract, '_blank')\n                                                                                }}>View On Explorer&nbsp;\n                                                                                    <ImgNextGen\n                                                                                        srcWebp={exlink}\n                                                                                        style={{ marginBottom: \"3px\" }} height='12' alt=\"\"\n                                                                                    /></div>\n                                                                            </span>\n                                                                        </div>\n                                                                        <div className='ml-5'>\n                                                                            <table className=\"float-right mr-auto\">\n                                                                                <thead className=\"textBlackSmall\" style={{ color: 'black' }}>\n                                                                                    <tr>\n                                                                                        <th scope=\"col\" width=\"140\">Wallet</th>\n                                                                                        <th scope=\"col\" width=\"140\">Deposited</th>\n                                                                                        <th scope=\"col\">Growth</th>\n                                                                                        <th scope=\"col\">APR&nbsp;<Popup\n                                                                                            trigger={open => (<span><BsFillQuestionCircleFill style={{ marginBottom: \"2px\" }} size={10} /></span>)}\n                                                                                            on=\"hover\"\n                                                                                            offsetY={0}\n                                                                                            offsetX={5}\n                                                                                            position=\"right center\"\n                                                                                            contentStyle={{ width: '150px' }}\n                                                                                        ><div className=\"textInfo\">APR Breakdown: </div><br />\n                                                                                            <div className=\"textInfo\">Baklava   : {parseFloat(this.props.aprV2_3[0][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })} %</div><br />\n                                                                                            <div className=\"textInfo\">Pangolin : {parseFloat(this.props.poolSegmentInfoV2_3[0][i].total3rdPartyAPR).toLocaleString('en-US', { maximumFractionDigits: 0 })} %</div>\n                                                                                        </Popup></th>\n                                                                                        <th scope=\"col\">APY <Popup\n                                                                                            trigger={open => (<span><BsFillQuestionCircleFill style={{ marginBottom: \"2px\" }} size={10} /></span>)}\n                                                                                            on=\"hover\"\n                                                                                            offsetY={0}\n                                                                                            offsetX={5}\n                                                                                            position=\"right center\"\n                                                                                            contentStyle={{ width: '150px' }}\n                                                                                        ><div className=\"textInfo\"><small>APY are calculated based on the compound APR number excluded locked reward.</small></div><br />\n                                                                                            <div className=\"textInfo\"><small>The value shown is based on daily compounding frequency.</small></div>\n                                                                                        </Popup></th>\n                                                                                        <th scope=\"col\">TVL</th>\n                                                                                    </tr>\n                                                                                </thead>\n                                                                                <tbody className=\"textGrey\">\n                                                                                    <tr>\n                                                                                        <td className=\"\">{(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.lpBalanceAccountV2_3[0][i]), 'Ether').toLocaleString('en-US', { maximumFractionDigits: 18 })}</div> : <div className=\"center\">\n                                                                                            <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>}</td>\n                                                                                        <td className=\"\">{(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.userSegmentInfoV2_3[0][i], 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 18 })}</div> : <div className=\"center\">\n                                                                                            <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\n                                                                                        <td className=\"\">{this.props.aprloading ? <div>{parseFloat(this.props.returnRatioV2_3[0][i]).toLocaleString('en-US', { maximumFractionDigits: 5 })}</div> : <div className=\"center\">\n                                                                                            <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\n                                                                                        <td className=\"\">{this.props.aprloading ? <div>{(parseFloat(this.props.aprV2_3[0][i]) + parseFloat(this.props.poolSegmentInfoV2_3[0][i].total3rdPartyAPR)).toLocaleString('en-US', { maximumFractionDigits: 0 })}%</div> : <div className=\"center\">\n                                                                                            <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\n                                                                                        <td className=\"\">{this.props.aprloading ? <div>{parseFloat(this.props.apyDailyV2_3[0][i]) > 1000000 ? <div>&#x3e;100,000%</div> : <div>{parseFloat(this.props.apyDailyV2_3[0][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })}%</div>}</div> : <div className=\"center\">\n                                                                                            <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>}</td>\n                                                                                        <td className=\"\">$ {parseFloat(this.props.tvlV2_3[0][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })} </td>\n                                                                                    </tr>\n                                                                                </tbody>\n                                                                            </table>\n                                                                        </div>\n                                                                    </div>\n                                                                </MediaQuery>\n                                                                <MediaQuery maxWidth={1000}>\n                                                                    <div className='card-body' style={{ padding: '0rem', cursor: 'pointer' }} onClick={() => {\n                                                                        this.clickfarmOpen(i)\n                                                                    }}>\n                                                                        <div className=\"float-left rowC mb-3\" style={{ minWidth: '200px' }}>\n                                                                            <span className=\"mr-3 mt-2\">\n                                                                                <div className=\"textMiddle\" style={{ width: '48px' }}>\n                                                                                    {this.props.poolSegmentInfoV2_3[0][i].icon.map((icon, key) => {\n                                                                                        return (<div key={key}>\n                                                                                            {icon.image == \"bava\" && <img className={icon.imagePosition} src={bava} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                            {icon.image == \"avax\" && <img className={icon.imagePosition} src={avax} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                            {icon.image == \"usdc\" && <img className={icon.imagePosition} src={usdc} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                            {icon.image == \"usdt\" && <img className={icon.imagePosition} src={usdt} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                            {icon.image == \"ust\" && <img className={icon.imagePosition} src={ust} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                            {icon.image == \"qi\" && <img className={icon.imagePosition} src={qi} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                            {icon.image == \"savax\" && <img className={icon.imagePosition} src={savax} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                            {icon.image == \"png\" && <img className={icon.imagePosition} src={png} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                            {icon.image == \"weth\" && <img className={icon.imagePosition} src={weth} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                        </div>)\n                                                                                    })}\n                                                                                </div>\n                                                                            </span>\n                                                                            <span>\n                                                                                <div className=\"textMiddle\"><b>{this.props.poolSegmentInfoV2_3[0][i].lpName}{this.props.poolSegmentInfoV2_3[0][i].status}</b></div>\n                                                                                <div className=\"textGrey exLink0\" onClick={() => {\n                                                                                    window.open(this.props.poolSegmentInfoV2_3[0][i].projectLink, '_blank')\n                                                                                }}>Uses: {this.props.poolSegmentInfoV2_3[0][i].platform}&nbsp;\n                                                                                    <ImgNextGen\n                                                                                        srcWebp={exlink}\n                                                                                        style={{ marginBottom: \"3px\" }} height='12' alt=\"\"\n                                                                                    /></div>\n                                                                                <div className=\"textGrey exLink0\" onClick={() => {\n                                                                                    window.open(this.props.poolSegmentInfoV2_3[0][i].getLPLink, '_blank')\n                                                                                }}>Get {this.props.poolSegmentInfoV2_3[0][i].lpName}&nbsp;\n                                                                                    <ImgNextGen\n                                                                                        srcWebp={exlink}\n                                                                                        style={{ marginBottom: \"3px\" }} height='12' alt=\"\"\n                                                                                    /></div>\n                                                                                <div className=\"textGrey exLink0\" onClick={() => {\n                                                                                    window.open(this.props.poolSegmentInfoV2_3[0][i].farmContract, '_blank')\n                                                                                }}>View On Explorer&nbsp;\n                                                                                    <ImgNextGen\n                                                                                        srcWebp={exlink}\n                                                                                        style={{ marginBottom: \"3px\" }} height='12' alt=\"\"\n                                                                                    /></div>\n                                                                            </span>\n                                                                        </div>\n                                                                        <MediaQuery minWidth={701}>\n                                                                            <div>\n                                                                                <table className=\"float-right mr-auto\">\n                                                                                    <thead className=\"textBlackSmall\" style={{ color: 'black' }}>\n                                                                                        <tr>\n                                                                                            <th scope=\"col\" width=\"140\">Wallet</th>\n                                                                                            <th scope=\"col\" width=\"140\">Deposited</th>\n                                                                                            <th scope=\"col\">Growth</th>\n                                                                                            <th scope=\"col\">APR&nbsp;<Popup\n                                                                                                trigger={open => (<span><BsFillQuestionCircleFill style={{ marginBottom: \"2px\" }} size={10} /></span>)}\n                                                                                                on=\"hover\"\n                                                                                                offsetY={0}\n                                                                                                offsetX={5}\n                                                                                                position=\"right center\"\n                                                                                                contentStyle={{ width: '150px' }}\n                                                                                            ><div className=\"textInfo\">APR Breakdown: </div><br />\n                                                                                                <div className=\"textInfo\">Baklava   : {parseFloat(this.props.aprV2_3[0][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })} %</div><br />\n                                                                                                <div className=\"textInfo\">Pangolin : {parseFloat(this.props.poolSegmentInfoV2_3[0][i].total3rdPartyAPR).toLocaleString('en-US', { maximumFractionDigits: 0 })} %</div>\n                                                                                            </Popup></th>\n                                                                                            <th scope=\"col\">APY <Popup\n                                                                                                trigger={open => (<span><BsFillQuestionCircleFill style={{ marginBottom: \"2px\" }} size={10} /></span>)}\n                                                                                                on=\"hover\"\n                                                                                                offsetY={0}\n                                                                                                offsetX={5}\n                                                                                                position=\"right center\"\n                                                                                                contentStyle={{ width: '150px' }}\n                                                                                            ><div className=\"textInfo\"><small>APY are calculated based on the compound APR number excluded locked reward.</small></div><br />\n                                                                                                <div className=\"textInfo\"><small>The value shown is based on daily compounding frequency.</small></div>\n                                                                                            </Popup></th>\n                                                                                            <th scope=\"col\">TVL</th>\n                                                                                        </tr>\n                                                                                    </thead>\n                                                                                    <tbody className=\"textGrey\">\n                                                                                        <tr>\n                                                                                            <td className=\"\">{(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.lpBalanceAccountV2_3[0][i]), 'Ether').toLocaleString('en-US', { maximumFractionDigits: 18 })}</div> : <div className=\"center\">\n                                                                                                <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>}</td>\n                                                                                            <td className=\"\">{(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.userSegmentInfoV2_3[0][i], 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 18 })}</div> : <div className=\"center\">\n                                                                                                <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\n                                                                                            <td className=\"\">{this.props.aprloading ? <div>{parseFloat(this.props.returnRatioV2_3[0][i]).toLocaleString('en-US', { maximumFractionDigits: 5 })}</div> : <div className=\"center\">\n                                                                                                <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\n                                                                                            <td className=\"\">{this.props.aprloading ? <div>{(parseFloat(this.props.aprV2_3[0][i]) + parseFloat(this.props.poolSegmentInfoV2_3[0][i].total3rdPartyAPR)).toLocaleString('en-US', { maximumFractionDigits: 0 })}%</div> : <div className=\"center\">\n                                                                                                <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\n                                                                                            <td className=\"\">{this.props.aprloading ? <div>{parseFloat(this.props.apyDailyV2_3[0][i]) > 1000000 ? <div>&#x3e;100,000%</div> : <div>{parseFloat(this.props.apyDailyV2_3[0][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })}%</div>}</div> : <div className=\"center\">\n                                                                                                <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>}</td>\n                                                                                            <td className=\"\">$ {parseFloat(this.props.tvlV2_3[0][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })} </td>\n                                                                                        </tr>\n                                                                                    </tbody>\n                                                                                </table>\n                                                                            </div>\n                                                                        </MediaQuery>\n                                                                        <MediaQuery maxWidth={700}>\n                                                                            <MediaQuery minWidth={551}>\n                                                                                <div>\n                                                                                    <table className=\"float-right mr-auto\">\n                                                                                        <thead className=\"textBlackSmall\" style={{ color: 'black' }}>\n                                                                                            <tr>\n                                                                                                <th scope=\"col\" width=\"140\">Wallet</th>\n                                                                                                <th scope=\"col\" width=\"140\">Deposited</th>\n                                                                                                <th scope=\"col\">Growth</th>\n                                                                                            </tr>\n                                                                                        </thead>\n                                                                                        <tbody className=\"textGrey\">\n                                                                                            <tr>\n                                                                                                <td className=\"\">{(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.lpBalanceAccountV2_3[0][i]), 'Ether').toLocaleString('en-US', { maximumFractionDigits: 18 })}</div> : <div className=\"center\">\n                                                                                                    <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>}</td>\n                                                                                                <td className=\"\">{(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.userSegmentInfoV2_3[0][i], 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 18 })}</div> : <div className=\"center\">\n                                                                                                    <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\n                                                                                                <td className=\"\">{this.props.aprloading ? <div>{parseFloat(this.props.returnRatioV2_3[0][i]).toLocaleString('en-US', { maximumFractionDigits: 5 })}</div> : <div className=\"center\">\n                                                                                                    <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\n                                                                                            </tr>\n                                                                                        </tbody>\n                                                                                        <thead className=\"textBlackSmall\" style={{ color: 'black' }}>\n                                                                                            <tr>\n                                                                                                <th scope=\"col\">APR&nbsp;<Popup\n                                                                                                    trigger={open => (<span><BsFillQuestionCircleFill style={{ marginBottom: \"2px\" }} size={10} /></span>)}\n                                                                                                    on=\"hover\"\n                                                                                                    offsetY={0}\n                                                                                                    offsetX={5}\n                                                                                                    position=\"right center\"\n                                                                                                    contentStyle={{ width: '150px' }}\n                                                                                                ><div className=\"textInfo\">APR Breakdown: </div><br />\n                                                                                                    <div className=\"textInfo\">Baklava   : {parseFloat(this.props.aprV2_3[0][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })} %</div><br />\n                                                                                                    <div className=\"textInfo\">Pangolin : {parseFloat(this.props.poolSegmentInfoV2_3[0][i].total3rdPartyAPR).toLocaleString('en-US', { maximumFractionDigits: 0 })} %</div>\n                                                                                                </Popup></th>\n                                                                                                <th scope=\"col\">APY <Popup\n                                                                                                    trigger={open => (<span><BsFillQuestionCircleFill style={{ marginBottom: \"2px\" }} size={10} /></span>)}\n                                                                                                    on=\"hover\"\n                                                                                                    offsetY={0}\n                                                                                                    offsetX={5}\n                                                                                                    position=\"right center\"\n                                                                                                    contentStyle={{ width: '150px' }}\n                                                                                                ><div className=\"textInfo\"><small>APY are calculated based on the compound APR number excluded locked reward.</small></div><br />\n                                                                                                    <div className=\"textInfo\"><small>The value shown is based on daily compounding frequency.</small></div>\n                                                                                                </Popup></th>\n                                                                                                <th scope=\"col\">TVL</th>\n                                                                                            </tr>\n                                                                                        </thead>\n                                                                                        <tbody className=\"textGrey\">\n                                                                                            <tr>\n                                                                                                <td className=\"\">{this.props.aprloading ? <div>{(parseFloat(this.props.aprV2_3[0][i]) + parseFloat(this.props.poolSegmentInfoV2_3[0][i].total3rdPartyAPR)).toLocaleString('en-US', { maximumFractionDigits: 0 })}%</div> : <div className=\"center\">\n                                                                                                    <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\n                                                                                                <td className=\"\">{this.props.aprloading ? <div>{parseFloat(this.props.apyDailyV2_3[0][i]) > 1000000 ? <div>&#x3e;100,000%</div> : <div>{parseFloat(this.props.apyDailyV2_3[0][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })}%</div>}</div> : <div className=\"center\">\n                                                                                                    <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>}</td>\n                                                                                                <td className=\"\">$ {parseFloat(this.props.tvlV2_3[0][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })} </td>\n                                                                                            </tr>\n                                                                                        </tbody>\n                                                                                    </table>\n                                                                                </div>\n                                                                            </MediaQuery>\n                                                                            <MediaQuery maxWidth={550}>\n                                                                                <div>\n                                                                                    <table className=\"float-right mr-auto\">\n                                                                                        <thead className=\"textBlackSmall\" style={{ color: 'black' }}>\n                                                                                            <tr>\n                                                                                                <th scope=\"col\" width=\"140\">Wallet</th>\n                                                                                                <th scope=\"col\" width=\"140\">Deposited</th>\n                                                                                            </tr>\n                                                                                        </thead>\n                                                                                        <tbody className=\"textGrey\">\n                                                                                            <tr>\n                                                                                                <td className=\"\">{(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.lpBalanceAccountV2_3[0][i]), 'Ether').toLocaleString('en-US', { maximumFractionDigits: 18 })}</div> : <div className=\"center\">\n                                                                                                    <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>}</td>\n                                                                                                <td className=\"\">{(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.userSegmentInfoV2_3[0][i], 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 18 })}</div> : <div className=\"center\">\n                                                                                                    <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\n                                                                                            </tr>\n                                                                                        </tbody>\n                                                                                        <thead className=\"textBlackSmall\" style={{ color: 'black' }}>\n                                                                                            <tr>\n                                                                                                <th scope=\"col\">Growth</th>\n                                                                                                <th scope=\"col\">APR&nbsp;<Popup\n                                                                                                    trigger={open => (<span><BsFillQuestionCircleFill style={{ marginBottom: \"2px\" }} size={10} /></span>)}\n                                                                                                    on=\"hover\"\n                                                                                                    offsetY={0}\n                                                                                                    offsetX={5}\n                                                                                                    position=\"right center\"\n                                                                                                    contentStyle={{ width: '150px' }}\n                                                                                                ><div className=\"textInfo\">APR Breakdown: </div><br />\n                                                                                                    <div className=\"textInfo\">Baklava   : {parseFloat(this.props.aprV2_3[0][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })} %</div><br />\n                                                                                                    <div className=\"textInfo\">Pangolin : {parseFloat(this.props.poolSegmentInfoV2_3[0][i].total3rdPartyAPR).toLocaleString('en-US', { maximumFractionDigits: 0 })} %</div>\n                                                                                                </Popup></th>\n                                                                                            </tr>\n                                                                                        </thead>\n                                                                                        <tbody className=\"textGrey\">\n                                                                                            <tr>\n                                                                                                <td className=\"\">{this.props.aprloading ? <div>{parseFloat(this.props.returnRatioV2_3[0][i]).toLocaleString('en-US', { maximumFractionDigits: 5 })}</div> : <div className=\"center\">\n                                                                                                    <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\n                                                                                                <td className=\"\">{this.props.aprloading ? <div>{(parseFloat(this.props.aprV2_3[0][i]) + parseFloat(this.props.poolSegmentInfoV2_3[0][i].total3rdPartyAPR)).toLocaleString('en-US', { maximumFractionDigits: 0 })}%</div> : <div className=\"center\">\n                                                                                                    <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\n                                                                                            </tr>\n                                                                                        </tbody>\n                                                                                        <thead className=\"textBlackSmall\" style={{ color: 'black' }}>\n                                                                                            <tr>\n                                                                                                <th scope=\"col\">APY <Popup\n                                                                                                    trigger={open => (<span><BsFillQuestionCircleFill style={{ marginBottom: \"2px\" }} size={10} /></span>)}\n                                                                                                    on=\"hover\"\n                                                                                                    offsetY={0}\n                                                                                                    offsetX={5}\n                                                                                                    position=\"right center\"\n                                                                                                    contentStyle={{ width: '150px' }}\n                                                                                                ><div className=\"textInfo\"><small>APY are calculated based on the compound APR number excluded locked reward.</small></div><br />\n                                                                                                    <div className=\"textInfo\"><small>The value shown is based on daily compounding frequency.</small></div>\n                                                                                                </Popup></th>\n                                                                                                <th scope=\"col\">TVL</th>\n                                                                                            </tr>\n                                                                                        </thead>\n                                                                                        <tbody className=\"textGrey\">\n                                                                                            <tr>\n                                                                                                <td className=\"\">{this.props.aprloading ? <div>{parseFloat(this.props.apyDailyV2_3[0][i]) > 1000000 ? <div>&#x3e;100,000%</div> : <div>{parseFloat(this.props.apyDailyV2_3[0][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })}%</div>}</div> : <div className=\"center\">\n                                                                                                    <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>}</td>\n                                                                                                <td className=\"\">$ {parseFloat(this.props.tvlV2_3[0][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })} </td>\n                                                                                            </tr>\n                                                                                        </tbody>\n                                                                                    </table>\n                                                                                </div>\n                                                                            </MediaQuery>\n                                                                        </MediaQuery>\n                                                                    </div>\n                                                                </MediaQuery>\n\n\n                                                                {this.state.farmV2_3Open[i] ?\n                                                                    <div>\n                                                                        {this.props.wallet || this.props.walletConnect ?\n                                                                            <div className=\"borderTop \">\n                                                                                <div className=\"mt-3\">\n                                                                                    <MediaQuery minWidth={951}>\n                                                                                        <div className=\"float-left\">\n                                                                                            <div className=\"card cardbody mr-3\" style={{ marginBottom: '6px', width: '300px' }}>\n                                                                                                <div className=\"card-body\" style={{ padding: '0.5rem' }}>\n                                                                                                    <span className=\"float-left\" style={{ color: 'black' }}><small>BAVA earned</small></span><br />\n                                                                                                    <span className=\"float-left\" style={{ color: 'black', marginTop: '8px' }}><small>{this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.pendingSegmentRewardV2_3[0][i], 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 0 })}</div> :\n                                                                                                        <div className=\"ml-3 lds-facebook\"><div></div><div></div><div></div></div>}</small></span>\n                                                                                                    <span className=\"float-right\">\n                                                                                                        <Buttons\n                                                                                                            variant=\"success\"\n                                                                                                            size=\"sm\"\n                                                                                                            style={{ minWidth: '80px' }}\n                                                                                                            onClick={(event) => {\n                                                                                                                event.preventDefault()\n                                                                                                                console.log(i)\n                                                                                                                this.props.harvest(i, 0, 4)\n                                                                                                            }}>\n                                                                                                            Harvest\n                                                                                                        </Buttons></span>\n                                                                                                </div>\n                                                                                            </div>\n                                                                                            <div className=\"card cardbody float-left mr-3\" style={{ width: '300px' }}>\n                                                                                                <div className=\"card-body\" style={{ padding: '0.5rem' }}>\n                                                                                                    <span className=\"float-left\" style={{ color: 'black' }}><small>Reinvest </small><Popup\n                                                                                                        trigger={open => (\n                                                                                                            <span><BsFillQuestionCircleFill size={13} /></span>\n                                                                                                        )}\n                                                                                                        on=\"hover\"\n                                                                                                        offsetY={0}\n                                                                                                        offsetX={5}\n                                                                                                        position=\"right center\"\n                                                                                                    ><span className=\"textInfo\"><small>This farm has a 2% reinvest reward paid in WAVAX. Pressing the button is optional.</small></span>\n                                                                                                    </Popup></span><br />\n                                                                                                    <span className=\"float-left\" style={{ color: 'black', marginTop: '8px' }}><small>{this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.reinvestAmount[0][i], 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 5 })} WAVAX</div> :\n                                                                                                        <div className=\"ml-3 lds-facebook\"><div></div><div></div><div></div></div>}</small></span>\n                                                                                                    <span className=\"float-right\">\n                                                                                                        <Buttons\n                                                                                                            variant=\"info\"\n                                                                                                            size=\"sm\"\n                                                                                                            style={{ minWidth: '80px' }}\n                                                                                                            onClick={(event) => {\n                                                                                                                if (bigInt(this.props.reinvestAmount[0][i]).value > bigInt(1000000000000000000).value) {\n                                                                                                                    event.preventDefault()\n                                                                                                                    console.log(i)\n                                                                                                                    this.props.reinvest(i, 0)\n                                                                                                                } else {\n                                                                                                                    alert(\"Not enough token to reinvest! Min reinvest amount is 1 Avax\")\n                                                                                                                }\n                                                                                                            }}>\n                                                                                                            Reinvest\n                                                                                                        </Buttons></span>\n                                                                                                </div>\n                                                                                            </div>\n                                                                                        </div>\n                                                                                    </MediaQuery>\n\n                                                                                    <MediaQuery maxWidth={950}>\n                                                                                        <div>\n                                                                                            <div className=\"card cardbody\" style={{ marginBottom: '6px' }}>\n                                                                                                <div className=\"card-body\" style={{ padding: '0.5rem' }}>\n                                                                                                    <span className=\"float-left\" style={{ color: 'black' }}><small>BAVA earned</small></span><br />\n                                                                                                    <span className=\"float-left\" style={{ color: 'black', marginTop: '8px' }}><small>{this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.pendingSegmentRewardV2_3[0][i], 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 0 })}</div> :\n                                                                                                        <div className=\"ml-3 lds-facebook\"><div></div><div></div><div></div></div>}</small></span>\n                                                                                                    <span className=\"float-right\">\n                                                                                                        <Buttons\n                                                                                                            variant=\"success\"\n                                                                                                            size=\"sm\"\n                                                                                                            style={{ minWidth: '80px' }}\n                                                                                                            onClick={(event) => {\n                                                                                                                event.preventDefault()\n                                                                                                                console.log(i)\n                                                                                                                this.props.harvest(i, 0, 4)\n                                                                                                            }}>\n                                                                                                            Harvest\n                                                                                                        </Buttons></span>\n                                                                                                </div>\n                                                                                            </div>\n                                                                                            <div className=\"card cardbody\" style={{ marginBottom: '6px' }}>\n                                                                                                <div className=\"card-body\" style={{ padding: '0.5rem' }}>\n                                                                                                    <span className=\"float-left\" style={{ color: 'black' }}><small>Reinvest </small><Popup\n                                                                                                        trigger={open => (\n                                                                                                            <span><BsFillQuestionCircleFill size={13} /></span>\n                                                                                                        )}\n                                                                                                        on=\"hover\"\n                                                                                                        offsetY={0}\n                                                                                                        offsetX={5}\n                                                                                                        position=\"right center\"\n                                                                                                    ><span className=\"textInfo\"><small>This farm has a 2% reinvest reward paid in WAVAX. Pressing the button is optional.</small></span>\n                                                                                                    </Popup></span><br />\n                                                                                                    <span className=\"float-left\" style={{ color: 'black', marginTop: '8px' }}><small>{this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.reinvestAmount[0][i], 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 5 })} WAVAX</div> :\n                                                                                                        <div className=\"ml-3 lds-facebook\"><div></div><div></div><div></div></div>}</small></span>\n                                                                                                    <span className=\"float-right\">\n                                                                                                        <Buttons\n                                                                                                            variant=\"info\"\n                                                                                                            size=\"sm\"\n                                                                                                            style={{ minWidth: '80px' }}\n                                                                                                            onClick={(event) => {\n                                                                                                                if (bigInt(this.props.reinvestAmount[0][i]).value > bigInt(1000000000000000000).value) {\n                                                                                                                    event.preventDefault()\n                                                                                                                    console.log(i)\n                                                                                                                    this.props.reinvest(i, 0)\n                                                                                                                } else {\n                                                                                                                    alert(\"Not enough token to reinvest! Min reinvest amount is 1 Avax\")\n                                                                                                                }\n                                                                                                            }}>\n                                                                                                            Reinvest\n                                                                                                        </Buttons></span>\n                                                                                                </div>\n                                                                                            </div>\n                                                                                        </div>\n                                                                                    </MediaQuery>\n\n                                                                                    <div className=\"card cardbody\" style={{ minWidth: '300px' }}>\n                                                                                        <div className=\"card-body\" style={{ padding: '0.5rem' }}>\n                                                                                            <div className='ml-2 mt-2 mb-2'>\n                                                                                                {this.state.depositAction[i] == true ?\n                                                                                                    <div style={{ height: '30px' }}>\n                                                                                                        <div className='float-left' style={{ paddingTop: '0px' }}>\n                                                                                                            <ButtonGroup>\n                                                                                                                <div>\n                                                                                                                    <Buttons className=\"textTransparentButton center\" style={{ textDecoration: 'none', marginRight: '5px' }} variant=\"link\" size=\"sm\" onClick={async () => {\n                                                                                                                        await this.setAction(i, 0)\n                                                                                                                    }}><b>Deposit</b></Buttons></div>\n                                                                                                                <div>\n                                                                                                                    <Buttons className=\"textBlackButton center mr-1\" style={{ textDecoration: 'none' }} variant=\"link\" size=\"sm\" onClick={async () => {\n                                                                                                                        await this.setAction(i, 1)\n                                                                                                                    }}>Withdraw</Buttons></div>\n                                                                                                            </ButtonGroup>\n                                                                                                        </div>\n                                                                                                    </div>\n                                                                                                    : <div style={{ height: '30px' }}>\n                                                                                                        <div className='float-left' style={{ paddingTop: '0px' }}>\n                                                                                                            <ButtonGroup>\n                                                                                                                <div>\n                                                                                                                    <Buttons className=\"textBlackButton center mr-1\" style={{ textDecoration: 'none' }} variant=\"link\" size=\"sm\" onClick={async () => {\n                                                                                                                        await this.setAction(i, 0)\n                                                                                                                    }}><b>Deposit</b></Buttons></div>\n                                                                                                                <div>\n                                                                                                                    <Buttons className=\"textTransparentButton center mr-1\" style={{ textDecoration: 'none' }} variant=\"link\" size=\"sm\" onClick={async () => {\n                                                                                                                        await this.setAction(i, 1)\n                                                                                                                    }}>Withdraw</Buttons></div>\n                                                                                                            </ButtonGroup>\n                                                                                                        </div>\n                                                                                                    </div>\n                                                                                                }\n                                                                                            </div>\n                                                                                            <div className='borderBottom'></div>\n                                                                                            <div className='ml-1 mr-1'>\n                                                                                                {this.state.depositAction[i] == true ?\n                                                                                                    <div><Deposit\n                                                                                                        wallet={this.props.wallet}\n                                                                                                        walletConnect={this.props.walletConnect}\n                                                                                                        accountLoading={this.props.accountLoading}\n                                                                                                        lpBalanceAccount={this.props.lpBalanceAccountV2_3}\n                                                                                                        poolSegmentInfo={this.props.poolSegmentInfoV2_3}\n                                                                                                        userSegmentInfo={this.props.userSegmentInfoV2_3}\n                                                                                                        lpSegmentAllowanceV2_3={this.props.lpSegmentAllowanceV2_3[0][i]}\n                                                                                                        i={i}\n                                                                                                        n='0'\n                                                                                                        v='4'\n                                                                                                        approve={this.props.approve}\n                                                                                                        deposit={this.props.deposit}\n                                                                                                        withdraw={this.props.withdraw}\n                                                                                                    /></div>\n                                                                                                    :\n                                                                                                    <div><Withdraw\n                                                                                                        wallet={this.props.wallet}\n                                                                                                        walletConnect={this.props.walletConnect}\n                                                                                                        accountLoading={this.props.accountLoading}\n                                                                                                        lpBalanceAccount={this.props.lpBalanceAccountV2_3}\n                                                                                                        poolSegmentInfo={this.props.poolSegmentInfoV2_3}\n                                                                                                        userSegmentInfo={this.props.userSegmentInfoV2_3}\n                                                                                                        lpSegmentAllowanceV2_3={this.props.lpSegmentAllowanceV2_3[0][i]}\n                                                                                                        i={i}\n                                                                                                        n='0'\n                                                                                                        v='4'\n                                                                                                        approve={this.props.approve}\n                                                                                                        deposit={this.props.deposit}\n                                                                                                        withdraw={this.props.withdraw}\n                                                                                                    /></div>\n                                                                                                }\n                                                                                            </div>\n                                                                                        </div>\n                                                                                    </div>\n                                                                                </div>\n                                                                            </div> :\n                                                                            <div className=\"center borderTop\" >\n                                                                                <span className=\"mt-3\" style={{ color: 'black' }}><small>Wallet Connection to Avalanche required</small></span>\n                                                                            </div>}\n                                                                    </div> :\n                                                                    <div></div>\n                                                                }\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                }\n                                            </div>\n                                        </div>\n                                    )\n                                })}\n\n\n                                {this.props.poolSegmentInfoV2_3[0].map((poolSegmentInfoV2_3, key) => {\n                                    let i = this.props.poolSegmentInfoV2_3[0].indexOf(poolSegmentInfoV2_3)\n                                    return (\n                                        <div key={key}>\n                                            <div>\n                                                {this.props.poolSegmentInfoV2_3[0][i].lpName == \"BAVA-AVAX\" ? <div></div> :\n                                                    <div className=\"card mb-3 cardbody\">\n                                                        <div className=\"card-body\" style={{ padding: '1rem' }}>\n                                                            <div className=\"card cardbody\" style={{ border: '0px' }}>\n                                                                <MediaQuery minWidth={1001}>\n                                                                    <div className='card-body rowC' style={{ padding: '0rem', cursor: 'pointer' }} onClick={() => {\n                                                                        this.clickfarmOpen(i)\n                                                                    }}>\n                                                                        <div className=\"float-left rowC\" style={{ minWidth: '220px' }}>\n                                                                            <span className=\"mr-3 mt-2\">\n                                                                                <div className=\"textMiddle\" style={{ width: '48px' }}>\n                                                                                    {this.props.poolSegmentInfoV2_3[0][i].icon.map((icon, key) => {\n                                                                                        return (<div key={key}>\n                                                                                            {icon.image == \"bava\" && <img className={icon.imagePosition} src={bava} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                            {icon.image == \"avax\" && <img className={icon.imagePosition} src={avax} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                            {icon.image == \"usdc\" && <img className={icon.imagePosition} src={usdc} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                            {icon.image == \"usdt\" && <img className={icon.imagePosition} src={usdt} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                            {icon.image == \"ust\" && <img className={icon.imagePosition} src={ust} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                            {icon.image == \"qi\" && <img className={icon.imagePosition} src={qi} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                            {icon.image == \"savax\" && <img className={icon.imagePosition} src={savax} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                            {icon.image == \"png\" && <img className={icon.imagePosition} src={png} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                            {icon.image == \"weth\" && <img className={icon.imagePosition} src={weth} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                        </div>)\n                                                                                    })}\n                                                                                </div>\n                                                                            </span>\n                                                                            <span>\n                                                                                <div className=\"textMiddle\"><b>{this.props.poolSegmentInfoV2_3[0][i].lpName}{this.props.poolSegmentInfoV2_3[0][i].status}</b></div>\n                                                                                <div className=\"textGrey exLink0\" onClick={() => {\n                                                                                    window.open(this.props.poolSegmentInfoV2_3[0][i].projectLink, '_blank')\n                                                                                }}>Uses: {this.props.poolSegmentInfoV2_3[0][i].platform}&nbsp;\n                                                                                    <ImgNextGen\n                                                                                        srcWebp={exlink}\n                                                                                        style={{ marginBottom: \"3px\" }} height='12' alt=\"\"\n                                                                                    /></div>\n                                                                                <div className=\"textGrey exLink0\" onClick={() => {\n                                                                                    window.open(this.props.poolSegmentInfoV2_3[0][i].getLPLink, '_blank')\n                                                                                }}>Get {this.props.poolSegmentInfoV2_3[0][i].lpName}&nbsp;\n                                                                                    <ImgNextGen\n                                                                                        srcWebp={exlink}\n                                                                                        style={{ marginBottom: \"3px\" }} height='12' alt=\"\"\n                                                                                    /></div>\n                                                                                <div className=\"textGrey exLink0\" onClick={() => {\n                                                                                    window.open(this.props.poolSegmentInfoV2_3[0][i].farmContract, '_blank')\n                                                                                }}>View On Explorer&nbsp;\n                                                                                    <ImgNextGen\n                                                                                        srcWebp={exlink}\n                                                                                        style={{ marginBottom: \"3px\" }} height='12' alt=\"\"\n                                                                                    /></div>\n                                                                            </span>\n                                                                        </div>\n                                                                        <div className=\"ml-5\">\n                                                                            <table className=\"float-right mr-auto\">\n                                                                                <thead className=\"textBlackSmall\" style={{ color: 'black' }}>\n                                                                                    <tr>\n                                                                                        <th scope=\"col\" width=\"140\">Wallet</th>\n                                                                                        <th scope=\"col\" width=\"140\">Deposited</th>\n                                                                                        <th scope=\"col\">Growth</th>\n                                                                                        <th scope=\"col\">APR&nbsp;<Popup\n                                                                                            trigger={open => (<span><BsFillQuestionCircleFill style={{ marginBottom: \"2px\" }} size={10} /></span>)}\n                                                                                            on=\"hover\"\n                                                                                            offsetY={0}\n                                                                                            offsetX={5}\n                                                                                            position=\"right center\"\n                                                                                            contentStyle={{ width: '150px' }}\n                                                                                        ><div className=\"textInfo\">APR Breakdown: </div><br />\n                                                                                            <div className=\"textInfo\">Baklava   : {parseFloat(this.props.aprV2_3[0][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })} %</div><br />\n                                                                                            <div className=\"textInfo\">Pangolin : {parseFloat(this.props.poolSegmentInfoV2_3[0][i].total3rdPartyAPR).toLocaleString('en-US', { maximumFractionDigits: 0 })} %</div>\n                                                                                        </Popup></th>\n                                                                                        <th scope=\"col\">APY <Popup\n                                                                                            trigger={open => (<span><BsFillQuestionCircleFill style={{ marginBottom: \"2px\" }} size={10} /></span>)}\n                                                                                            on=\"hover\"\n                                                                                            offsetY={0}\n                                                                                            offsetX={5}\n                                                                                            position=\"right center\"\n                                                                                            contentStyle={{ width: '150px' }}\n                                                                                        ><div className=\"textInfo\"><small>APY are calculated based on the compound APR number excluded locked reward.</small></div><br />\n                                                                                            <div className=\"textInfo\"><small>The value shown is based on daily compounding frequency.</small></div>\n                                                                                        </Popup></th>\n                                                                                        <th scope=\"col\">TVL</th>\n                                                                                    </tr>\n                                                                                </thead>\n                                                                                <tbody className=\"textGrey\">\n                                                                                    <tr>\n                                                                                        <td className=\"\">{(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.lpBalanceAccountV2_3[0][i]), 'Ether').toLocaleString('en-US', { maximumFractionDigits: 18 })}</div> : <div className=\"center\">\n                                                                                            <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>}</td>\n                                                                                        <td className=\"\">{(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.userSegmentInfoV2_3[0][i], 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 18 })}</div> : <div className=\"center\">\n                                                                                            <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\n                                                                                        <td className=\"\">{this.props.aprloading ? <div>{parseFloat(this.props.returnRatioV2_3[0][i]).toLocaleString('en-US', { maximumFractionDigits: 5 })}</div> : <div className=\"center\">\n                                                                                            <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\n                                                                                        <td className=\"\">{this.props.aprloading ? <div>{(parseFloat(this.props.aprV2_3[0][i]) + parseFloat(this.props.poolSegmentInfoV2_3[0][i].total3rdPartyAPR)).toLocaleString('en-US', { maximumFractionDigits: 0 })}%</div> : <div className=\"center\">\n                                                                                            <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\n                                                                                        <td className=\"\">{this.props.aprloading ? <div>{parseFloat(this.props.apyDailyV2_3[0][i]) > 1000000 ? <div>&#x3e;100,000%</div> : <div>{parseFloat(this.props.apyDailyV2_3[0][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })}%</div>}</div> : <div className=\"center\">\n                                                                                            <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>}</td>\n                                                                                        <td className=\"\">$ {parseFloat(this.props.tvlV2_3[0][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })} </td>\n                                                                                    </tr>\n                                                                                </tbody>\n                                                                            </table>\n                                                                        </div>\n                                                                    </div>\n                                                                </MediaQuery>\n                                                                <MediaQuery maxWidth={1000}>\n                                                                    <div className='card-body' style={{ padding: '0rem', cursor: 'pointer' }} onClick={() => {\n                                                                        this.clickfarmOpen(i)\n                                                                    }}>\n                                                                        <div className=\"float-left rowC mb-3\" style={{ minWidth: '200px' }}>\n                                                                            <span className=\"mr-3 mt-2\">\n                                                                                <div className=\"textMiddle\" style={{ width: '48px' }}>\n                                                                                    {this.props.poolSegmentInfoV2_3[0][i].icon.map((icon, key) => {\n                                                                                        return (<div key={key}>\n                                                                                            {icon.image == \"bava\" && <img className={icon.imagePosition} src={bava} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                            {icon.image == \"avax\" && <img className={icon.imagePosition} src={avax} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                            {icon.image == \"usdc\" && <img className={icon.imagePosition} src={usdc} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                            {icon.image == \"usdt\" && <img className={icon.imagePosition} src={usdt} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                            {icon.image == \"ust\" && <img className={icon.imagePosition} src={ust} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                            {icon.image == \"qi\" && <img className={icon.imagePosition} src={qi} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                            {icon.image == \"savax\" && <img className={icon.imagePosition} src={savax} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                            {icon.image == \"png\" && <img className={icon.imagePosition} src={png} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                            {icon.image == \"weth\" && <img className={icon.imagePosition} src={weth} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                        </div>)\n                                                                                    })}\n                                                                                </div>\n                                                                            </span>\n                                                                            <span>\n                                                                                <div className=\"textMiddle\"><b>{this.props.poolSegmentInfoV2_3[0][i].lpName}{this.props.poolSegmentInfoV2_3[0][i].status}</b></div>\n                                                                                <div className=\"textGrey exLink0\" onClick={() => {\n                                                                                    window.open(this.props.poolSegmentInfoV2_3[0][i].projectLink, '_blank')\n                                                                                }}>Uses: {this.props.poolSegmentInfoV2_3[0][i].platform}&nbsp;\n                                                                                    <ImgNextGen\n                                                                                        srcWebp={exlink}\n                                                                                        style={{ marginBottom: \"3px\" }} height='12' alt=\"\"\n                                                                                    /></div>\n                                                                                <div className=\"textGrey exLink0\" onClick={() => {\n                                                                                    window.open(this.props.poolSegmentInfoV2_3[0][i].getLPLink, '_blank')\n                                                                                }}>Get {this.props.poolSegmentInfoV2_3[0][i].lpName}&nbsp;\n                                                                                    <ImgNextGen\n                                                                                        srcWebp={exlink}\n                                                                                        style={{ marginBottom: \"3px\" }} height='12' alt=\"\"\n                                                                                    /></div>\n                                                                                <div className=\"textGrey exLink0\" onClick={() => {\n                                                                                    window.open(this.props.poolSegmentInfoV2_3[0][i].farmContract, '_blank')\n                                                                                }}>View On Explorer&nbsp;\n                                                                                    <ImgNextGen\n                                                                                        srcWebp={exlink}\n                                                                                        style={{ marginBottom: \"3px\" }} height='12' alt=\"\"\n                                                                                    /></div>\n                                                                            </span>\n                                                                        </div>\n                                                                        <MediaQuery minWidth={701}>\n                                                                            <div>\n                                                                                <table className=\"float-right mr-auto\">\n                                                                                    <thead className=\"textBlackSmall\" style={{ color: 'black' }}>\n                                                                                        <tr>\n                                                                                            <th scope=\"col\" width=\"140\">Wallet</th>\n                                                                                            <th scope=\"col\" width=\"140\">Deposited</th>\n                                                                                            <th scope=\"col\">Growth</th>\n                                                                                            <th scope=\"col\">APR&nbsp;<Popup\n                                                                                                trigger={open => (<span><BsFillQuestionCircleFill style={{ marginBottom: \"2px\" }} size={10} /></span>)}\n                                                                                                on=\"hover\"\n                                                                                                offsetY={0}\n                                                                                                offsetX={5}\n                                                                                                position=\"right center\"\n                                                                                                contentStyle={{ width: '150px' }}\n                                                                                            ><div className=\"textInfo\">APR Breakdown: </div><br />\n                                                                                                <div className=\"textInfo\">Baklava   : {parseFloat(this.props.aprV2_3[0][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })} %</div><br />\n                                                                                                <div className=\"textInfo\">Pangolin : {parseFloat(this.props.poolSegmentInfoV2_3[0][i].total3rdPartyAPR).toLocaleString('en-US', { maximumFractionDigits: 0 })} %</div>\n                                                                                            </Popup></th>\n                                                                                            <th scope=\"col\">APY <Popup\n                                                                                                trigger={open => (<span><BsFillQuestionCircleFill style={{ marginBottom: \"2px\" }} size={10} /></span>)}\n                                                                                                on=\"hover\"\n                                                                                                offsetY={0}\n                                                                                                offsetX={5}\n                                                                                                position=\"right center\"\n                                                                                                contentStyle={{ width: '150px' }}\n                                                                                            ><div className=\"textInfo\"><small>APY are calculated based on the compound APR number excluded locked reward.</small></div><br />\n                                                                                                <div className=\"textInfo\"><small>The value shown is based on daily compounding frequency.</small></div>\n                                                                                            </Popup></th>\n                                                                                            <th scope=\"col\">TVL</th>\n                                                                                        </tr>\n                                                                                    </thead>\n                                                                                    <tbody className=\"textGrey\">\n                                                                                        <tr>\n                                                                                            <td className=\"\">{(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.lpBalanceAccountV2_3[0][i]), 'Ether').toLocaleString('en-US', { maximumFractionDigits: 18 })}</div> : <div className=\"center\">\n                                                                                                <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>}</td>\n                                                                                            <td className=\"\">{(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.userSegmentInfoV2_3[0][i], 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 18 })}</div> : <div className=\"center\">\n                                                                                                <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\n                                                                                            <td className=\"\">{this.props.aprloading ? <div>{parseFloat(this.props.returnRatioV2_3[0][i]).toLocaleString('en-US', { maximumFractionDigits: 5 })}</div> : <div className=\"center\">\n                                                                                                <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\n                                                                                            <td className=\"\">{this.props.aprloading ? <div>{(parseFloat(this.props.aprV2_3[0][i]) + parseFloat(this.props.poolSegmentInfoV2_3[0][i].total3rdPartyAPR)).toLocaleString('en-US', { maximumFractionDigits: 0 })}%</div> : <div className=\"center\">\n                                                                                                <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\n                                                                                            <td className=\"\">{this.props.aprloading ? <div>{parseFloat(this.props.apyDailyV2_3[0][i]) > 1000000 ? <div>&#x3e;100,000%</div> : <div>{parseFloat(this.props.apyDailyV2_3[0][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })}%</div>}</div> : <div className=\"center\">\n                                                                                                <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>}</td>\n                                                                                            <td className=\"\">$ {parseFloat(this.props.tvlV2_3[0][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })} </td>\n                                                                                        </tr>\n                                                                                    </tbody>\n                                                                                </table>\n                                                                            </div>\n                                                                        </MediaQuery>\n                                                                        <MediaQuery maxWidth={700}>\n                                                                            <MediaQuery minWidth={551}>\n                                                                                <div>\n                                                                                    <table className=\"float-right mr-auto\">\n                                                                                        <thead className=\"textBlackSmall\" style={{ color: 'black' }}>\n                                                                                            <tr>\n                                                                                                <th scope=\"col\" width=\"140\">Wallet</th>\n                                                                                                <th scope=\"col\" width=\"140\">Deposited</th>\n                                                                                                <th scope=\"col\">Growth</th>\n                                                                                            </tr>\n                                                                                        </thead>\n                                                                                        <tbody className=\"textGrey\">\n                                                                                            <tr>\n                                                                                                <td className=\"\">{(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.lpBalanceAccountV2_3[0][i]), 'Ether').toLocaleString('en-US', { maximumFractionDigits: 18 })}</div> : <div className=\"center\">\n                                                                                                    <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>}</td>\n                                                                                                <td className=\"\">{(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.userSegmentInfoV2_3[0][i], 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 18 })}</div> : <div className=\"center\">\n                                                                                                    <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\n                                                                                                <td className=\"\">{this.props.aprloading ? <div>{parseFloat(this.props.returnRatioV2_3[0][i]).toLocaleString('en-US', { maximumFractionDigits: 5 })}</div> : <div className=\"center\">\n                                                                                                    <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\n                                                                                            </tr>\n                                                                                        </tbody>\n                                                                                        <thead className=\"textBlackSmall\" style={{ color: 'black' }}>\n                                                                                            <tr>\n                                                                                                <th scope=\"col\">APR&nbsp;<Popup\n                                                                                                    trigger={open => (<span><BsFillQuestionCircleFill style={{ marginBottom: \"2px\" }} size={10} /></span>)}\n                                                                                                    on=\"hover\"\n                                                                                                    offsetY={0}\n                                                                                                    offsetX={5}\n                                                                                                    position=\"right center\"\n                                                                                                    contentStyle={{ width: '150px' }}\n                                                                                                ><div className=\"textInfo\">APR Breakdown: </div><br />\n                                                                                                    <div className=\"textInfo\">Baklava   : {parseFloat(this.props.aprV2_3[0][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })} %</div><br />\n                                                                                                    <div className=\"textInfo\">Pangolin : {parseFloat(this.props.poolSegmentInfoV2_3[0][i].total3rdPartyAPR).toLocaleString('en-US', { maximumFractionDigits: 0 })} %</div>\n                                                                                                </Popup></th>\n                                                                                                <th scope=\"col\">APY <Popup\n                                                                                                    trigger={open => (<span><BsFillQuestionCircleFill style={{ marginBottom: \"2px\" }} size={10} /></span>)}\n                                                                                                    on=\"hover\"\n                                                                                                    offsetY={0}\n                                                                                                    offsetX={5}\n                                                                                                    position=\"right center\"\n                                                                                                    contentStyle={{ width: '150px' }}\n                                                                                                ><div className=\"textInfo\"><small>APY are calculated based on the compound APR number excluded locked reward.</small></div><br />\n                                                                                                    <div className=\"textInfo\"><small>The value shown is based on daily compounding frequency.</small></div>\n                                                                                                </Popup></th>\n                                                                                                <th scope=\"col\">TVL</th>\n                                                                                            </tr>\n                                                                                        </thead>\n                                                                                        <tbody className=\"textGrey\">\n                                                                                            <tr>\n                                                                                                <td className=\"\">{this.props.aprloading ? <div>{(parseFloat(this.props.aprV2_3[0][i]) + parseFloat(this.props.poolSegmentInfoV2_3[0][i].total3rdPartyAPR)).toLocaleString('en-US', { maximumFractionDigits: 0 })}%</div> : <div className=\"center\">\n                                                                                                    <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\n                                                                                                <td className=\"\">{this.props.aprloading ? <div>{parseFloat(this.props.apyDailyV2_3[0][i]) > 1000000 ? <div>&#x3e;100,000%</div> : <div>{parseFloat(this.props.apyDailyV2_3[0][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })}%</div>}</div> : <div className=\"center\">\n                                                                                                    <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>}</td>\n                                                                                                <td className=\"\">$ {parseFloat(this.props.tvlV2_3[0][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })} </td>\n                                                                                            </tr>\n                                                                                        </tbody>\n                                                                                    </table>\n                                                                                </div>\n                                                                            </MediaQuery>\n                                                                            <MediaQuery maxWidth={550}>\n                                                                                <div>\n                                                                                    <table className=\"float-right mr-auto\">\n                                                                                        <thead className=\"textBlackSmall\" style={{ color: 'black' }}>\n                                                                                            <tr>\n                                                                                                <th scope=\"col\" width=\"140\">Wallet</th>\n                                                                                                <th scope=\"col\" width=\"140\">Deposited</th>\n                                                                                            </tr>\n                                                                                        </thead>\n                                                                                        <tbody className=\"textGrey\">\n                                                                                            <tr>\n                                                                                                <td className=\"\">{(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.lpBalanceAccountV2_3[0][i]), 'Ether').toLocaleString('en-US', { maximumFractionDigits: 18 })}</div> : <div className=\"center\">\n                                                                                                    <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>}</td>\n                                                                                                <td className=\"\">{(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.userSegmentInfoV2_3[0][i], 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 18 })}</div> : <div className=\"center\">\n                                                                                                    <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\n                                                                                            </tr>\n                                                                                        </tbody>\n                                                                                        <thead className=\"textBlackSmall\" style={{ color: 'black' }}>\n                                                                                            <tr>\n                                                                                                <th scope=\"col\">Growth</th>\n                                                                                                <th scope=\"col\">APR&nbsp;<Popup\n                                                                                                    trigger={open => (<span><BsFillQuestionCircleFill style={{ marginBottom: \"2px\" }} size={10} /></span>)}\n                                                                                                    on=\"hover\"\n                                                                                                    offsetY={0}\n                                                                                                    offsetX={5}\n                                                                                                    position=\"right center\"\n                                                                                                    contentStyle={{ width: '150px' }}\n                                                                                                ><div className=\"textInfo\">APR Breakdown: </div><br />\n                                                                                                    <div className=\"textInfo\">Baklava   : {parseFloat(this.props.aprV2_3[0][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })} %</div><br />\n                                                                                                    <div className=\"textInfo\">Pangolin : {parseFloat(this.props.poolSegmentInfoV2_3[0][i].total3rdPartyAPR).toLocaleString('en-US', { maximumFractionDigits: 0 })} %</div>\n                                                                                                </Popup></th>\n                                                                                            </tr>\n                                                                                        </thead>\n                                                                                        <tbody className=\"textGrey\">\n                                                                                            <tr>\n                                                                                                <td className=\"\">{this.props.aprloading ? <div>{parseFloat(this.props.returnRatioV2_3[0][i]).toLocaleString('en-US', { maximumFractionDigits: 5 })}</div> : <div className=\"center\">\n                                                                                                    <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\n                                                                                                <td className=\"\">{this.props.aprloading ? <div>{(parseFloat(this.props.aprV2_3[0][i]) + parseFloat(this.props.poolSegmentInfoV2_3[0][i].total3rdPartyAPR)).toLocaleString('en-US', { maximumFractionDigits: 0 })}%</div> : <div className=\"center\">\n                                                                                                    <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\n                                                                                            </tr>\n                                                                                        </tbody>\n                                                                                        <thead className=\"textBlackSmall\" style={{ color: 'black' }}>\n                                                                                            <tr>\n                                                                                                <th scope=\"col\">APY <Popup\n                                                                                                    trigger={open => (<span><BsFillQuestionCircleFill style={{ marginBottom: \"2px\" }} size={10} /></span>)}\n                                                                                                    on=\"hover\"\n                                                                                                    offsetY={0}\n                                                                                                    offsetX={5}\n                                                                                                    position=\"right center\"\n                                                                                                    contentStyle={{ width: '150px' }}\n                                                                                                ><div className=\"textInfo\"><small>APY are calculated based on the compound APR number excluded locked reward.</small></div><br />\n                                                                                                    <div className=\"textInfo\"><small>The value shown is based on daily compounding frequency.</small></div>\n                                                                                                </Popup></th>\n                                                                                                <th scope=\"col\">TVL</th>\n                                                                                            </tr>\n                                                                                        </thead>\n                                                                                        <tbody className=\"textGrey\">\n                                                                                            <tr>\n                                                                                                <td className=\"\">{this.props.aprloading ? <div>{parseFloat(this.props.apyDailyV2_3[0][i]) > 1000000 ? <div>&#x3e;100,000%</div> : <div>{parseFloat(this.props.apyDailyV2_3[0][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })}%</div>}</div> : <div className=\"center\">\n                                                                                                    <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>}</td>\n                                                                                                <td className=\"\">$ {parseFloat(this.props.tvlV2_3[0][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })} </td>\n                                                                                            </tr>\n                                                                                        </tbody>\n                                                                                    </table>\n                                                                                </div>\n                                                                            </MediaQuery>\n                                                                        </MediaQuery>\n                                                                    </div>\n                                                                </MediaQuery>\n                                                            </div>\n\n\n                                                            {this.state.farmV2_3Open[i] ?\n                                                                <div>\n                                                                    {this.props.wallet || this.props.walletConnect ?\n                                                                        <div className=\"borderTop \">\n                                                                            <div className=\"mt-3\">\n                                                                                <MediaQuery minWidth={951}>\n                                                                                    <div className=\"float-left\">\n                                                                                        <div className=\"card cardbody mr-3\" style={{ marginBottom: '6px', width: '300px' }}>\n                                                                                            <div className=\"card-body\" style={{ padding: '0.5rem' }}>\n                                                                                                <span className=\"float-left\" style={{ color: 'black' }}><small>BAVA earned</small></span><br />\n                                                                                                <span className=\"float-left\" style={{ color: 'black', marginTop: '8px' }}><small>{this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.pendingSegmentRewardV2_3[0][i], 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 0 })}</div> :\n                                                                                                    <div className=\"ml-3 lds-facebook\"><div></div><div></div><div></div></div>}</small></span>\n                                                                                                <span className=\"float-right\">\n                                                                                                    <Buttons\n                                                                                                        variant=\"success\"\n                                                                                                        size=\"sm\"\n                                                                                                        style={{ minWidth: '80px' }}\n                                                                                                        onClick={(event) => {\n                                                                                                            event.preventDefault()\n                                                                                                            console.log(i)\n                                                                                                            this.props.harvest(i, 0, 4)\n                                                                                                        }}>\n                                                                                                        Harvest\n                                                                                                    </Buttons></span>\n                                                                                            </div>\n                                                                                        </div>\n                                                                                        <div className=\"card cardbody float-left mr-3\" style={{ width: '300px' }}>\n                                                                                            <div className=\"card-body\" style={{ padding: '0.5rem' }}>\n                                                                                                <span className=\"float-left\" style={{ color: 'black' }}><small>Reinvest </small><Popup\n                                                                                                    trigger={open => (\n                                                                                                        <span><BsFillQuestionCircleFill size={13} /></span>\n                                                                                                    )}\n                                                                                                    on=\"hover\"\n                                                                                                    offsetY={0}\n                                                                                                    offsetX={5}\n                                                                                                    position=\"right center\"\n                                                                                                ><span className=\"textInfo\"><small>This farm has a 2% reinvest reward paid in WAVAX. Pressing the button is optional.</small></span>\n                                                                                                </Popup></span><br />\n                                                                                                <span className=\"float-left\" style={{ color: 'black', marginTop: '8px' }}><small>{this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.reinvestAmount[0][i], 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 5 })} WAVAX</div> :\n                                                                                                    <div className=\"ml-3 lds-facebook\"><div></div><div></div><div></div></div>}</small></span>\n                                                                                                <span className=\"float-right\">\n                                                                                                    {/* {\n                                                                                                        this.props.reinvestAmount[0][i]\n                                                                                                    } */}\n                                                                                                    <Buttons\n                                                                                                        variant=\"info\"\n                                                                                                        size=\"sm\"\n                                                                                                        style={{ minWidth: '80px' }}\n                                                                                                        onClick={(event) => {\n                                                                                                            if (bigInt(this.props.reinvestAmount[0][i]).value > bigInt(1000000000000000000).value) {\n                                                                                                                event.preventDefault()\n                                                                                                                console.log(i)\n                                                                                                                this.props.reinvest(i, 0)\n                                                                                                            } else {\n                                                                                                                alert(\"Not enough token to reinvest! Min reinvest amount is 1 Avax\")\n                                                                                                            }\n                                                                                                        }}>\n                                                                                                        Reinvest\n                                                                                                    </Buttons></span>\n                                                                                            </div>\n                                                                                        </div>\n                                                                                    </div>\n                                                                                </MediaQuery>\n                                                                                <MediaQuery maxWidth={950}>\n                                                                                    <div>\n                                                                                        <div className=\"card cardbody\" style={{ marginBottom: '6px' }}>\n                                                                                            <div className=\"card-body\" style={{ padding: '0.5rem' }}>\n                                                                                                <span className=\"float-left\" style={{ color: 'black' }}><small>BAVA earned</small></span><br />\n                                                                                                <span className=\"float-left\" style={{ color: 'black', marginTop: '8px' }}><small>{this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.pendingSegmentRewardV2_3[0][i], 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 0 })}</div> :\n                                                                                                    <div className=\"ml-3 lds-facebook\"><div></div><div></div><div></div></div>}</small></span>\n                                                                                                <span className=\"float-right\">\n                                                                                                    <Buttons\n                                                                                                        variant=\"success\"\n                                                                                                        size=\"sm\"\n                                                                                                        style={{ minWidth: '80px' }}\n                                                                                                        onClick={(event) => {\n                                                                                                            event.preventDefault()\n                                                                                                            console.log(i)\n                                                                                                            this.props.harvest(i, 0, 4)\n                                                                                                        }}>\n                                                                                                        Harvest\n                                                                                                    </Buttons></span>\n                                                                                            </div>\n                                                                                        </div>\n                                                                                        <div className=\"card cardbody\" style={{ marginBottom: '6px' }}>\n                                                                                            <div className=\"card-body\" style={{ padding: '0.5rem' }}>\n                                                                                                <span className=\"float-left\" style={{ color: 'black' }}><small>Reinvest </small><Popup\n                                                                                                    trigger={open => (\n                                                                                                        <span><BsFillQuestionCircleFill size={13} /></span>\n                                                                                                    )}\n                                                                                                    on=\"hover\"\n                                                                                                    offsetY={0}\n                                                                                                    offsetX={5}\n                                                                                                    position=\"right center\"\n                                                                                                ><span className=\"textInfo\"><small>This farm has a 2% reinvest reward paid in WAVAX. Pressing the button is optional.</small></span>\n                                                                                                </Popup></span><br />\n                                                                                                <span className=\"float-left\" style={{ color: 'black', marginTop: '8px' }}><small>{this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.reinvestAmount[0][i], 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 5 })} WAVAX</div> :\n                                                                                                    <div className=\"ml-3 lds-facebook\"><div></div><div></div><div></div></div>}</small></span>\n                                                                                                <span className=\"float-right\">\n                                                                                                    <Buttons\n                                                                                                        variant=\"info\"\n                                                                                                        size=\"sm\"\n                                                                                                        style={{ minWidth: '80px' }}\n                                                                                                        onClick={(event) => {\n                                                                                                            if (bigInt(this.props.reinvestAmount[0][i]).value > bigInt(1000000000000000000).value) {\n                                                                                                                event.preventDefault()\n                                                                                                                console.log(i)\n                                                                                                                this.props.reinvest(i, 0)\n                                                                                                            } else {\n                                                                                                                alert(\"Not enough token to reinvest! Min reinvest amount is 1 Avax\")\n                                                                                                            }\n                                                                                                        }}>\n                                                                                                        Reinvest\n                                                                                                    </Buttons></span>\n                                                                                            </div>\n                                                                                        </div>\n                                                                                    </div>\n                                                                                </MediaQuery>\n\n                                                                                <div className=\"card cardbody\" style={{ minWidth: '300px' }}>\n                                                                                    <div className=\"card-body\" style={{ padding: '0.5rem' }}>\n                                                                                        <div className='ml-2 mt-2 mb-2'>\n                                                                                            {this.state.depositAction[i] == true ?\n                                                                                                <div style={{ height: '30px' }}>\n                                                                                                    <div className='float-left' style={{ paddingTop: '0px' }}>\n                                                                                                        <ButtonGroup>\n                                                                                                            <div>\n                                                                                                                <Buttons className=\"textTransparentButton center\" style={{ textDecoration: 'none', marginRight: '5px' }} variant=\"link\" size=\"sm\" onClick={async () => {\n                                                                                                                    await this.setAction(i, 0)\n                                                                                                                }}><b>Deposit</b></Buttons></div>\n                                                                                                            <div>\n                                                                                                                <Buttons className=\"textBlackButton center mr-1\" style={{ textDecoration: 'none' }} variant=\"link\" size=\"sm\" onClick={async () => {\n                                                                                                                    await this.setAction(i, 1)\n                                                                                                                }}>Withdraw</Buttons></div>\n                                                                                                        </ButtonGroup>\n                                                                                                    </div>\n                                                                                                </div>\n                                                                                                : <div style={{ height: '30px' }}>\n                                                                                                    <div className='float-left' style={{ paddingTop: '0px' }}>\n                                                                                                        <ButtonGroup>\n                                                                                                            <div>\n                                                                                                                <Buttons className=\"textBlackButton center mr-1\" style={{ textDecoration: 'none' }} variant=\"link\" size=\"sm\" onClick={async () => {\n                                                                                                                    await this.setAction(i, 0)\n                                                                                                                }}><b>Deposit</b></Buttons></div>\n                                                                                                            <div>\n                                                                                                                <Buttons className=\"textTransparentButton center mr-1\" style={{ textDecoration: 'none' }} variant=\"link\" size=\"sm\" onClick={async () => {\n                                                                                                                    await this.setAction(i, 1)\n                                                                                                                }}>Withdraw</Buttons></div>\n                                                                                                        </ButtonGroup>\n                                                                                                    </div>\n                                                                                                </div>\n                                                                                            }\n                                                                                        </div>\n                                                                                        <div className='borderBottom'></div>\n                                                                                        <div className='ml-1 mr-1'>\n                                                                                            {this.state.depositAction[i] == true ?\n                                                                                                <div><Deposit\n                                                                                                    wallet={this.props.wallet}\n                                                                                                    walletConnect={this.props.walletConnect}\n                                                                                                    accountLoading={this.props.accountLoading}\n                                                                                                    lpBalanceAccount={this.props.lpBalanceAccountV2_3}\n                                                                                                    poolSegmentInfo={this.props.poolSegmentInfoV2_3}\n                                                                                                    userSegmentInfo={this.props.userSegmentInfoV2_3}\n                                                                                                    lpSegmentAllowanceV2_3={this.props.lpSegmentAllowanceV2_3[0][i]}\n                                                                                                    i={i}\n                                                                                                    n='0'\n                                                                                                    v='4'\n                                                                                                    approve={this.props.approve}\n                                                                                                    deposit={this.props.deposit}\n                                                                                                    withdraw={this.props.withdraw}\n                                                                                                /></div>\n                                                                                                :\n                                                                                                <div><Withdraw\n                                                                                                    wallet={this.props.wallet}\n                                                                                                    walletConnect={this.props.walletConnect}\n                                                                                                    accountLoading={this.props.accountLoading}\n                                                                                                    lpBalanceAccount={this.props.lpBalanceAccountV2_3}\n                                                                                                    poolSegmentInfo={this.props.poolSegmentInfoV2_3}\n                                                                                                    userSegmentInfo={this.props.userSegmentInfoV2_3}\n                                                                                                    lpSegmentAllowanceV2_3={this.props.lpSegmentAllowanceV2_3[0][i]}\n                                                                                                    i={i}\n                                                                                                    n='0'\n                                                                                                    v='4'\n                                                                                                    approve={this.props.approve}\n                                                                                                    deposit={this.props.deposit}\n                                                                                                    withdraw={this.props.withdraw}\n                                                                                                /></div>\n                                                                                            }\n                                                                                        </div>\n                                                                                    </div>\n                                                                                </div>\n                                                                            </div>\n                                                                        </div> :\n                                                                        <div className=\"center borderTop\" >\n                                                                            <span className=\"mt-3\" style={{ color: 'black' }}><small>Wallet Connection to Avalanche required</small></span>\n                                                                        </div>}\n                                                                </div> :\n                                                                <div></div>\n                                                            }\n                                                        </div>\n                                                    </div>\n                                                }\n                                            </div>\n                                        </div>\n                                    )\n                                })}\n                            </div>\n                            :\n                            <div className=\"center\">\n                                <div style={{ marginBottom: '350px' }}>\n                                    <div className=\"bounceball\"></div> &nbsp;\n                                    <div className=\"textLoadingSmall\">NETWORK IS Loading...</div>\n                                </div>\n                            </div>\n                        }\n                    </div>\n                </div><br /><br /><br />\n                <Footer />\n            </div >\n        );\n    }\n}\n\nexport default Menu;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { BsFillQuestionCircleFill } from 'react-icons/bs';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Buttons from 'react-bootstrap/Button'\nimport MediaQuery from 'react-responsive';\nimport ImgNextGen from './ImgNextGen';\nimport Popup from 'reactjs-popup';\nimport Deposit from './Deposit'\nimport Withdraw from './Withdraw'\nimport Footer from './Footer'\nimport 'reactjs-popup/dist/index.css';\nimport './App.css';\n\nimport exlink from './images/link.webp';\nimport coin98 from './images/coin98.webp';\nimport fox from './images/metamask-fox.svg';\nimport walletconnectlogo from './images/walletconnect-logo.svg';\n\nimport bava from './images/logo.webp';\nimport savax from './images/sAvax.webp';\nimport qi from './images/qi.webp';\nimport ust from './images/ust.webp';\nimport png from './images/pangolin.webp';\nimport avax from './images/avax.svg';\nimport usdc from './images/usdc.svg';\nimport usdt from './images/usdt.svg';\nimport weth from './images/weth.svg';\n\nclass Kyber extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            farmV2_3_kyberOpen: [],\n            depositAction: [],\n            withdrawAction: []\n        }\n        this.clickfarmOpen = this.clickfarmOpen.bind(this)\n        this.setAction = this.setAction.bind(this)\n    }\n\n    clickfarmOpen(i) {\n        let ntg = 0\n        this.state.farmV2_3_kyberOpen[i] = !(this.state.farmV2_3_kyberOpen[i])\n        this.state.depositAction[i] = true\n        this.state.withdrawAction[i] = false\n        this.setState({ ntg })  //do ntg, just to push react setstate\n    }\n\n    setAction(i, page) {\n        let ntg = 0\n        if (page == 0) {\n            this.state.depositAction[i] = true\n            this.state.withdrawAction[i] = false\n        } else {\n            this.state.depositAction[i] = false\n            this.state.withdrawAction[i] = true\n        }\n        this.setState({ ntg })\n    }\n\n    render() {\n        const contentStyle = { background: '#fffae6', border: \"1px solid #596169\", width: \"30%\", borderRadius: \"15px\", minWidth: \"320px\" };\n        return (\n            <div id=\"content\" className=\"\" style={{ margin: \"0\", color: '#ff9a04' }}>\n                <MediaQuery minWidth={601}>\n                    <div className=\"ml-auto mr-auto card mb-3 cardbody\" style={{ color: 'black' }}>\n                        {this.props.wallet || this.props.walletConnect ?\n                            <div className=\"card-body\" style={{ paddingBottom: '5px' }}>\n                                <div className='mb-5'>\n                                    <span className=\"float-left\" style={{ color: 'black', fontSize: '16px' }}>\n                                        Your BAVA Balance<br /><b>{parseFloat(window.web3Ava.utils.fromWei(this.props.bavaTokenBalance, 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 0 })} BAVA / $ {(window.web3Ava.utils.fromWei(this.props.bavaTokenBalance, 'Ether') * this.props.BAVAPrice).toLocaleString('en-US', { maximumFractionDigits: 0 })}</b>\n                                    </span>\n                                    <span className=\"float-right\" style={{ color: 'black', fontSize: '16px' }}>\n                                        Your Locked BAVA<br /><b>{parseFloat(window.web3Ava.utils.fromWei(this.props.lockedBavaTokenBalance, 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 0 })} BAVA / $ {(window.web3Ava.utils.fromWei(this.props.lockedBavaTokenBalance, 'Ether') * this.props.BAVAPrice).toLocaleString('en-US', { maximumFractionDigits: 0 })}</b>\n                                    </span>\n                                </div><br /><br />\n                                <div>\n                                    <span className=\"float-left\" style={{ color: 'black', fontSize: '16px' }}>Total pending harvest&nbsp;&nbsp;\n                                        <Popup\n                                            trigger={open => (\n                                                <span><BsFillQuestionCircleFill size={13} /></span>\n                                            )}\n                                            on=\"hover\"\n                                            offsetY={0}\n                                            offsetX={5}\n                                            position=\"right center\"\n                                        ><span className=\"textInfo\"><small>Total BAVA tokens earned acrossed all farm </small></span>\n                                        </Popup>\n                                    </span><br />\n                                    <span className=\"float-left \" style={{ color: 'black', fontSize: '16px' }}><b>\n                                        {parseFloat(window.web3Ava.utils.fromWei(this.props.totalpendingReward, 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 0 })} BAVA / $ {(window.web3Ava.utils.fromWei(this.props.totalpendingReward, 'Ether') * this.props.BAVAPrice).toLocaleString('en-US', { maximumFractionDigits: 0 })}</b>\n                                    </span>\n                                    <span className=\"float-right \">\n                                        <span><small>All pools compound at an optimal rate</small></span>\n                                    </span>\n                                </div>\n                            </div>\n                            :\n                            <div className=\"card-body\" style={{ paddingBottom: '5px' }}>\n                                <span>\n                                    <span className=\"float-left\" style={{ color: 'silver' }}>\n                                        Your BAVA Balance<br />\n                                        <div style={{ color: 'silver' }}><b>0 BAVA</b></div>\n                                    </span>\n                                    <span className=\"float-right\" style={{ color: 'silver' }}>\n                                        Your Locked BAVA<br />\n                                        <div style={{ color: 'silver' }}><b>0 BAVA</b></div>\n                                    </span>\n                                    <br /><br />\n                                </span>\n                                <span className=\"center mb-1\">\n                                    {this.props.farmloading ?\n                                        <div>\n                                            <Popup trigger={open => (<Buttons className=\"textDarkMedium cell2\" variant=\"outline\" size=\"lg\" >Connect to display</Buttons>)} modal {...{ contentStyle }}>\n                                                {close => (\n                                                    <div>\n                                                        <Buttons className=\"close cell2\" style={{ background: \"#fffae6\", borderRadius: \"12px\", padding: \"2px 5px\", fontSize: \"18px\" }} onClick={close}>\n                                                            &times;\n                                                        </Buttons>\n                                                        <div className=\"textWhiteMedium mb-2\" style={{ borderBottom: \"1px Solid Gray\", padding: \"10px\" }}> Connect a Wallet </div>\n                                                        <div className=\"center mt-4 mb-2\">\n                                                            <Buttons type=\"button\" variant=\"secondary\" style={{ height: \"50px\", width: \"100%\", minWidth: \"150px\", maxWidth: \"300px\", padding: \"6px 25px\" }} onClick={async () => {\n                                                                await this.props.connectMetamask()\n                                                            }}>\n                                                                <img src={fox} width=\"23\" height=\"23\" className=\"float-right\" alt=\"\" />\n                                                                <span className=\"float-left\">Metamask</span></Buttons>\n                                                        </div>\n                                                        <div className=\"center mt-2 mb-2\">\n                                                            <Buttons type=\"button\" variant=\"secondary\" style={{ height: \"50px\", width: \"100%\", minWidth: \"150px\", maxWidth: \"300px\", padding: \"6px 25px\" }} onClick={async () => {\n                                                                await this.props.connectCoin98()\n                                                            }}>\n                                                                <ImgNextGen\n                                                                    srcWebp={coin98}\n                                                                    width=\"23\" height=\"23\" className=\"float-right\" alt=\"\"\n                                                                />\n                                                                <span className=\"float-left\">Coin98</span></Buttons>\n                                                        </div>\n                                                        <div className=\"center mt-2 mb-4\">\n                                                            <Buttons type=\"button\" variant=\"secondary\" style={{ height: \"50px\", width: \"100%\", minWidth: \"150px\", maxWidth: \"300px\", padding: \"6px 25px\" }} onClick={async () => {\n                                                                await this.props.mobileWalletConnect()\n                                                            }}><img src={walletconnectlogo} width=\"26\" height=\"23\" className=\"float-right\" alt=\"\" /><span className=\"float-left\">WalletConnect</span></Buttons>\n                                                        </div>\n                                                    </div>\n                                                )}\n                                            </Popup>\n                                        </div>\n                                        : <Buttons className=\"textDarkMedium1 cell2\" variant=\"outline\" size=\"lg\" >Connect to display</Buttons>\n                                    }\n                                </span>\n                                <span>\n                                    <span className=\"float-left\" style={{ color: 'silver' }}>Total pending harvest&nbsp;\n                                        <Popup\n                                            trigger={open => (\n                                                <span><BsFillQuestionCircleFill size={13} /></span>\n                                            )}\n                                            on=\"hover\"\n                                            offsetY={0}\n                                            offsetX={5}\n                                            position=\"right center\"\n                                        ><span className=\"textInfo\"><small>Total BAVA tokens earned acrossed all farm </small></span>\n                                        </Popup>\n                                    </span><br />\n                                    <span className=\"float-left\">\n                                        <div style={{ color: 'silver' }}><b>0 BAVA</b></div>\n                                    </span>\n                                    <span className=\"float-right\" style={{ color: 'silver' }}>\n                                        <small><span>All pools compound at an optimal rate</span></small>\n                                    </span>\n                                </span>\n                            </div>\n                        }\n                    </div>\n                </MediaQuery>\n\n                <MediaQuery maxWidth={600}>\n                    <div className=\"ml-auto mr-auto card mb-3 cardbody\" style={{ color: 'black' }}>\n                        {this.props.wallet || this.props.walletConnect ?\n                            <div className=\"card-body\" style={{ paddingBottom: '5px' }}>\n                                <div>\n                                    <div className=\"left mb-3\" style={{ color: 'black', fontSize: '16px' }}>\n                                        Your BAVA Balance<br /><b>{parseFloat(window.web3Ava.utils.fromWei(this.props.bavaTokenBalance, 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 0 })} BAVA / $ {(window.web3Ava.utils.fromWei(this.props.bavaTokenBalance, 'Ether') * this.props.BAVAPrice).toLocaleString('en-US', { maximumFractionDigits: 0 })}</b>\n                                    </div>\n                                    <div className=\"left mb-3\" style={{ color: 'black', fontSize: '16px' }}>\n                                        Your Locked BAVA<br /><b>{parseFloat(window.web3Ava.utils.fromWei(this.props.lockedBavaTokenBalance, 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 0 })} BAVA / $ {(window.web3Ava.utils.fromWei(this.props.lockedBavaTokenBalance, 'Ether') * this.props.BAVAPrice).toLocaleString('en-US', { maximumFractionDigits: 0 })}</b>\n                                    </div>\n                                    <div className=\"left mb-2\" style={{ color: 'black', fontSize: '16px' }}>Total pending harvest&nbsp;\n                                        <Popup\n                                            trigger={open => (\n                                                <span><BsFillQuestionCircleFill size={13} /></span>\n                                            )}\n                                            on=\"hover\"\n                                            offsetY={0}\n                                            offsetX={5}\n                                            position=\"right center\"\n                                        ><span className=\"textInfo\"><small>Total BAVA tokens earned acrossed all farm </small></span>\n                                        </Popup><br /><b>{parseFloat(window.web3Ava.utils.fromWei(this.props.totalpendingReward, 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 0 })} BAVA / $ {(window.web3Ava.utils.fromWei(this.props.totalpendingReward, 'Ether') * this.props.BAVAPrice).toLocaleString('en-US', { maximumFractionDigits: 0 })}</b>\n                                    </div>\n                                    <div className=\"left \">\n                                        <span><small>All pools compound at an optimal rate</small></span>\n                                    </div>\n                                </div>\n                            </div>\n                            : <div className=\"card-body\" style={{ paddingBottom: '5px' }}>\n                                <div>\n                                    <div className=\"left mb-3\" style={{ color: 'silver' }}>\n                                        Your BAVA Balance<br />\n                                        <div style={{ color: 'silver' }}><b>0 BAVA</b></div>\n                                        {/* <div className=\"float-right\">\n                                            {this.props.farmloading ?\n                                                <div>\n                                                    <Popup trigger={open => (<Buttons className=\"textDarkMedium cell2\" style={{ maxWidth: '110px', height: '90px', marginRight: '15px' }} variant=\"outline\" size=\"lg\" >Connect to display</Buttons>)} modal {...{ contentStyle }}>\n                                                        {close => (\n                                                            <div>\n                                                                <Buttons className=\"close cell2\" style={{ background: \"#fffae6\", borderRadius: \"12px\", padding: \"2px 5px\", fontSize: \"18px\" }} onClick={close}>\n                                                                    &times;\n                                                                </Buttons>\n                                                                <div className=\"textWhiteMedium mb-2\" style={{ borderBottom: \"1px Solid Gray\", padding: \"10px\" }}> Connect a Wallet </div>\n                                                                <div className=\"center mt-4 mb-2\">\n                                                                    <Buttons type=\"button\" variant=\"secondary\" style={{ height: \"50px\", width: \"100%\", minWidth: \"150px\", maxWidth: \"300px\", padding: \"6px 25px\" }} onClick={async () => {\n                                                                        await this.props.connectMetamask()\n                                                                    }}>\n                                                                        <img src={fox} width=\"23\" height=\"23\" className=\"float-right\" alt=\"\" />\n                                                                        <span className=\"float-left\">Metamask</span></Buttons>\n                                                                </div>\n                                                                <div className=\"center mt-2 mb-2\">\n                                                                    <Buttons type=\"button\" variant=\"secondary\" style={{ height: \"50px\", width: \"100%\", minWidth: \"150px\", maxWidth: \"300px\", padding: \"6px 25px\" }} onClick={async () => {\n                                                                        await this.props.connectCoin98()\n                                                                    }}>\n                                                                        <ImgNextGen\n                                                                            srcWebp={coin98}\n                                                                            width=\"23\" height=\"23\" className=\"float-right\" alt=\"\"\n                                                                        />\n                                                                        <span className=\"float-left\">Coin98</span></Buttons>\n                                                                </div>\n                                                                <div className=\"center mt-2 mb-4\">\n                                                                    <Buttons type=\"button\" variant=\"secondary\" style={{ height: \"50px\", width: \"100%\", minWidth: \"150px\", maxWidth: \"300px\", padding: \"6px 25px\" }} onClick={async () => {\n                                                                        await this.props.mobileWalletConnect()\n                                                                    }}><img src={walletconnectlogo} width=\"26\" height=\"23\" className=\"float-right\" alt=\"\" /><span className=\"float-left\">WalletConnect</span></Buttons>\n                                                                </div>\n                                                            </div>\n                                                        )}\n                                                    </Popup>\n                                                </div>\n                                                : <Buttons className=\"textDarkMedium1 cell2\" style={{ maxWidth: '110px', height: '90px', marginRight: '15px' }} variant=\"outline\" size=\"lg\" >Connect to display</Buttons>\n                                            }\n                                        </div> */}\n                                    </div>\n                                    <div className=\"left mb-3\" style={{ color: 'silver' }}>\n                                        Your Locked BAVA<br />\n                                        <div style={{ color: 'silver' }}><b>0 BAVA</b></div>\n                                    </div>\n                                    <div className=\"left mb-2\" style={{ color: 'silver' }}>Total pending harvest&nbsp;&nbsp;\n                                        <Popup\n                                            trigger={open => (\n                                                <span><BsFillQuestionCircleFill size={13} /></span>\n                                            )}\n                                            on=\"hover\"\n                                            offsetY={0}\n                                            offsetX={5}\n                                            position=\"right center\"\n                                        ><span className=\"textInfo\"><small>Total BAVA tokens earned acrossed all farm </small></span>\n                                        </Popup><br /><div style={{ color: 'silver' }}><b>0 BAVA</b></div>\n                                    </div>\n                                    <span className=\"left \" style={{ color: 'silver' }}>\n                                        <small><span>All pools compound at an optimal rate</span></small>\n                                    </span>\n                                </div>\n                            </div>\n                        }\n                    </div>\n                </MediaQuery>\n\n                <div className=\"center\" style={{ color: 'grey' }}><small>&nbsp;! Attention:&nbsp;Be sure to read <a href=\"https://baklavaspace.gitbook.io/\" target=\"_blank\">baklavaspace.gitbook</a> before using the pools so you are familiar with protocol risks and fees!</small></div>\n                <div className=\"ml-auto mr-auto mt-3\">\n                    <div className=\"mb-4\">\n                        <div className=\"textMiddleBold1 float-right\" style={{ marginRight: '5px' }}><big>TVL $ {parseFloat(this.props.totalTVL).toLocaleString('en-US', { maximumFractionDigits: 0 })}</big></div>\n                        <div className=\"textMiddleBold1 left\" style={{ marginLeft: '2px', marginBottom: '5px' }}><big>Select Platform</big></div>\n                        <div className=\"left\">\n                            <ButtonGroup>\n                                <Buttons style={{ color: \"#ff9a04\" }} variant=\"link\" size=\"sm\" as={Link} to=\"/menu/v2\">PANGOLIN</Buttons>\n                                <Buttons style={{ color: \"#ff9a04\", border: \"1px solid #ff9a04\" }} variant=\"link\" size=\"sm\" as={Link} to=\"/menu/v2/kyber\">KYBERSWAP</Buttons>\n                                <Buttons style={{ color: \"#ff9a04\" }} variant=\"link\" size=\"sm\" as={Link} to=\"/menu/v2/traderjoe\">TRADER JOE</Buttons>\n                            </ButtonGroup>\n                        </div>\n                    </div>\n\n\n                    <div>\n                        {this.props.farmloading ?\n                            <div className=\"\" style={{}}>\n                                {this.props.poolSegmentInfoV2_3[2].map((poolSegmentInfoV2_3, key) => {\n                                    let i = this.props.poolSegmentInfoV2_3[2].indexOf(poolSegmentInfoV2_3)\n                                    return (\n                                        <div key={key}>\n                                            <div>\n                                                <div className=\"card mb-3 cardbody\">\n                                                    <div className=\"card-body\" style={{ padding: '1rem' }}>\n                                                        <div className=\"card cardbody\" style={{ border: '0px' }}>\n                                                            <MediaQuery minWidth={1001}>\n                                                                <div className='card-body rowC' style={{ padding: '0rem', cursor: 'pointer' }} onClick={() => {\n                                                                    this.clickfarmOpen(i)\n                                                                }}>\n                                                                    <div className=\"float-left rowC\" style={{ minWidth: '220px' }}>\n                                                                        <span className=\"mr-3 mt-2\">\n                                                                            <div className=\"textMiddle\" style={{ width: '48px' }}>\n                                                                                {this.props.poolSegmentInfoV2_3[2][i].icon.map((icon, key) => {\n                                                                                    return (<div key={key}>\n                                                                                        {icon.image == \"bava\" && <img className={icon.imagePosition} src={bava} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                        {icon.image == \"avax\" && <img className={icon.imagePosition} src={avax} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                        {icon.image == \"usdc\" && <img className={icon.imagePosition} src={usdc} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                        {icon.image == \"usdt\" && <img className={icon.imagePosition} src={usdt} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                        {icon.image == \"ust\" && <img className={icon.imagePosition} src={ust} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                        {icon.image == \"qi\" && <img className={icon.imagePosition} src={qi} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                        {icon.image == \"savax\" && <img className={icon.imagePosition} src={savax} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                        {icon.image == \"png\" && <img className={icon.imagePosition} src={png} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                        {icon.image == \"weth\" && <img className={icon.imagePosition} src={weth} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                    </div>)\n                                                                                })}\n                                                                            </div>\n                                                                        </span>\n                                                                        <span>\n                                                                            <div className=\"textMiddle\"><b>{this.props.poolSegmentInfoV2_3[2][i].lpName}{this.props.poolSegmentInfoV2_3[2][i].status}</b></div>\n                                                                            <div className=\"textGrey exLink0\" onClick={() => {\n                                                                                window.open(this.props.poolSegmentInfoV2_3[2][i].projectLink, '_blank')\n                                                                            }}>Uses: {this.props.poolSegmentInfoV2_3[2][i].platform}&nbsp;\n                                                                                <ImgNextGen\n                                                                                    srcWebp={exlink}\n                                                                                    style={{ marginBottom: \"3px\" }} height='12' alt=\"\"\n                                                                                /></div>\n                                                                            <div className=\"textGrey exLink0\" onClick={() => {\n                                                                                window.open(this.props.poolSegmentInfoV2_3[2][i].getLPLink, '_blank')\n                                                                            }}>Get {this.props.poolSegmentInfoV2_3[2][i].lpName}&nbsp;\n                                                                                <ImgNextGen\n                                                                                    srcWebp={exlink}\n                                                                                    style={{ marginBottom: \"3px\" }} height='12' alt=\"\"\n                                                                                /></div>\n                                                                            <div className=\"textGrey exLink0\" onClick={() => {\n                                                                                window.open(this.props.poolSegmentInfoV2_3[2][i].farmContract, '_blank')\n                                                                            }}>View On Explorer&nbsp;\n                                                                                <ImgNextGen\n                                                                                    srcWebp={exlink}\n                                                                                    style={{ marginBottom: \"3px\" }} height='12' alt=\"\"\n                                                                                /></div>\n                                                                        </span>\n                                                                    </div>\n                                                                    <div className=\"ml-5\">\n                                                                        <table className=\"float-right mr-auto\">\n                                                                            <thead className=\"textBlackSmall\" style={{ color: 'black' }}>\n                                                                                <tr>\n                                                                                    <th scope=\"col\" width=\"140\">Wallet</th>\n                                                                                    <th scope=\"col\" width=\"140\">Deposited</th>\n                                                                                    <th scope=\"col\">Growth</th>\n                                                                                    <th scope=\"col\">APR&nbsp;<Popup\n                                                                                        trigger={open => (<span><BsFillQuestionCircleFill style={{ marginBottom: \"2px\" }} size={10} /></span>)}\n                                                                                        on=\"hover\"\n                                                                                        offsetY={0}\n                                                                                        offsetX={5}\n                                                                                        position=\"right center\"\n                                                                                        contentStyle={{ width: '150px' }}\n                                                                                    ><div className=\"textInfo\">APR Breakdown: </div><br />\n                                                                                        <div className=\"textInfo\">Baklava   : {parseFloat(this.props.aprV2_3[2][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })} %</div><br />\n                                                                                        <div className=\"textInfo\">Kyber : {parseFloat(this.props.poolSegmentInfoV2_3[2][i].total3rdPartyAPR).toLocaleString('en-US', { maximumFractionDigits: 0 })} %</div>\n                                                                                    </Popup></th>\n                                                                                    <th scope=\"col\">APY <Popup\n                                                                                        trigger={open => (<span><BsFillQuestionCircleFill style={{ marginBottom: \"2px\" }} size={10} /></span>)}\n                                                                                        on=\"hover\"\n                                                                                        offsetY={0}\n                                                                                        offsetX={5}\n                                                                                        position=\"right center\"\n                                                                                        contentStyle={{ width: '150px' }}\n                                                                                    ><div className=\"textInfo\"><small>APY are calculated based on the compound APR number excluded locked reward.</small></div><br />\n                                                                                        <div className=\"textInfo\"><small>The value shown is based on daily compounding frequency.</small></div>\n                                                                                    </Popup></th>\n                                                                                    <th scope=\"col\">TVL</th>\n                                                                                </tr>\n                                                                            </thead>\n                                                                            <tbody className=\"textGrey\">\n                                                                                <tr>\n                                                                                    <td className=\"\">{(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.lpBalanceAccountV2_3[2][i]), 'Ether').toLocaleString('en-US', { maximumFractionDigits: 18 })}</div> : <div className=\"center\">\n                                                                                        <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>}</td>\n                                                                                    <td className=\"\">{(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.userSegmentInfoV2_3[2][i], 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 18 })}</div> : <div className=\"center\">\n                                                                                        <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\n                                                                                    <td className=\"\">{this.props.aprloading ? <div>{parseFloat(this.props.returnRatioV2_3[2][i]).toLocaleString('en-US', { maximumFractionDigits: 5 })}</div> : <div className=\"center\">\n                                                                                        <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\n                                                                                    <td className=\"\">{this.props.aprloading ? <div>{(parseFloat(this.props.aprV2_3[2][i]) + parseFloat(this.props.poolSegmentInfoV2_3[2][i].total3rdPartyAPR)).toLocaleString('en-US', { maximumFractionDigits: 0 })}%</div> : <div className=\"center\">\n                                                                                        <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\n                                                                                    <td className=\"\">{this.props.aprloading ? <div>{parseFloat(this.props.apyDailyV2_3[2][i]) > 1000000 ? <div>&#x3e;100,000%</div> : <div>{parseFloat(this.props.apyDailyV2_3[2][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })}%</div>}</div> : <div className=\"center\">\n                                                                                        <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>}</td>\n                                                                                    <td className=\"\">$ {parseFloat(this.props.tvlV2_3[2][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })} </td>\n                                                                                </tr>\n                                                                            </tbody>\n                                                                        </table>\n                                                                    </div>\n                                                                </div>\n                                                            </MediaQuery>\n                                                            <MediaQuery maxWidth={1000}>\n                                                                <div className='card-body' style={{ padding: '0rem', cursor: 'pointer' }} onClick={() => {\n                                                                    this.clickfarmOpen(i)\n                                                                }}>\n                                                                    <div className=\"float-left rowC mb-3\" style={{ minWidth: '220px' }}>\n                                                                        <span className=\"mr-3 mt-2\">\n                                                                            <div className=\"textMiddle\" style={{ width: '48px' }}>\n                                                                                {this.props.poolSegmentInfoV2_3[2][i].icon.map((icon, key) => {\n                                                                                    return (<div key={key}>\n                                                                                        {icon.image == \"bava\" && <img className={icon.imagePosition} src={bava} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                        {icon.image == \"avax\" && <img className={icon.imagePosition} src={avax} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                        {icon.image == \"usdc\" && <img className={icon.imagePosition} src={usdc} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                        {icon.image == \"usdt\" && <img className={icon.imagePosition} src={usdt} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                        {icon.image == \"ust\" && <img className={icon.imagePosition} src={ust} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                        {icon.image == \"qi\" && <img className={icon.imagePosition} src={qi} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                        {icon.image == \"savax\" && <img className={icon.imagePosition} src={savax} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                        {icon.image == \"png\" && <img className={icon.imagePosition} src={png} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                        {icon.image == \"weth\" && <img className={icon.imagePosition} src={weth} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                    </div>)\n                                                                                })}\n                                                                            </div>\n                                                                        </span>\n                                                                        <span>\n                                                                            <div className=\"textMiddle\"><b>{this.props.poolSegmentInfoV2_3[2][i].lpName}{this.props.poolSegmentInfoV2_3[2][i].status}</b></div>\n                                                                            <div className=\"textGrey exLink0\" onClick={() => {\n                                                                                window.open(this.props.poolSegmentInfoV2_3[2][i].projectLink, '_blank')\n                                                                            }}>Uses: {this.props.poolSegmentInfoV2_3[2][i].platform}&nbsp;\n                                                                                <ImgNextGen\n                                                                                    srcWebp={exlink}\n                                                                                    style={{ marginBottom: \"3px\" }} height='12' alt=\"\"\n                                                                                /></div>\n                                                                            <div className=\"textGrey exLink0\" onClick={() => {\n                                                                                window.open(this.props.poolSegmentInfoV2_3[2][i].getLPLink, '_blank')\n                                                                            }}>Get {this.props.poolSegmentInfoV2_3[2][i].lpName}&nbsp;\n                                                                                <ImgNextGen\n                                                                                    srcWebp={exlink}\n                                                                                    style={{ marginBottom: \"3px\" }} height='12' alt=\"\"\n                                                                                /></div>\n                                                                            <div className=\"textGrey exLink0\" onClick={() => {\n                                                                                window.open(this.props.poolSegmentInfoV2_3[2][i].farmContract, '_blank')\n                                                                            }}>View On Explorer&nbsp;\n                                                                                <ImgNextGen\n                                                                                    srcWebp={exlink}\n                                                                                    style={{ marginBottom: \"3px\" }} height='12' alt=\"\"\n                                                                                /></div>\n                                                                        </span>\n                                                                    </div>\n                                                                    <MediaQuery minWidth={701}>\n                                                                        <div>\n                                                                            <table className=\"float-right mr-auto\">\n                                                                                <thead className=\"textBlackSmall\" style={{ color: 'black' }}>\n                                                                                    <tr>\n                                                                                        <th scope=\"col\" width=\"140\">Wallet</th>\n                                                                                        <th scope=\"col\" width=\"140\">Deposited</th>\n                                                                                        <th scope=\"col\">Growth</th>\n                                                                                        <th scope=\"col\">APR&nbsp;<Popup\n                                                                                            trigger={open => (<span><BsFillQuestionCircleFill style={{ marginBottom: \"2px\" }} size={10} /></span>)}\n                                                                                            on=\"hover\"\n                                                                                            offsetY={0}\n                                                                                            offsetX={5}\n                                                                                            position=\"right center\"\n                                                                                            contentStyle={{ width: '150px' }}\n                                                                                        ><div className=\"textInfo\">APR Breakdown: </div><br />\n                                                                                            <div className=\"textInfo\">Baklava   : {parseFloat(this.props.aprV2_3[2][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })} %</div><br />\n                                                                                            <div className=\"textInfo\">Kyber : {parseFloat(this.props.poolSegmentInfoV2_3[2][i].total3rdPartyAPR).toLocaleString('en-US', { maximumFractionDigits: 0 })} %</div>\n                                                                                        </Popup></th>\n                                                                                        <th scope=\"col\">APY <Popup\n                                                                                            trigger={open => (<span><BsFillQuestionCircleFill style={{ marginBottom: \"2px\" }} size={10} /></span>)}\n                                                                                            on=\"hover\"\n                                                                                            offsetY={0}\n                                                                                            offsetX={5}\n                                                                                            position=\"right center\"\n                                                                                            contentStyle={{ width: '150px' }}\n                                                                                        ><div className=\"textInfo\"><small>APY are calculated based on the compound APR number excluded locked reward.</small></div><br />\n                                                                                            <div className=\"textInfo\"><small>The value shown is based on daily compounding frequency.</small></div>\n                                                                                        </Popup></th>\n                                                                                        <th scope=\"col\">TVL</th>\n                                                                                    </tr>\n                                                                                </thead>\n                                                                                <tbody className=\"textGrey\">\n                                                                                    <tr>\n                                                                                        <td className=\"\">{(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.lpBalanceAccountV2_3[2][i]), 'Ether').toLocaleString('en-US', { maximumFractionDigits: 18 })}</div> : <div className=\"center\">\n                                                                                            <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>}</td>\n                                                                                        <td className=\"\">{(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.userSegmentInfoV2_3[2][i], 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 18 })}</div> : <div className=\"center\">\n                                                                                            <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\n                                                                                        <td className=\"\">{this.props.aprloading ? <div>{parseFloat(this.props.returnRatioV2_3[2][i]).toLocaleString('en-US', { maximumFractionDigits: 5 })}</div> : <div className=\"center\">\n                                                                                            <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\n                                                                                        <td className=\"\">{this.props.aprloading ? <div>{(parseFloat(this.props.aprV2_3[2][i]) + parseFloat(this.props.poolSegmentInfoV2_3[2][i].total3rdPartyAPR)).toLocaleString('en-US', { maximumFractionDigits: 0 })}%</div> : <div className=\"center\">\n                                                                                            <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\n                                                                                        <td className=\"\">{this.props.aprloading ? <div>{parseFloat(this.props.apyDailyV2_3[2][i]) > 1000000 ? <div>&#x3e;100,000%</div> : <div>{parseFloat(this.props.apyDailyV2_3[2][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })}%</div>}</div> : <div className=\"center\">\n                                                                                            <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>}</td>\n                                                                                        <td className=\"\">$ {parseFloat(this.props.tvlV2_3[2][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })} </td>\n                                                                                    </tr>\n                                                                                </tbody>\n                                                                            </table>\n                                                                        </div>\n                                                                    </MediaQuery>\n                                                                    <MediaQuery maxWidth={700}>\n                                                                        <MediaQuery minWidth={551}>\n                                                                            <div>\n                                                                                <table className=\"float-right mr-auto\">\n                                                                                    <thead className=\"textBlackSmall\" style={{ color: 'black' }}>\n                                                                                        <tr>\n                                                                                            <th scope=\"col\" width=\"140\">Wallet</th>\n                                                                                            <th scope=\"col\" width=\"140\">Deposited</th>\n                                                                                            <th scope=\"col\">Growth</th>\n                                                                                        </tr>\n                                                                                    </thead>\n                                                                                    <tbody className=\"textGrey\">\n                                                                                        <tr>\n                                                                                            <td className=\"\">{(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.lpBalanceAccountV2_3[2][i]), 'Ether').toLocaleString('en-US', { maximumFractionDigits: 18 })}</div> : <div className=\"center\">\n                                                                                                <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>}</td>\n                                                                                            <td className=\"\">{(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.userSegmentInfoV2_3[2][i], 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 18 })}</div> : <div className=\"center\">\n                                                                                                <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\n                                                                                            <td className=\"\">{this.props.aprloading ? <div>{parseFloat(this.props.returnRatioV2_3[2][i]).toLocaleString('en-US', { maximumFractionDigits: 5 })}</div> : <div className=\"center\">\n                                                                                                <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\n                                                                                        </tr>\n                                                                                    </tbody>\n                                                                                    <thead className=\"textBlackSmall\" style={{ color: 'black' }}>\n                                                                                        <tr>\n                                                                                            <th scope=\"col\">APR&nbsp;<Popup\n                                                                                                trigger={open => (<span><BsFillQuestionCircleFill style={{ marginBottom: \"2px\" }} size={10} /></span>)}\n                                                                                                on=\"hover\"\n                                                                                                offsetY={0}\n                                                                                                offsetX={5}\n                                                                                                position=\"right center\"\n                                                                                                contentStyle={{ width: '150px' }}\n                                                                                            ><div className=\"textInfo\">APR Breakdown: </div><br />\n                                                                                                <div className=\"textInfo\">Baklava   : {parseFloat(this.props.aprV2_3[2][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })} %</div><br />\n                                                                                                <div className=\"textInfo\">Kyber : {parseFloat(this.props.poolSegmentInfoV2_3[2][i].total3rdPartyAPR).toLocaleString('en-US', { maximumFractionDigits: 0 })} %</div>\n                                                                                            </Popup></th>\n                                                                                            <th scope=\"col\">APY <Popup\n                                                                                                trigger={open => (<span><BsFillQuestionCircleFill style={{ marginBottom: \"2px\" }} size={10} /></span>)}\n                                                                                                on=\"hover\"\n                                                                                                offsetY={0}\n                                                                                                offsetX={5}\n                                                                                                position=\"right center\"\n                                                                                                contentStyle={{ width: '150px' }}\n                                                                                            ><div className=\"textInfo\"><small>APY are calculated based on the compound APR number excluded locked reward.</small></div><br />\n                                                                                                <div className=\"textInfo\"><small>The value shown is based on daily compounding frequency.</small></div>\n                                                                                            </Popup></th>\n                                                                                            <th scope=\"col\">TVL</th>\n                                                                                        </tr>\n                                                                                    </thead>\n                                                                                    <tbody className=\"textGrey\">\n                                                                                        <tr>\n                                                                                            <td className=\"\">{this.props.aprloading ? <div>{(parseFloat(this.props.aprV2_3[2][i]) + parseFloat(this.props.poolSegmentInfoV2_3[2][i].total3rdPartyAPR)).toLocaleString('en-US', { maximumFractionDigits: 0 })}%</div> : <div className=\"center\">\n                                                                                                <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\n                                                                                            <td className=\"\">{this.props.aprloading ? <div>{parseFloat(this.props.apyDailyV2_3[2][i]) > 1000000 ? <div>&#x3e;100,000%</div> : <div>{parseFloat(this.props.apyDailyV2_3[2][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })}%</div>}</div> : <div className=\"center\">\n                                                                                                <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>}</td>\n                                                                                            <td className=\"\">$ {parseFloat(this.props.tvlV2_3[2][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })} </td>\n                                                                                        </tr>\n                                                                                    </tbody>\n                                                                                </table>\n                                                                            </div>\n                                                                        </MediaQuery>\n                                                                        <MediaQuery maxWidth={550}>\n                                                                            <div>\n                                                                                <table className=\"float-right mr-auto\">\n                                                                                    <thead className=\"textBlackSmall\" style={{ color: 'black' }}>\n                                                                                        <tr>\n                                                                                            <th scope=\"col\" width=\"140\">Wallet</th>\n                                                                                            <th scope=\"col\" width=\"140\">Deposited</th>\n                                                                                        </tr>\n                                                                                    </thead>\n                                                                                    <tbody className=\"textGrey\">\n                                                                                        <tr>\n                                                                                            <td className=\"\">{(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.lpBalanceAccountV2_3[2][i]), 'Ether').toLocaleString('en-US', { maximumFractionDigits: 18 })}</div> : <div className=\"center\">\n                                                                                                <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>}</td>\n                                                                                            <td className=\"\">{(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.userSegmentInfoV2_3[2][i], 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 18 })}</div> : <div className=\"center\">\n                                                                                                <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\n                                                                                        </tr>\n                                                                                    </tbody>\n                                                                                    <thead className=\"textBlackSmall\" style={{ color: 'black' }}>\n                                                                                        <tr>\n                                                                                            <th scope=\"col\">Growth</th>\n                                                                                            <th scope=\"col\">APR&nbsp;<Popup\n                                                                                                trigger={open => (<span><BsFillQuestionCircleFill style={{ marginBottom: \"2px\" }} size={10} /></span>)}\n                                                                                                on=\"hover\"\n                                                                                                offsetY={0}\n                                                                                                offsetX={5}\n                                                                                                position=\"right center\"\n                                                                                                contentStyle={{ width: '150px' }}\n                                                                                            ><div className=\"textInfo\">APR Breakdown: </div><br />\n                                                                                                <div className=\"textInfo\">Baklava   : {parseFloat(this.props.aprV2_3[2][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })} %</div><br />\n                                                                                                <div className=\"textInfo\">Kyber : {parseFloat(this.props.poolSegmentInfoV2_3[2][i].total3rdPartyAPR).toLocaleString('en-US', { maximumFractionDigits: 0 })} %</div>\n                                                                                            </Popup></th>\n                                                                                        </tr>\n                                                                                    </thead>\n                                                                                    <tbody className=\"textGrey\">\n                                                                                        <tr>\n                                                                                            <td className=\"\">{this.props.aprloading ? <div>{parseFloat(this.props.returnRatioV2_3[2][i]).toLocaleString('en-US', { maximumFractionDigits: 5 })}</div> : <div className=\"center\">\n                                                                                                <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\n                                                                                            <td className=\"\">{this.props.aprloading ? <div>{(parseFloat(this.props.aprV2_3[2][i]) + parseFloat(this.props.poolSegmentInfoV2_3[2][i].total3rdPartyAPR)).toLocaleString('en-US', { maximumFractionDigits: 0 })}%</div> : <div className=\"center\">\n                                                                                                <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\n                                                                                        </tr>\n                                                                                    </tbody>\n                                                                                    <thead className=\"textBlackSmall\" style={{ color: 'black' }}>\n                                                                                        <tr>\n                                                                                            <th scope=\"col\">APY <Popup\n                                                                                                trigger={open => (<span><BsFillQuestionCircleFill style={{ marginBottom: \"2px\" }} size={10} /></span>)}\n                                                                                                on=\"hover\"\n                                                                                                offsetY={0}\n                                                                                                offsetX={5}\n                                                                                                position=\"right center\"\n                                                                                                contentStyle={{ width: '150px' }}\n                                                                                            ><div className=\"textInfo\"><small>APY are calculated based on the compound APR number excluded locked reward.</small></div><br />\n                                                                                                <div className=\"textInfo\"><small>The value shown is based on daily compounding frequency.</small></div>\n                                                                                            </Popup></th>\n                                                                                            <th scope=\"col\">TVL</th>\n                                                                                        </tr>\n                                                                                    </thead>\n                                                                                    <tbody className=\"textGrey\">\n                                                                                        <tr>\n                                                                                            <td className=\"\">{this.props.aprloading ? <div>{parseFloat(this.props.apyDailyV2_3[2][i]) > 1000000 ? <div>&#x3e;100,000%</div> : <div>{parseFloat(this.props.apyDailyV2_3[2][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })}%</div>}</div> : <div className=\"center\">\n                                                                                                <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>}</td>\n                                                                                            <td className=\"\">$ {parseFloat(this.props.tvlV2_3[2][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })} </td>\n                                                                                        </tr>\n                                                                                    </tbody>\n                                                                                </table>\n                                                                            </div>\n                                                                        </MediaQuery>\n                                                                    </MediaQuery>\n                                                                </div>\n                                                            </MediaQuery>\n                                                        </div>\n\n                                                        {this.state.farmV2_3_kyberOpen[i] ?\n                                                            <div>\n                                                                {this.props.wallet || this.props.walletConnect ?\n                                                                    <div className=\"borderTop \">\n                                                                        <div className=\"mt-3\">\n                                                                            <MediaQuery minWidth={951}>\n                                                                                <div className='float-left'>\n                                                                                    <div className=\"card cardbody mr-3\" style={{ marginBottom: '6px', width: '300px' }}>\n                                                                                        <div className=\"card-body\" style={{ padding: '0.5rem' }}>\n                                                                                            <span className=\"float-left\" style={{ color: 'black' }}><small>BAVA earned</small></span><br />\n                                                                                            <span className=\"float-left\" style={{ color: 'black', marginTop: '8px' }}><small>{this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.pendingSegmentRewardV2_3[2][i], 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 0 })}</div> :\n                                                                                                <div className=\"ml-3 lds-facebook\"><div></div><div></div><div></div></div>}</small></span>\n                                                                                            <span className=\"float-right\">\n                                                                                                <Buttons\n                                                                                                    variant=\"success\"\n                                                                                                    size=\"sm\"\n                                                                                                    style={{ minWidth: '80px' }}\n                                                                                                    onClick={(event) => {\n                                                                                                        event.preventDefault()\n                                                                                                        console.log(i)\n                                                                                                        this.props.harvest(i, 0, 4)\n                                                                                                    }}>\n                                                                                                    Harvest\n                                                                                                </Buttons></span>\n                                                                                        </div>\n                                                                                    </div>\n                                                                                    <div className=\"card cardbody float-left mr-3\" style={{ width: '300px' }}>\n                                                                                        <div className=\"card-body\" style={{ padding: '0.5rem' }}>\n                                                                                            <span className=\"float-left\" style={{ color: 'black' }}><small>Reinvest </small><Popup\n                                                                                                trigger={open => (\n                                                                                                    <span><BsFillQuestionCircleFill size={13} /></span>\n                                                                                                )}\n                                                                                                on=\"hover\"\n                                                                                                offsetY={0}\n                                                                                                offsetX={10}\n                                                                                                position=\"right center\"\n                                                                                            ><span className=\"textInfo\"><small>This farm has a 2% reinvest reward paid in WAVAX. Pressing the button is optional.</small></span>\n                                                                                            </Popup></span><br />\n                                                                                            <span className=\"float-left\" style={{ color: 'black', marginTop: '8px' }}><small>{this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.reinvestAmount[2][i], 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 5 })} WAVAX</div> :\n                                                                                                <div className=\"ml-3 lds-facebook\"><div></div><div></div><div></div></div>}</small></span>\n                                                                                            <span className=\"float-right\">\n                                                                                                <Buttons\n                                                                                                    variant=\"info\"\n                                                                                                    size=\"sm\"\n                                                                                                    style={{ minWidth: '80px' }}\n                                                                                                    onClick={(event) => {\n                                                                                                        event.preventDefault()\n                                                                                                        console.log(i)\n                                                                                                        this.props.reinvest(i, 0)\n                                                                                                    }}>\n                                                                                                    Reinvest\n                                                                                                </Buttons></span>\n                                                                                        </div>\n                                                                                    </div>\n                                                                                </div>\n                                                                            </MediaQuery>\n                                                                            <MediaQuery maxWidth={950}>\n                                                                                <div>\n                                                                                    <div className=\"card cardbody\" style={{ marginBottom: '6px' }}>\n                                                                                        <div className=\"card-body\" style={{ padding: '0.5rem' }}>\n                                                                                            <span className=\"float-left\" style={{ color: 'black' }}><small>BAVA earned</small></span><br />\n                                                                                            <span className=\"float-left\" style={{ color: 'black', marginTop: '8px' }}><small>{this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.pendingSegmentRewardV2_3[2][i], 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 0 })}</div> :\n                                                                                                <div className=\"ml-3 lds-facebook\"><div></div><div></div><div></div></div>}</small></span>\n                                                                                            <span className=\"float-right\">\n                                                                                                <Buttons\n                                                                                                    variant=\"success\"\n                                                                                                    size=\"sm\"\n                                                                                                    style={{ minWidth: '80px' }}\n                                                                                                    onClick={(event) => {\n                                                                                                        event.preventDefault()\n                                                                                                        console.log(i)\n                                                                                                        this.props.harvest(i, 0, 4)\n                                                                                                    }}>\n                                                                                                    Harvest\n                                                                                                </Buttons></span>\n                                                                                        </div>\n                                                                                    </div>\n                                                                                    <div className=\"card cardbody\" style={{ marginBottom: '6px' }}>\n                                                                                        <div className=\"card-body\" style={{ padding: '0.5rem' }}>\n                                                                                            <span className=\"float-left\" style={{ color: 'black' }}><small>Reinvest </small><Popup\n                                                                                                trigger={open => (\n                                                                                                    <span><BsFillQuestionCircleFill size={13} /></span>\n                                                                                                )}\n                                                                                                on=\"hover\"\n                                                                                                offsetY={0}\n                                                                                                offsetX={10}\n                                                                                                position=\"right center\"\n                                                                                            ><span className=\"textInfo\"><small>This farm has a 2% reinvest reward paid in WAVAX. Pressing the button is optional.</small></span>\n                                                                                            </Popup></span><br />\n                                                                                            <span className=\"float-left\" style={{ color: 'black', marginTop: '8px' }}><small>{this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.reinvestAmount[2][i], 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 5 })} WAVAX</div> :\n                                                                                                <div className=\"ml-3 lds-facebook\"><div></div><div></div><div></div></div>}</small></span>\n                                                                                            <span className=\"float-right\">\n                                                                                                <Buttons\n                                                                                                    variant=\"info\"\n                                                                                                    size=\"sm\"\n                                                                                                    style={{ minWidth: '80px' }}\n                                                                                                    onClick={(event) => {\n                                                                                                        event.preventDefault()\n                                                                                                        console.log(i)\n                                                                                                        this.props.reinvest(i, 0)\n                                                                                                    }}>\n                                                                                                    Reinvest\n                                                                                                </Buttons></span>\n                                                                                        </div>\n                                                                                    </div>\n                                                                                </div>\n                                                                            </MediaQuery>\n\n\n                                                                            <div className=\"card cardbody\" style={{ minWidth: '300px' }}>\n                                                                                <div className=\"card-body\" style={{ padding: '0.5rem' }}>\n                                                                                    <div className='ml-2 mt-2 mb-2'>\n                                                                                        {this.state.depositAction[i] == true ?\n                                                                                            <div style={{ height: '30px' }}>\n                                                                                                <div className='float-left' style={{ paddingTop: '0px' }}>\n                                                                                                    <ButtonGroup>\n                                                                                                        <div>\n                                                                                                            <Buttons className=\"textTransparentButton center\" style={{ textDecoration: 'none', marginRight: '5px' }} variant=\"link\" size=\"sm\" onClick={async () => {\n                                                                                                                await this.setAction(i, 0)\n                                                                                                            }}><b>Deposit</b></Buttons></div>\n                                                                                                        <div>\n                                                                                                            <Buttons className=\"textBlackButton center mr-1\" style={{ textDecoration: 'none' }} variant=\"link\" size=\"sm\" onClick={async () => {\n                                                                                                                await this.setAction(i, 1)\n                                                                                                            }}>Withdraw</Buttons></div>\n                                                                                                    </ButtonGroup>\n                                                                                                </div>\n                                                                                            </div>\n                                                                                            : <div style={{ height: '30px' }}>\n                                                                                                <div className='float-left' style={{ paddingTop: '0px' }}>\n                                                                                                    <ButtonGroup>\n                                                                                                        <div>\n                                                                                                            <Buttons className=\"textBlackButton center mr-1\" style={{ textDecoration: 'none' }} variant=\"link\" size=\"sm\" onClick={async () => {\n                                                                                                                await this.setAction(i, 0)\n                                                                                                            }}><b>Deposit</b></Buttons></div>\n                                                                                                        <div>\n                                                                                                            <Buttons className=\"textTransparentButton center mr-1\" style={{ textDecoration: 'none' }} variant=\"link\" size=\"sm\" onClick={async () => {\n                                                                                                                await this.setAction(i, 1)\n                                                                                                            }}>Withdraw</Buttons></div>\n                                                                                                    </ButtonGroup>\n                                                                                                </div>\n                                                                                            </div>\n                                                                                        }\n                                                                                        {/* {this.props.lpSegmentAllowanceV2_3[2][i] > 2000000000000000000000000000 ?\n                                                                                            <div><Deposit\n                                                                                                lpBalanceAccount={this.props.lpBalanceAccountV2_3}\n                                                                                                poolSegmentInfo={this.props.poolSegmentInfoV2_3}\n                                                                                                userSegmentInfo={this.props.userSegmentInfoV2_3}\n                                                                                                i={i}\n                                                                                                n='2'\n                                                                                                v='4'\n                                                                                                deposit={this.props.deposit}\n                                                                                                withdraw={this.props.withdraw}\n                                                                                            /></div>\n                                                                                            :\n                                                                                            <div>\n                                                                                                <span className=\"float-left \" style={{ color: 'black' }}><small>Enable Pool</small></span>\n                                                                                                <Buttons className=\"btn-block\"\n                                                                                                    variant=\"outline-primary\"\n                                                                                                    size=\"sm\"\n                                                                                                    style={{ minWidth: '80px' }}\n                                                                                                    onClick={(event) => {\n                                                                                                        event.preventDefault()\n                                                                                                        this.props.approve(i, 2, 4)\n                                                                                                    }}>\n                                                                                                    Approve\n                                                                                                </Buttons>\n                                                                                            </div>} */}\n                                                                                    </div>\n                                                                                    <div className='borderBottom'></div>\n                                                                                    <div className='ml-1 mr-1'>\n                                                                                        {this.state.depositAction[i] == true ?\n                                                                                            <div><Deposit\n                                                                                                wallet={this.props.wallet}\n                                                                                                walletConnect={this.props.walletConnect}\n                                                                                                accountLoading={this.props.accountLoading}\n                                                                                                lpBalanceAccount={this.props.lpBalanceAccountV2_3}\n                                                                                                poolSegmentInfo={this.props.poolSegmentInfoV2_3}\n                                                                                                userSegmentInfo={this.props.userSegmentInfoV2_3}\n                                                                                                lpSegmentAllowanceV2_3={this.props.lpSegmentAllowanceV2_3[2][i]}\n                                                                                                i={i}\n                                                                                                n='2'\n                                                                                                v='4'\n                                                                                                approve={this.props.approve}\n                                                                                                deposit={this.props.deposit}\n                                                                                                withdraw={this.props.withdraw}\n                                                                                            /></div>\n                                                                                            :\n                                                                                            <div><Withdraw\n                                                                                                wallet={this.props.wallet}\n                                                                                                walletConnect={this.props.walletConnect}\n                                                                                                accountLoading={this.props.accountLoading}\n                                                                                                lpBalanceAccount={this.props.lpBalanceAccountV2_3}\n                                                                                                poolSegmentInfo={this.props.poolSegmentInfoV2_3}\n                                                                                                userSegmentInfo={this.props.userSegmentInfoV2_3}\n                                                                                                lpSegmentAllowanceV2_3={this.props.lpSegmentAllowanceV2_3[2][i]}\n                                                                                                i={i}\n                                                                                                n='2'\n                                                                                                v='4'\n                                                                                                approve={this.props.approve}\n                                                                                                deposit={this.props.deposit}\n                                                                                                withdraw={this.props.withdraw}\n                                                                                            /></div>\n                                                                                        }\n                                                                                    </div>\n                                                                                </div>\n                                                                            </div>\n                                                                        </div>\n                                                                    </div> :\n                                                                    <div className=\"center borderTop\" >\n                                                                        <span className=\"mt-3\" style={{ color: 'black' }}><small>Wallet Connection to Avalanche required</small></span>\n                                                                    </div>}\n                                                            </div>\n                                                            : <div></div>}\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    )\n                                })}\n                            </div>\n                            :\n                            <div className=\"center\">\n                                <div style={{ marginBottom: '350px' }}>\n                                    <div className=\"bounceball\"></div> &nbsp;\n                                    <div className=\"textLoadingSmall\">NETWORK IS Loading...</div>\n                                </div>\n                            </div>\n                        }\n                    </div>\n                </div><br /><br /><br /><br /><br /><br /><br /><br /><br />\n                <Footer />\n            </div >\n        );\n    }\n}\n\nexport default Kyber;","import React, { Component } from 'react';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport MediaQuery from 'react-responsive';\nimport bigInt from 'big-integer'\nimport Buttons from 'react-bootstrap/Button'\nimport Popup from 'reactjs-popup';\nimport 'reactjs-popup/dist/index.css';\nimport './App.css';\nimport Footer from './Footer'\nimport ImgNextGen from './ImgNextGen';\nimport logo from './images/logo.webp';\nimport coin98 from './images/coin98.webp';\nimport fox from './images/metamask-fox.svg';\nimport walletconnectlogo from './images/walletconnect-logo.svg';\n\nclass Stake extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            message: '',\n            txValidAmount: false,\n            stakeOpen: false,\n            unstakeOpen: false,\n            txApprovedValidAmount: false,\n            inputstate: 0\n        }\n        this.changeHandlerDeposit = this.changeHandlerDeposit.bind(this)\n        this.changeHandlerWithdraw = this.changeHandlerWithdraw.bind(this)\n        this.changeHandlerApprove = this.changeHandlerApprove.bind(this)\n    }\n\n    changeHandlerDeposit(event) {\n        let result = !isNaN(+event); // true if its a number, false if not\n        if (event == \"\") {\n            this.setState({\n                message: '',\n                txValidAmount: false\n            })\n        } else if (result == false) {\n            this.setState({\n                message: 'Not a valid number',\n                txValidAmount: false\n            })\n        } else if (this.countDecimals(event) > 18) {\n            this.setState({\n                message: 'Input decimal more than 18.',\n                txValidAmount: false\n            })\n        } else if (event <= 0) {\n            this.setState({\n                message: 'Value need to be greater than 0',\n                txValidAmount: false\n            })\n        } else if (bigInt(window.web3Ava.utils.toWei(event, 'ether')).value > bigInt(this.props.bavaTokenBalance).value) {\n            this.setState({\n                message: 'Value more than Wallet.',\n                txValidAmount: false\n            })\n        } else {\n            this.setState({\n                message: '',\n                txValidAmount: true\n            })\n        }\n    }\n\n    changeHandlerWithdraw(event) {\n        let result = !isNaN(+event); // true if its a number, false if not\n        if (event == \"\") {\n            this.setState({\n                message: '',\n                txValidAmount: false\n            })\n        } else if (result == false) {\n            this.setState({\n                message: 'Not a valid number',\n                txValidAmount: false\n            })\n        } else if (this.countDecimals(event) > 18) {\n            this.setState({\n                message: 'Input decimal more than 18.',\n                txValidAmount: false\n            })\n        } else if (event <= 0) {\n            this.setState({\n                message: 'Value need to be greater than 0',\n                txValidAmount: false\n            })\n        } else if (bigInt(window.web3Ava.utils.toWei(event, 'ether')).value > bigInt(this.props.stakeAmount).value) {\n            this.setState({\n                message: 'Withdraw tokens more than deposit tokens',\n                txValidAmount: false\n            })\n        } else {\n            this.setState({\n                message: '',\n                txValidAmount: true\n            })\n        }\n    }\n\n    changeHandlerApprove(event) {\n        let result = !isNaN(+event); // true if its a number, false if not\n        if (event == \"\") {\n            this.setState({\n                txApprovedValidAmount: false\n            })\n        } else if (result == false) {\n            this.setState({\n                txApprovedValidAmount: false\n            })\n        } else if (this.countDecimals(event) > 18) {\n            this.setState({\n                txApprovedValidAmount: false\n            })\n        } else {\n            this.setState({\n                txApprovedValidAmount: true\n            })\n        }\n    }\n\n    countDecimals(x) {\n        if (Math.floor(x.valueOf()) === x.valueOf()) return 0;\n\n        var str = x.toString();\n        if (str.indexOf(\".\") !== -1 && str.indexOf(\"-\") !== -1) {\n            return str.split(\"-\")[1] || 0;\n        } else if (str.indexOf(\".\") !== -1) {\n            return str.split(\".\")[1].length || 0;\n        }\n        return str.split(\"-\")[1] || 0;\n    }\n\n    setStake() {\n        if (this.state.stakeOpen == true) {\n            this.setState({\n                unstakeOpen: false,\n                stakeOpen: false,\n                inputstate: 0\n            })\n        } else {\n            if (this.state.inputstate != 0) {\n                this.input.value = ''\n            }\n            this.setState({\n                unstakeOpen: false,\n                stakeOpen: true,\n                message: '',\n                txValidAmount: false,\n                txApprovedValidAmount: false,\n                inputstate: 0\n            })\n\n        }\n    }\n\n    setUnstake() {\n        if (this.state.unstakeOpen == true) {\n            this.setState({\n                unstakeOpen: false,\n                stakeOpen: false,\n                inputstate: 0\n            })\n        } else {\n            if (this.state.inputstate != 0) {\n                this.input.value = ''\n            }\n            this.setState({\n                unstakeOpen: true,\n                stakeOpen: false,\n                message: '',\n                txValidAmount: false,\n                txApprovedValidAmount: false,\n                inputstate: 0\n            })\n        }\n    }\n\n    render() {\n        const contentStyle = { background: '#fffae6', border: \"1px solid #596169\", width: \"30%\", borderRadius: \"15px\", minWidth: \"320px\" };\n        return (\n            <div id=\"content\" style={{ margin: \"0\", color: '#ff9a04' }}>\n                <label className=\"textWhite center mb-3\" style={{ fontSize: '40px', color: 'black' }}><big><b>BAVA Staking</b></big></label>\n                <div className=\"center mb-4\" style={{ color: 'grey' }}>Deposit and stake your BAVA tokens to maximize your yield. No Impermanent Loss.</div>\n                <MediaQuery minWidth={701}>\n                    <div className=\"ml-auto mr-auto card cardbody\" style={{ marginBottom: '12px', height: '120px', color: 'black' }}>\n                        <div className=\"card-body\">\n                            <div className=\"center\">\n                                <ImgNextGen\n                                    srcWebp={logo}\n                                    style={{ marginLeft: '70px', marginRight: '50px' }} width=\"50\" height=\"50\" alt=\"\"\n                                />\n                                <table style={{ width: \"900px\" }}>\n                                    <thead className=\"textBlackSmall\" style={{ color: 'black' }}>\n                                        <tr>\n                                            <th scope=\"col\" width=\"120\">BAVA Balance</th>\n                                            <th scope=\"col\" width=\"120\">Staked BAVA</th>\n                                            <th scope=\"col\" width=\"120\">Unclaimed Reward</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody className=\"textBlackSmall\" style={{ color: 'black' }}>\n                                        <tr>\n                                            <td scope=\"col\" width=\"120\"><div className='mt-2'>{(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.bavaTokenBalance, 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 3 })} BAVA / $ {(window.web3Ava.utils.fromWei(this.props.bavaTokenBalance, 'Ether') * this.props.BAVAPrice).toLocaleString('en-US', { maximumFractionDigits: 0 })}</div>\n                                                : <div className=\"\"><div className=\"lds-facebook mb-2\"><div></div><div></div><div></div></div></div>}</div></td>\n                                            <td scope=\"col\" width=\"120\"><div className='mt-2'>{(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.stakeAmount, 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 3 })} BAVA / $ {(window.web3Ava.utils.fromWei(this.props.stakeAmount, 'Ether') * this.props.BAVAPrice).toLocaleString('en-US', { maximumFractionDigits: 0 })}</div>\n                                                : <div className=\"\"><div className=\"lds-facebook mb-2\"><div></div><div></div><div></div></div></div>}</div></td>\n                                            <td scope=\"col\" width=\"120\"><div className='mt-2'>{(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.earnedAmount, 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 3 })} BAVA / $ {(window.web3Ava.utils.fromWei(this.props.earnedAmount, 'Ether') * this.props.BAVAPrice).toLocaleString('en-US', { maximumFractionDigits: 0 })}</div>\n                                                : <div className=\"\"><div className=\"lds-facebook mb-2\"><div></div><div></div><div></div></div></div>}</div></td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"ml-auto mr-auto card cardbody\" style={{ marginBottom: '12px', height: '120px', color: 'black' }}>\n                        <div className=\"card-body \">\n                            <div className=\"center \">\n                                <ImgNextGen\n                                    srcWebp={logo}\n                                    style={{ marginLeft: '70px', marginRight: '50px' }} width=\"50\" height=\"50\" alt=\"\"\n                                />\n                                <table style={{ width: \"900px\" }}>\n                                    <thead className=\"textBlackSmall\" style={{ color: 'black' }}>\n                                        <tr>\n                                            <th scope=\"col\" width=\"120\">Total BAVA Staked</th>\n                                            <th scope=\"col\" width=\"120\">APR</th>\n                                            <th scope=\"col\" width=\"120\">Your Pool</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody className=\"textBlackSmall\" style={{ color: 'black' }}>\n                                        <tr>\n                                            <td scope=\"col\" width=\"120\"><div className='mt-2'><div>{parseFloat(window.web3Ava.utils.fromWei(this.props.totalStake, 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 0 })} BAVA / $ {(window.web3Ava.utils.fromWei(this.props.totalStake, 'Ether') * this.props.BAVAPrice).toLocaleString('en-US', { maximumFractionDigits: 0 })}</div></div></td>\n                                            <td scope=\"col\" width=\"120\"><div className='mt-2'><div>{parseFloat(this.props.rewardRate / this.props.totalStake * 31556926 * 100).toLocaleString('en-US', { maximumFractionDigits: 0 })}%</div></div></td>\n                                            <td scope=\"col\" width=\"120\"><div className='mt-2'>{(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ? <div>{parseFloat(this.props.stakeAmount / this.props.totalStake * 100).toLocaleString('en-US', { maximumFractionDigits: 5 })}%</div>\n                                                : <div className=\"\"><div className=\"lds-facebook mb-2\"><div></div><div></div><div></div></div></div>}</div></td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                </MediaQuery>\n\n                <MediaQuery maxWidth={700}>\n                    <MediaQuery minWidth={601}>\n                        <div className=\"ml-auto mr-auto card cardbody\" style={{ marginBottom: '12px', height: '120px', color: 'black' }}>\n                            <div className=\"card-body\">\n                                <div className=\"center\">\n                                    <table style={{ width: \"900px\" }}>\n                                        <thead className=\"textBlackSmall\" style={{ color: 'black' }}>\n                                            <tr>\n                                                <th scope=\"col\" width=\"120\">BAVA Balance</th>\n                                                <th scope=\"col\" width=\"120\">Staked BAVA</th>\n                                                <th scope=\"col\" width=\"120\">Unclaimed Reward</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody className=\"textBlackSmall\" style={{ color: 'black' }}>\n                                            <tr>\n                                                <td scope=\"col\" width=\"120\"><div className='mt-2'>{(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.bavaTokenBalance, 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 3 })} BAVA / $ {(window.web3Ava.utils.fromWei(this.props.bavaTokenBalance, 'Ether') * this.props.BAVAPrice).toLocaleString('en-US', { maximumFractionDigits: 0 })}</div>\n                                                    : <div className=\"\"><div className=\"lds-facebook mb-2\"><div></div><div></div><div></div></div></div>}</div></td>\n                                                <td scope=\"col\" width=\"120\"><div className='mt-2'>{(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.stakeAmount, 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 3 })} BAVA / $ {(window.web3Ava.utils.fromWei(this.props.stakeAmount, 'Ether') * this.props.BAVAPrice).toLocaleString('en-US', { maximumFractionDigits: 0 })}</div>\n                                                    : <div className=\"\"><div className=\"lds-facebook mb-2\"><div></div><div></div><div></div></div></div>}</div></td>\n                                                <td scope=\"col\" width=\"120\"><div className='mt-2'>{(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.earnedAmount, 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 3 })} BAVA / $ {(window.web3Ava.utils.fromWei(this.props.earnedAmount, 'Ether') * this.props.BAVAPrice).toLocaleString('en-US', { maximumFractionDigits: 0 })}</div>\n                                                    : <div className=\"\"><div className=\"lds-facebook mb-2\"><div></div><div></div><div></div></div></div>}</div></td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"ml-auto mr-auto card cardbody\" style={{ marginBottom: '12px', height: '120px', color: 'black' }}>\n                            <div className=\"card-body \">\n                                <div className=\"center \">\n                                    <table style={{ width: \"900px\" }}>\n                                        <thead className=\"textBlackSmall\" style={{ color: 'black' }}>\n                                            <tr>\n                                                <th scope=\"col\" width=\"120\">Total BAVA Staked</th>\n                                                <th scope=\"col\" width=\"120\">APR</th>\n                                                <th scope=\"col\" width=\"120\">Your Pool</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody className=\"textBlackSmall\" style={{ color: 'black' }}>\n                                            <tr>\n                                                <td scope=\"col\" width=\"120\"><div className='mt-2'><div>{parseFloat(window.web3Ava.utils.fromWei(this.props.totalStake, 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 0 })} BAVA / $ {(window.web3Ava.utils.fromWei(this.props.totalStake, 'Ether') * this.props.BAVAPrice).toLocaleString('en-US', { maximumFractionDigits: 0 })}</div></div></td>\n                                                <td scope=\"col\" width=\"120\"><div className='mt-2'><div>{parseFloat(this.props.rewardRate / this.props.totalStake * 31556926 * 100).toLocaleString('en-US', { maximumFractionDigits: 0 })}%</div></div></td>\n                                                <td scope=\"col\" width=\"120\"><div className='mt-2'>{(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ? <div>{parseFloat(this.props.stakeAmount / this.props.totalStake * 100).toLocaleString('en-US', { maximumFractionDigits: 5 })}%</div>\n                                                    : <div className=\"\"><div className=\"lds-facebook mb-2\"><div></div><div></div><div></div></div></div>}</div></td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </div>\n                        </div>\n                    </MediaQuery>\n                    <MediaQuery maxWidth={600}>\n                        <MediaQuery minWidth={451}>\n                            <div className='rowC'>\n                                <span className=\"ml-auto card cardbody\" style={{ marginBottom: '12px', marginRight: '5px', color: 'black' }}>\n                                    <div className=\"card-body\">\n                                        <div className=\"center\">\n                                            <table style={{ width: \"900px\" }}>\n                                                <thead className=\"textBlackSmall\" style={{ color: 'black' }}>\n                                                    <tr>\n                                                        <th scope=\"col\" width=\"120\" >BAVA Balance</th>\n                                                    </tr>\n                                                </thead>\n                                                <tbody className=\"textBlackSmall\" style={{ color: 'black' }}>\n                                                    <tr>\n                                                        <td scope=\"col\" width=\"120\" height='52px'><div>{(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.bavaTokenBalance, 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 3 })} BAVA / $ {(window.web3Ava.utils.fromWei(this.props.bavaTokenBalance, 'Ether') * this.props.BAVAPrice).toLocaleString('en-US', { maximumFractionDigits: 0 })}</div>\n                                                            : <div className=\"\"><div className=\"lds-facebook mb-2\"><div></div><div></div><div></div></div></div>}</div></td>\n                                                    </tr>\n                                                </tbody>\n                                                <thead className=\"textBlackSmall\" style={{ padding: '10px', color: 'black' }}>\n                                                    <tr>\n                                                        <th scope=\"col\" width=\"120\" >Staked BAVA</th>\n                                                    </tr>\n                                                </thead>\n                                                <tbody className=\"textBlackSmall\" style={{ color: 'black' }}>\n                                                    <tr>\n                                                        <td scope=\"col\" width=\"120\" height='52px'><div>{(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.stakeAmount, 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 3 })} BAVA / $ {(window.web3Ava.utils.fromWei(this.props.stakeAmount, 'Ether') * this.props.BAVAPrice).toLocaleString('en-US', { maximumFractionDigits: 0 })}</div>\n                                                            : <div className=\"\"><div className=\"lds-facebook mb-2\"><div></div><div></div><div></div></div></div>}</div></td>\n                                                    </tr>\n                                                </tbody>\n                                                <thead className=\"textBlackSmall mt-2\" style={{ color: 'black' }}>\n                                                    <tr>\n                                                        <th scope=\"col\" width=\"120\" >Unclaimed Reward</th>\n                                                    </tr>\n                                                </thead>\n                                                <tbody className=\"textBlackSmall\" style={{ color: 'black' }}>\n                                                    <tr>\n                                                        <td scope=\"col\" width=\"120\" height='52px'><div>{(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.earnedAmount, 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 3 })} BAVA / $ {(window.web3Ava.utils.fromWei(this.props.earnedAmount, 'Ether') * this.props.BAVAPrice).toLocaleString('en-US', { maximumFractionDigits: 0 })}</div>\n                                                            : <div className=\"\"><div className=\"lds-facebook mb-2\"><div></div><div></div><div></div></div></div>}</div></td>\n                                                    </tr>\n                                                </tbody>\n                                            </table>\n                                        </div>\n                                    </div>\n                                </span>\n                                <span className=\"mr-auto card cardbody\" style={{ marginBottom: '12px', marginLeft: '5px', color: 'black' }}>\n                                    <div className=\"card-body \">\n                                        <div className=\"center \">\n                                            <table style={{ width: \"900px\" }}>\n                                                <thead className=\"textBlackSmall\" style={{ color: 'black' }}>\n                                                    <tr>\n                                                        <th scope=\"col\" width=\"120\" >Total BAVA Staked</th>\n                                                    </tr>\n                                                </thead>\n                                                <tbody className=\"textBlackSmall\" style={{ color: 'black' }}>\n                                                    <tr>\n                                                        <td scope=\"col\" width=\"120\" height='52px'><div>{parseFloat(window.web3Ava.utils.fromWei(this.props.totalStake, 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 0 })} BAVA / $ {(window.web3Ava.utils.fromWei(this.props.totalStake, 'Ether') * this.props.BAVAPrice).toLocaleString('en-US', { maximumFractionDigits: 0 })}</div></td>\n                                                    </tr>\n                                                </tbody>\n                                                <thead className=\"textBlackSmall\" style={{ color: 'black' }}>\n                                                    <tr>\n                                                        <th scope=\"col\" width=\"120\" >APR</th>\n                                                    </tr>\n                                                </thead>\n                                                <tbody className=\"textBlackSmall\" style={{ color: 'black' }}>\n                                                    <tr>\n                                                        <td scope=\"col\" width=\"120\" height='52px'><div>{parseFloat(this.props.rewardRate / this.props.totalStake * 31556926 * 100).toLocaleString('en-US', { maximumFractionDigits: 0 })}%</div></td>\n                                                    </tr>\n                                                </tbody>\n                                                <thead className=\"textBlackSmall\" style={{ color: 'black' }}>\n                                                    <tr>\n                                                        <th scope=\"col\" width=\"120\" >Your Pool%</th>\n                                                    </tr>\n                                                </thead>\n                                                <tbody className=\"textBlackSmall\" style={{ color: 'black' }}>\n                                                    <tr>\n                                                        <td scope=\"col\" width=\"120\" height='52px'><div>{(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ? <div>{parseFloat(this.props.stakeAmount / this.props.totalStake * 100).toLocaleString('en-US', { maximumFractionDigits: 5 })}%</div>\n                                                            : <div className=\"\"><div className=\"lds-facebook mb-2\"><div></div><div></div><div></div></div></div>}</div></td>\n                                                    </tr>\n                                                </tbody>\n                                            </table>\n                                        </div>\n                                    </div>\n                                </span>\n                            </div>\n                        </MediaQuery>\n                        <MediaQuery maxWidth={450}>\n                            <div>\n                                <span className=\"ml-auto card cardbody\" style={{ marginBottom: '12px', marginRight: '5px', color: 'black' }}>\n                                    <div className=\"card-body\" style={{ padding: '10px' }}>\n                                        <div className=\"center\">\n                                            <table style={{ width: \"900px\" }}>\n                                                <thead className=\"textBlackSmall\" style={{ color: 'black' }}>\n                                                    <tr>\n                                                        <th scope=\"col\" width=\"120\">BAVA Balance</th>\n                                                    </tr>\n                                                </thead>\n                                                <tbody className=\"textBlackSmall\" style={{ color: 'black' }}>\n                                                    <tr>\n                                                        <td scope=\"col\" width=\"120\"><div>{(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.bavaTokenBalance, 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 3 })} BAVA / $ {(window.web3Ava.utils.fromWei(this.props.bavaTokenBalance, 'Ether') * this.props.BAVAPrice).toLocaleString('en-US', { maximumFractionDigits: 0 })}</div>\n                                                            : <div className=\"\"><div className=\"lds-facebook mb-2\"><div></div><div></div><div></div></div></div>}</div></td>\n                                                    </tr>\n                                                </tbody>\n                                                <thead className=\"textBlackSmall\" style={{ color: 'black' }}>\n                                                    <tr>\n                                                        <th scope=\"col\" width=\"120\">Staked BAVA</th>\n                                                    </tr>\n                                                </thead>\n                                                <tbody className=\"textBlackSmall\" style={{ color: 'black' }}>\n                                                    <tr>\n                                                        <td scope=\"col\" width=\"120\"><div>{(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.stakeAmount, 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 3 })} BAVA / $ {(window.web3Ava.utils.fromWei(this.props.stakeAmount, 'Ether') * this.props.BAVAPrice).toLocaleString('en-US', { maximumFractionDigits: 0 })}</div>\n                                                            : <div className=\"\"><div className=\"lds-facebook mb-2\"><div></div><div></div><div></div></div></div>}</div></td>\n                                                    </tr>\n                                                </tbody>\n                                                <thead className=\"textBlackSmall mt-2\" style={{ color: 'black' }}>\n                                                    <tr>\n                                                        <th scope=\"col\" width=\"120\">Unclaimed Reward</th>\n                                                    </tr>\n                                                </thead>\n                                                <tbody className=\"textBlackSmall\" style={{ color: 'black' }}>\n                                                    <tr>\n                                                        <td scope=\"col\" width=\"120\"><div>{(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.earnedAmount, 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 3 })} BAVA / $ {(window.web3Ava.utils.fromWei(this.props.earnedAmount, 'Ether') * this.props.BAVAPrice).toLocaleString('en-US', { maximumFractionDigits: 0 })}</div>\n                                                            : <div className=\"\"><div className=\"lds-facebook mb-2\"><div></div><div></div><div></div></div></div>}</div></td>\n                                                    </tr>\n                                                </tbody>\n                                            </table>\n                                        </div>\n                                    </div>\n                                </span>\n                                <span className=\"mr-auto card cardbody\" style={{ marginBottom: '12px', marginLeft: '5px', color: 'black' }}>\n                                    <div className=\"card-body\" style={{ padding: '10px' }}>\n                                        <div className=\"center \">\n                                            <table style={{ width: \"900px\" }}>\n                                                <thead className=\"textBlackSmall\" style={{ color: 'black' }}>\n                                                    <tr>\n                                                        <th scope=\"col\" width=\"120\">Total BAVA Staked</th>\n                                                    </tr>\n                                                </thead>\n                                                <tbody className=\"textBlackSmall\" style={{ color: 'black' }}>\n                                                    <tr>\n                                                        <td scope=\"col\" width=\"120\"><div>{parseFloat(window.web3Ava.utils.fromWei(this.props.totalStake, 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 0 })} BAVA / $ {(window.web3Ava.utils.fromWei(this.props.totalStake, 'Ether') * this.props.BAVAPrice).toLocaleString('en-US', { maximumFractionDigits: 0 })}</div></td>\n                                                    </tr>\n                                                </tbody>\n\n                                                <thead className=\"textBlackSmall\" style={{ color: 'black' }}>\n                                                    <tr>\n                                                        <th scope=\"col\" width=\"120\">APR</th>\n                                                    </tr>\n                                                </thead>\n                                                <tbody className=\"textBlackSmall\" style={{ color: 'black' }}>\n                                                    <tr>\n                                                        <td scope=\"col\" width=\"120\"><div>{parseFloat(this.props.rewardRate / this.props.totalStake * 31556926 * 100).toLocaleString('en-US', { maximumFractionDigits: 0 })}%</div></td>\n                                                    </tr>\n                                                </tbody>\n                                                <thead className=\"textBlackSmall\" style={{ color: 'black' }}>\n                                                    <tr>\n                                                        <th scope=\"col\" width=\"120\">Your Pool%</th>\n                                                    </tr>\n                                                </thead>\n                                                <tbody className=\"textBlackSmall\" style={{ color: 'black' }}>\n                                                    <tr>\n                                                        <td scope=\"col\" width=\"120\"><div>{(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ? <div>{parseFloat(this.props.stakeAmount / this.props.totalStake * 100).toLocaleString('en-US', { maximumFractionDigits: 5 })}% </div>\n                                                            : <div className=\"\"><div className=\"lds-facebook mb-2\"><div></div><div></div><div></div></div></div>}</div></td>\n                                                    </tr>\n                                                </tbody>\n                                            </table>\n                                        </div>\n                                    </div>\n                                </span>\n                            </div>\n                        </MediaQuery>\n                    </MediaQuery>\n                </MediaQuery>\n\n\n                <div className=\"ml-auto mr-auto card cardbody\" style={{ marginBottom: '12px', color: 'black' }}>\n                    <div className=\"card-body \">\n                        {this.props.wallet || this.props.walletConnect ?\n                            <div className=\"card-body\" style={{ padding: '10px' }}>\n                                <div className=\"center\">\n                                    {this.props.accountLoading ?\n                                        <div>\n                                            {this.state.stakeOpen ?\n                                                <Buttons className=\"textDarkMedium1 cell\" variant=\"outline\" size=\"lg\" style={{ cursor: 'pointer', width: '160px', margin: '5px', marginLeft: '25px', marginRight: '25px' }} onClick={async () => {\n                                                    await this.setStake(true)\n                                                }}>Stake</Buttons> : <Buttons className=\"textDarkMedium cell\" variant=\"outline\" size=\"lg\" style={{ width: '160px', margin: '5px', marginLeft: '25px', marginRight: '25px' }} onClick={async () => {\n                                                    await this.setStake(true)\n                                                }}>Stake</Buttons>}\n                                            {this.state.unstakeOpen ?\n                                                <Buttons className=\"textDarkMedium1 cell\" variant=\"outline\" size=\"lg\" style={{ cursor: 'pointer', width: '160px', margin: '5px', marginLeft: '25px', marginRight: '25px' }} onClick={async () => {\n                                                    await this.setUnstake(true)\n                                                }}>Unstake</Buttons> : <Buttons className=\"textDarkMedium cell\" variant=\"outline\" size=\"lg\" style={{ width: '160px', margin: '5px', marginLeft: '25px', marginRight: '25px' }} onClick={async () => {\n                                                    await this.setUnstake(true)\n                                                }}>Unstake</Buttons>}\n                                            <Buttons className=\"textDarkMedium cell\" variant=\"outline\" size=\"lg\" style={{ width: '160px', margin: '5px', marginLeft: '25px', marginRight: '25px' }} onClick={async () => {\n                                                if (this.props.earnedAmount > 0) {\n                                                    await this.props.getReward()\n                                                } else {\n                                                    alert(\"No unclaimed reward\")\n                                                }\n                                            }}>Claim Reward</Buttons>\n                                            <Buttons className=\"textDarkMedium cell\" variant=\"outline\" size=\"lg\" style={{ width: '160px', margin: '5px', marginLeft: '25px', marginRight: '25px' }} onClick={async () => {\n                                                if (this.props.stakeAmount > 0) {\n                                                    await this.props.exit()\n                                                } else {\n                                                    alert(\"No staked BAVA token\")\n                                                }\n                                            }}>Claim & Unstake</Buttons>\n                                        </div> :\n                                        <div>\n                                            <Buttons className=\"textDarkMedium1 cell\" variant=\"outline\" size=\"lg\" style={{ width: '160px', margin: '5px', marginLeft: '25px', marginRight: '25px' }} >Stake</Buttons>\n                                            <Buttons className=\"textDarkMedium1 cell\" variant=\"outline\" size=\"lg\" style={{ width: '160px', margin: '5px', marginLeft: '25px', marginRight: '25px' }} >Unstake</Buttons>\n                                            <Buttons className=\"textDarkMedium1 cell\" variant=\"outline\" size=\"lg\" style={{ width: '160px', margin: '5px', marginLeft: '25px', marginRight: '25px' }} >Claim Reward</Buttons>\n                                            <Buttons className=\"textDarkMedium1 cell\" variant=\"outline\" size=\"lg\" style={{ width: '160px', margin: '5px', marginLeft: '25px', marginRight: '25px' }} >Claim & Unstake</Buttons>\n                                        </div>}\n                                </div>\n                            </div> :\n                            <div className=\"card-body\">\n                                <div className=\"center\">\n                                    {this.props.farmloading ?\n                                        <div>\n                                            <Popup trigger={open => (<Buttons className=\"textDarkMedium\" variant=\"outline\" size=\"lg\" >Connect to display</Buttons>)} modal {...{ contentStyle }}>\n                                                {close => (\n                                                    <div>\n                                                        <Buttons className=\"close cell2\" style={{ background: \"#fffae6\", borderRadius: \"12px\", padding: \"2px 5px\", fontSize: \"18px\" }} onClick={close}>\n                                                            &times;\n                                                        </Buttons>\n                                                        <div className=\"textWhiteMedium mb-2\" style={{ borderBottom: \"1px Solid Gray\", padding: \"10px\" }}> Connect a Wallet </div>\n                                                        <div className=\"center mt-4 mb-2\">\n                                                            <Buttons type=\"button\" variant=\"secondary\" style={{ height: \"50px\", width: \"100%\", minWidth: \"150px\", maxWidth: \"300px\", padding: \"6px 25px\" }} onClick={async () => {\n                                                                await this.props.connectMetamask()\n                                                            }}><img src={fox} width=\"23\" height=\"23\" className=\"float-right\" alt=\"\" /><span className=\"float-left\">Metamask</span></Buttons>\n                                                        </div>\n                                                        <div className=\"center mt-2 mb-2\">\n                                                            <Buttons type=\"button\" variant=\"secondary\" style={{ height: \"50px\", width: \"100%\", minWidth: \"150px\", maxWidth: \"300px\", padding: \"6px 25px\" }} onClick={async () => {\n                                                                await this.props.connectCoin98()\n                                                            }}>\n                                                                <ImgNextGen\n                                                                    srcWebp={coin98}\n                                                                    width=\"23\" height=\"23\" className=\"float-right\" alt=\"\"\n                                                                />\n                                                                <span className=\"float-left\">Coin98</span></Buttons>\n                                                        </div>\n                                                        <div className=\"center mt-2 mb-4\">\n                                                            <Buttons type=\"button\" variant=\"secondary\" style={{ height: \"50px\", width: \"100%\", minWidth: \"150px\", maxWidth: \"300px\", padding: \"6px 25px\" }} onClick={async () => {\n                                                                await this.props.mobileWalletConnect()\n                                                            }}><img src={walletconnectlogo} width=\"26\" height=\"23\" className=\"float-right\" alt=\"\" /><span className=\"float-left\">WalletConnect</span></Buttons>\n                                                        </div>\n                                                    </div>\n                                                )}\n                                            </Popup>\n                                        </div>\n                                        : <Buttons className=\"textDarkMedium1\" variant=\"outline\" size=\"lg\" >Connect to display</Buttons>\n                                    }\n                                </div>\n                            </div>\n                        }\n                    </div>\n                </div>\n\n                {/* ******************************************************* PopUp deposit and withdraw menu ******************************************************* */}\n\n                {(this.props.wallet || this.props.walletConnect) && (this.state.stakeOpen || this.state.unstakeOpen) ?\n                    <div className=\"\">\n                        <span className=\"ml-auto mr-auto card cardbody\">\n                            <div className=\"card-body\" style={{ padding: '0.5rem' }}>\n                                <div>\n                                    {this.state.stakeOpen ?\n                                        <div className=\"float-right mr-2 mt-1 mb-2\" style={{ color: 'black', fontSize: '16px' }}>Available to stake: {parseFloat(window.web3Ava.utils.fromWei(this.props.bavaTokenBalance, 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 5 })}</div>\n                                        :\n                                        <div className=\"float-right mr-2 mt-1 mb-2\" style={{ color: 'black', fontSize: '16px' }}>Available to unstake: {parseFloat(window.web3Ava.utils.fromWei(this.props.stakeAmount, 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 5 })}</div>\n                                    }\n                                    <form onSubmit={(event) => {\n                                        event.preventDefault()\n                                        if (this.state.txValidAmount === false) {\n                                            alert(\"Invalid input! PLease check your input again\")\n                                        } else {\n                                            let amount\n                                            amount = this.input.value.toString()\n                                            amount = window.web3Ava.utils.toWei(amount, 'Ether')\n\n                                            if (this.state.stakeOpen === true && this.state.unstakeOpen === false) {\n                                                this.props.stake(amount)\n                                            } else if (this.state.stakeOpen === false && this.state.unstakeOpen === true) {\n                                                this.props.unstake(amount)\n                                            }\n                                        }\n                                    }}>\n                                        <div >\n                                            <div className=\"input-group mb-3\">\n                                                {(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ?\n                                                    <input\n                                                        type=\"number\"\n                                                        id=\"inputColor\"\n                                                        step=\"any\"\n                                                        ref={(input) => { this.input = input }}\n                                                        style={{ fontSize: '18px', backgroundColor: '#fffcf0' }}\n                                                        className=\"form-control cell cardbody\"\n                                                        placeholder=\"0\"\n                                                        onKeyPress={(event) => {\n                                                            if (!/[0-9.]/.test(event.key)) {\n                                                                event.preventDefault();\n                                                            }\n                                                        }}\n                                                        onChange={(e) => {\n                                                            const value = e.target.value;\n                                                            if (this.state.stakeOpen === true) {\n                                                                this.changeHandlerApprove(value)\n                                                                this.changeHandlerDeposit(value)\n                                                            } else if (this.state.unstakeOpen === true) {\n                                                                this.changeHandlerApprove(value)\n                                                                this.changeHandlerWithdraw(value)\n                                                            }\n                                                            this.state.inputstate = value\n                                                        }}\n                                                        required />\n                                                    : <input\n                                                        type=\"number\"\n                                                        id=\"inputColor\"\n                                                        style={{ fontSize: '18px', backgroundColor: '#fffcf0', cursor: 'not-allowed' }}\n                                                        placeholder=\"0\"\n                                                        className=\"form-control cell cardbody\"\n                                                        disabled />}\n                                                <div className=\"input-group-append\" >\n                                                    <div className=\"input-group-text cardbodyLeft\" style={{ padding: '0 0.5rem' }}>\n                                                        {this.state.stakeOpen ?\n                                                            <Buttons className=\"textTransparentButton2 cell\" size=\"sm\" onClick={(event1) => {\n                                                                this.input.value = window.web3Ava.utils.fromWei(this.props.bavaTokenBalance, 'Ether')\n                                                                this.changeHandlerApprove(this.input.value)\n                                                                this.changeHandlerDeposit(this.input.value)\n                                                            }}>Max</Buttons> :\n                                                            <Buttons className=\"textTransparentButton2 cell\" size=\"sm\" onClick={(event1) => {\n                                                                this.input.value = window.web3Ava.utils.fromWei(this.props.stakeAmount, 'Ether')\n                                                                this.changeHandlerWithdraw(this.input.value)\n                                                            }}>Max</Buttons>\n                                                        }\n                                                    </div>\n                                                    <div className=\"input-group-text cardbody\" style={{ padding: '0 0.5rem' }}>\n                                                        <ImgNextGen\n                                                            srcWebp={logo}\n                                                            height='32' alt=\"\"\n                                                        />\n                                                    </div>\n                                                </div >\n                                            </div>\n                                            <div className=\"ml-2\" style={{ color: 'red' }}>{this.state.message} </div>\n\n                                            <div className=\"center\">\n                                                {this.state.stakeOpen ?\n                                                    <div>\n                                                        <span>\n                                                            {this.state.txApprovedValidAmount === true ?\n                                                                <span>\n                                                                    {bigInt(this.props.bavaTokenAllowance).value < bigInt(window.web3Ava.utils.toWei(this.input.value, 'Ether')).value ?\n                                                                        <Buttons className=\"textDarkMedium cell\" style={{ width: '120px', margin: '5px' }} onClick={(event) => {\n                                                                            this.props.approveStake()\n                                                                        }} variant=\"outline\" size=\"lg\">Approve</Buttons>\n                                                                        : <Buttons className=\"textDarkMedium1 cell\" style={{ width: '120px', margin: '5px' }} variant=\"outline\" size=\"lg\">Approved</Buttons>\n                                                                    }\n                                                                </span>\n                                                                : <Buttons className=\"textDarkMedium1 cell\" style={{ width: '120px', margin: '5px' }} variant=\"outline\" size=\"lg\">Approved</Buttons>\n                                                            }\n                                                        </span>\n                                                        <span>\n                                                            {this.state.txValidAmount ?\n                                                                <span>{bigInt(this.props.bavaTokenAllowance).value >= bigInt(window.web3Ava.utils.toWei(this.input.value, 'Ether')).value ?\n                                                                    <Buttons type=\"submit\" className=\"textDarkMedium cell\" variant=\"outline\" size=\"lg\" style={{ width: '120px', margin: '5px' }}>Confirm</Buttons>\n                                                                    : <Buttons className=\"textDarkMedium1 cell\" variant=\"outline\" size=\"lg\" style={{ width: '120px', margin: '5px' }}>Confirm</Buttons>}</span>\n                                                                : <Buttons className=\"textDarkMedium1 cell\" variant=\"outline\" size=\"lg\" style={{ width: '120px', margin: '5px' }}>Confirm</Buttons>}\n                                                        </span>\n                                                    </div>\n                                                    : <div>\n                                                        {this.state.txValidAmount ?\n                                                            <Buttons type=\"submit\" className=\"textDarkMedium cell\" variant=\"outline\" size=\"lg\" style={{ width: '120px' }}>Confirm</Buttons>\n                                                            : <Buttons className=\"textDarkMedium1 cell\" variant=\"outline\" size=\"lg\" style={{ width: '120px' }}>Confirm</Buttons>}\n                                                    </div>\n                                                }\n                                            </div>\n                                        </div>\n                                    </form>\n                                </div>\n                            </div>\n                        </span>\n                    </div> :\n                    <div></div>}\n                <br /><br /><br /><br /><br /><Footer />\n            </div >\n        );\n    }\n}\n\nexport default Stake;\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport exlink from './images/link.webp'\r\nimport Buttons from 'react-bootstrap/Button'\r\nimport { BsFillQuestionCircleFill } from 'react-icons/bs';\r\nimport Popup from 'reactjs-popup';\r\nimport 'reactjs-popup/dist/index.css';\r\nimport Deposit from './Deposit'\r\nimport './App.css';\r\nimport Footer from './Footer'\r\n\r\nclass TraderJoe extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"content\" className=\"mt-3\" style={{ margin: \"0\", color: '#ff9a04' }}>\r\n                <div >\r\n                    <div className=\"ml-auto mr-auto card mb-3 cardbody\" style={{ width: '1000px', height: '170px', color: 'black' }}>\r\n                        {this.props.wallet || this.props.walletConnect ?\r\n                            <div className=\"card-body\">\r\n                                <div className='mb-5'>\r\n                                    <span className=\"float-left\" style={{ color: 'black', fontSize: '16px' }}>\r\n                                        Your BAVA Balance<br /><b>{parseFloat(window.web3Ava.utils.fromWei(this.props.bavaTokenBalance, 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 0 })} BAVA / $ {(window.web3Ava.utils.fromWei(this.props.bavaTokenBalance, 'Ether') * this.props.BAVAPrice).toLocaleString('en-US', { maximumFractionDigits: 0 })}</b>\r\n                                    </span>\r\n                                    <span className=\"float-right\" style={{ color: 'black', fontSize: '16px' }}>\r\n                                        Your Locked BAVA<br /><b>{parseFloat(window.web3Ava.utils.fromWei(this.props.lockedBavaTokenBalance, 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 0 })} BAVA / $ {(window.web3Ava.utils.fromWei(this.props.lockedBavaTokenBalance, 'Ether') * this.props.BAVAPrice).toLocaleString('en-US', { maximumFractionDigits: 0 })}</b>\r\n                                    </span>\r\n                                </div><br /><br />\r\n                                <div>\r\n                                    <span className=\"float-left\" style={{ color: 'black', fontSize: '16px' }}>Total pending harvest&nbsp;&nbsp;\r\n                                        <Popup\r\n                                            trigger={open => (\r\n                                                <span><BsFillQuestionCircleFill size={13} /></span>\r\n                                            )}\r\n                                            on=\"hover\"\r\n                                            offsetY={-10}\r\n                                            offsetX={10}\r\n                                            position=\"right center\"\r\n                                        ><span className=\"textInfo\"><small>Total BAVA tokens earned acrossed all farm </small></span>\r\n                                        </Popup>\r\n                                    </span><br />\r\n                                    <span className=\"float-left \" style={{ color: 'black', fontSize: '16px' }}><b>\r\n                                        {parseFloat(window.web3Ava.utils.fromWei(this.props.totalpendingReward, 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 0 })} BAVA / $ {(window.web3Ava.utils.fromWei(this.props.totalpendingReward, 'Ether') * this.props.BAVAPrice).toLocaleString('en-US', { maximumFractionDigits: 0 })}</b>\r\n                                    </span>\r\n                                    <span className=\"float-right \">\r\n                                        <span><small>All pools compound at an optimal rate</small></span>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            :\r\n                            <div className=\"card-body \">\r\n                                <span>\r\n                                    <span className=\"float-left\" style={{ color: 'silver' }}>\r\n                                        Your BAVA Balance<br />\r\n                                        <div style={{ color: 'silver' }}><b>0 BAVA</b></div>\r\n                                    </span>\r\n                                    <span className=\"float-right\" style={{ color: 'silver' }}>\r\n                                        Your Locked BAVA<br />\r\n                                        <div style={{ color: 'silver' }}><b>0 BAVA</b></div>\r\n                                    </span>\r\n                                    <br /><br />\r\n                                </span>\r\n                                <span className=\"center mb-1\">\r\n                                    {this.props.farmloading ?\r\n                                        <Buttons className=\"textDarkMedium\" variant=\"outline\" size=\"lg\" onClick={async () => {\r\n                                            await this.props.connectMetamask()\r\n                                        }}>Connect to display</Buttons> :\r\n                                        <Buttons className=\"textDarkMedium1\" variant=\"outline\" size=\"lg\" >Connect to display</Buttons>\r\n                                    }\r\n                                </span>\r\n                                <span>\r\n                                    <span className=\"float-left\" style={{ color: 'silver' }}>Total pending harvest&nbsp;&nbsp;\r\n                                        <Popup\r\n                                            trigger={open => (\r\n                                                <span><BsFillQuestionCircleFill size={13} /></span>\r\n                                            )}\r\n                                            on=\"hover\"\r\n                                            offsetY={-10}\r\n                                            offsetX={10}\r\n                                            position=\"right center\"\r\n                                        ><span className=\"textInfo\"><small>Total BAVA tokens earned acrossed all farm </small></span>\r\n                                        </Popup>\r\n                                    </span><br />\r\n                                    <span className=\"float-left \">\r\n                                        <div style={{ color: 'silver' }}><b>0 BAVA</b></div>\r\n                                    </span>\r\n                                    <span className=\"float-right\" style={{ color: 'silver' }}>\r\n                                        <small><span>All pools compound at an optimal rate</span></small>\r\n                                    </span>\r\n                                </span>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n                {/* <div className=\"textMiddle center\" ><b><big>BAVA Price: $ {this.props.BAVAPrice}&nbsp;&nbsp;\r\n                    <Popup\r\n                        trigger={open => (\r\n                            <span><BsFillQuestionCircleFill size={13} /></span>\r\n                        )}\r\n                        on=\"hover\"\r\n                        offsetY={-10}\r\n                        offsetX={10}\r\n                        position=\"right center\"\r\n                    ><span className=\"textInfo\"><small>Initial BAVA token price to USD will be fixed at the rate $ 0.10 </small></span>\r\n                    </Popup></big></b></div>\r\n\r\n                <div className=\"center\" style={{ color: 'grey' }}><small>&nbsp;! Attention:&nbsp;Be sure to read <a href=\"https://baklavaspace.gitbook.io/\" target=\"_blank\">baklavaspace.gitbook</a> before using the pools so you are familiar with protocol risks and fees!</small></div> */}\r\n               <div className=\"center mt-4\" style={{ color: 'black' }}><big><b>&nbsp;! Attention:&nbsp;Please use Version 2 farm for higher yield!&nbsp;&nbsp;&gt;&gt;&nbsp;<Link to=\"/menu/v2/\"><Buttons className=\"textDarkMedium\" variant=\"outline\" size=\"sm\" >Switch to V2</Buttons></Link></b></big></div>\r\n            \r\n\r\n                <div className=\"ml-auto mr-auto mt-3\" style={{ width: '1000px' }}>\r\n                    <div className=\"\">\r\n                        <div className=\"textMiddleBold1 float-left\" style={{ marginLeft: '2px' }}><big>Select Platform</big></div>\r\n                        <div className=\"textMiddleBold1 float-right\" style={{ marginRight: '5px' }}><big>TVL $ {parseFloat(this.props.totalTVL).toLocaleString('en-US', { maximumFractionDigits: 0 })}</big></div><br /><br />\r\n                        <span className=\"float-left\">\r\n                            <ButtonGroup>\r\n                                <Buttons variant=\"text\" size=\"small\" color=\"inherit\" component={Link} to=\"/menu/\">Pangolin</Buttons>\r\n                                <Buttons variant=\"outlined\" size=\"small\" color=\"inherit\" component={Link} to=\"/menu/traderjoe/\">Trader Joe</Buttons>\r\n                            </ButtonGroup>\r\n                        </span>\r\n                        {/* <span className=\"float-right mr-4\">\r\n                            <ButtonGroup>\r\n                                <Button variant=\"text\" size=\"small\" color=\"inherit\" >Sort by</Button>\r\n                            </ButtonGroup>\r\n                        </span> */}\r\n                    </div>\r\n                    <br /><br />\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    <div>\r\n                        {this.props.farmloading ?\r\n                            <div className=\"\" style={{ width: '1000px' }}>\r\n                                {this.props.bavaPoolSegmentInfo[1].map((bavaPoolSegmentInfo, key) => {\r\n                                    let i = this.props.bavaPoolSegmentInfo[1].indexOf(bavaPoolSegmentInfo)\r\n                                    return (\r\n                                        <div key={key}>\r\n                                            <div>\r\n                                                <div className=\"card mb-3 cardbody\">\r\n                                                    <div className=\"card-body\" style={{ padding: '1rem' }}>\r\n                                                        <div>\r\n                                                            <div>\r\n                                                                <div className=\"float-left\">\r\n                                                                    <div className=\"textMiddle\"><b>{this.props.bavaPoolSegmentInfo[1][i].lpName}{this.props.bavaPoolSegmentInfo[1][i].status}</b></div>\r\n                                                                    <div className=\"textGrey exLink0\" onClick={() => {\r\n                                                                        window.open(this.props.bavaPoolSegmentInfo[1][i].projectLink, '_blank')\r\n                                                                    }}>Uses: {this.props.bavaPoolSegmentInfo[1][i].platform} <img src={exlink} style={{ marginBottom: \"3px\" }} height='12' alt=\"\" /></div>\r\n                                                                    <div className=\"textGrey exLink0\" onClick={() => {\r\n                                                                        window.open(this.props.bavaPoolSegmentInfo[1][i].getLPLink, '_blank')\r\n                                                                    }}>Get {this.props.bavaPoolSegmentInfo[1][i].lpName} <img src={exlink} style={{ marginBottom: \"3px\" }} height='12' alt=\"\" /></div>\r\n                                                                    <div className=\"textGrey exLink0\" onClick={() => {\r\n                                                                        window.open(this.props.bavaContract, '_blank')\r\n                                                                    }}>View On Explorer <img src={exlink} style={{ marginBottom: \"3px\" }} height='12' alt=\"\" /></div>\r\n                                                                </div>\r\n                                                                <div className=\"float-right mr-auto\">\r\n                                                                    <table>\r\n                                                                        <thead className=\"textBlackSmall\" style={{ color: 'black' }}>\r\n                                                                            <tr>\r\n                                                                                <th scope=\"col\" width=\"140\">Wallet</th>\r\n                                                                                <th scope=\"col\" width=\"140\">Deposited</th>\r\n                                                                                <th scope=\"col\">Growth</th>\r\n                                                                                <th scope=\"col\">APR&nbsp;<Popup\r\n                                                                                    trigger={open => (<span><BsFillQuestionCircleFill style={{ marginBottom: \"2px\" }} size={10} /></span>)}\r\n                                                                                    on=\"hover\"\r\n                                                                                    offsetY={-8}\r\n                                                                                    offsetX={5}\r\n                                                                                    position=\"right center\"\r\n                                                                                    contentStyle={{ width: '150px' }}\r\n                                                                                ><div className=\"textInfo\">APR Breakdown: </div><br />\r\n                                                                                    <div className=\"textInfo\">Baklava   : {parseFloat(this.props.bavaapr[1][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })} %</div><br />\r\n                                                                                    <div className=\"textInfo\">TraderJoe : {parseFloat(this.props.bavaPoolSegmentInfo[1][i].total3rdPartyAPR).toLocaleString('en-US', { maximumFractionDigits: 0 })} %</div>\r\n                                                                                </Popup></th>\r\n                                                                                <th scope=\"col\">APY <Popup\r\n                                                                                    trigger={open => (<span><BsFillQuestionCircleFill style={{ marginBottom: \"2px\" }} size={10} /></span>)}\r\n                                                                                    on=\"hover\"\r\n                                                                                    offsetY={-8}\r\n                                                                                    offsetX={5}\r\n                                                                                    position=\"right center\"\r\n                                                                                    contentStyle={{ width: '150px' }}\r\n                                                                                ><div className=\"textInfo\"><small>APY are calculated based on the compound APR number excluded locked reward.</small></div><br />\r\n                                                                                    <div className=\"textInfo\"><small>The value shown is based on daily compounding frequency.</small></div>\r\n                                                                                </Popup></th>\r\n                                                                                <th scope=\"col\">TVL</th>\r\n                                                                            </tr>\r\n                                                                        </thead>\r\n                                                                        <tbody className=\"textGrey\">\r\n                                                                            <tr>\r\n                                                                                <td className=\"\">{(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.bavaLpBalanceAccount[1][i]), 'Ether').toLocaleString('en-US', { maximumFractionDigits: 18 })}</div> : <div className=\"center\">\r\n                                                                                    <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>}</td>\r\n                                                                                <td className=\"\">{(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.bavaUserSegmentInfo[1][i], 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 18 })}</div> : <div className=\"center\">\r\n                                                                                    <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\r\n                                                                                <td className=\"\">{this.props.aprloading ? <div>{parseFloat(this.props.bavaReturnRatio[1][i]).toLocaleString('en-US', { maximumFractionDigits: 5 })}</div> : <div className=\"center\">\r\n                                                                                    <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\r\n                                                                                <td className=\"\">{this.props.aprloading ? <div>{parseFloat(this.props.bavaapr[1][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })}%</div> : <div className=\"center\">\r\n                                                                                    <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\r\n                                                                                <td className=\"\">{this.props.aprloading ? <div>{parseFloat(this.props.bavaapyDaily[1][i])>1000000 ? <div>&#x3e;100,000%</div> : <div>{parseFloat(this.props.bavaapyDaily[1][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })}%</div>}</div> : <div className=\"center\">\r\n                                                                                    <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>}</td>\r\n                                                                                <td className=\"\">$ {parseFloat(this.props.bavatvl[1][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })} </td>\r\n                                                                            </tr>\r\n                                                                        </tbody>\r\n                                                                    </table>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <br /><br /><br /><br />\r\n                                                            {this.props.farmV1Open[i] ?\r\n                                                                <div>\r\n                                                                    <div>\r\n                                                                        <Buttons variant=\"outline-secondary\" size=\"sm\" style={{ width: '60px' }} onClick={() => {\r\n                                                                            this.props.setI(i, false, 1)\r\n                                                                        }}>Close</Buttons>&nbsp;&nbsp;&nbsp;</div>\r\n                                                                    {this.props.wallet || this.props.walletConnect ? <div className=\"borderTop \"><div className=\"rowC mt-3\">\r\n                                                                        <div className=\"card cardbody float-left mr-3\" style={{ width: '300px' }}>\r\n                                                                            <div className=\"card-body\" style={{ padding: '0.5rem' }}>\r\n                                                                                <span className=\"float-left\" style={{ color: 'black' }}><small>BAVA earned</small></span><br />\r\n                                                                                <span className=\"float-left\" style={{ color: 'black', marginTop: '8px' }}><small>{this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.bavaPendingSegmentReward[1][i], 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 0 })}</div> :\r\n                                                                                    <div className=\"ml-3 lds-facebook\"><div></div><div></div><div></div></div>}</small></span>\r\n                                                                                <span className=\"float-right\">\r\n                                                                                    <Buttons\r\n                                                                                        variant=\"success\"\r\n                                                                                        size=\"sm\"\r\n                                                                                        style={{ minWidth: '80px' }}\r\n                                                                                        onClick={(event) => {\r\n                                                                                            event.preventDefault()\r\n                                                                                            this.props.harvest(i, 1, 1)\r\n                                                                                        }}>\r\n                                                                                        Harvest\r\n                                                                                    </Buttons></span>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        <div className=\"float-right\">\r\n                                                                            <span className=\"card cardbody float-right\" style={{ width: '650px' }}>\r\n                                                                                <div className=\"card-body\" style={{ padding: '0.5rem' }}>\r\n                                                                                    {this.props.bavaLpSegmentAllowance[1][i] > 2000000000000000000000000000 ?\r\n                                                                                        <div><Deposit\r\n                                                                                            lpBalanceAccount={this.props.bavaLpBalanceAccount}\r\n                                                                                            poolSegmentInfo={this.props.bavaPoolSegmentInfo}\r\n                                                                                            userSegmentInfo={this.props.bavaUserSegmentInfo}\r\n                                                                                            i={i}\r\n                                                                                            n='1'\r\n                                                                                            v='1'\r\n                                                                                            deposit={this.props.deposit}\r\n                                                                                            withdraw={this.props.withdraw}\r\n                                                                                        /></div>\r\n                                                                                        :\r\n                                                                                        <div>\r\n                                                                                            <span className=\"float-left \" style={{ color: 'black' }}><small>Enable Pool</small></span>\r\n                                                                                            <Buttons className=\"btn-block\"\r\n                                                                                                variant=\"outline-primary\"\r\n                                                                                                size=\"sm\"\r\n                                                                                                style={{ minWidth: '80px' }}\r\n                                                                                                onClick={(event) => {\r\n                                                                                                    event.preventDefault()\r\n                                                                                                    this.props.approve(i, 1, 1)\r\n                                                                                                }}>\r\n                                                                                                Approve\r\n                                                                                            </Buttons>\r\n                                                                                        </div>}\r\n                                                                                </div>\r\n                                                                            </span>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    </div> :\r\n                                                                        <div className=\"center borderTop\" >\r\n                                                                            <span className=\"mt-3\" style={{ color: 'black' }}><small>Wallet Connection to Avalanche required</small></span>\r\n                                                                        </div>}\r\n                                                                </div> :\r\n                                                                <div>\r\n                                                                    <Buttons variant=\"outline-secondary\" size=\"sm\" style={{ width: '60px' }} onClick={() => {\r\n                                                                        this.props.setI(i, true, 1)\r\n                                                                    }}><b>Open</b></Buttons></div>}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                {this.props.poolSegmentInfo[1].map((poolSegmentInfo, key) => {\r\n                                    let i = this.props.poolSegmentInfo[1].indexOf(poolSegmentInfo)\r\n                                    return (\r\n                                        <div key={key}>\r\n                                            {this.props.poolSegmentInfo[1][i].lpName == \"AVAX-JOE\" ? <div></div> :\r\n                                                <div>\r\n                                                    <div className=\"card mb-3 cardbody\">\r\n                                                        <div className=\"card-body\" style={{ padding: '1rem' }}>\r\n                                                            <div>\r\n                                                                <div>\r\n                                                                    <div className=\"float-left\">\r\n                                                                        <div className=\"textMiddle\"><b>{this.props.poolSegmentInfo[1][i].lpName}{this.props.poolSegmentInfo[1][i].status}</b></div>\r\n                                                                        <div className=\"textGrey exLink0\" onClick={() => {\r\n                                                                            window.open(this.props.poolSegmentInfo[1][i].projectLink, '_blank')\r\n                                                                        }}>Uses: {this.props.poolSegmentInfo[1][i].platform} <img src={exlink} style={{ marginBottom: \"3px\" }} height='12' alt=\"\" /></div>\r\n                                                                        <div className=\"textGrey exLink0\" onClick={() => {\r\n                                                                            window.open(this.props.poolSegmentInfo[1][i].getLPLink, '_blank')\r\n                                                                        }}>Get {this.props.poolSegmentInfo[1][i].lpName} <img src={exlink} style={{ marginBottom: \"3px\" }} height='12' alt=\"\" /></div>\r\n                                                                        <div className=\"textGrey exLink0\" onClick={() => {\r\n                                                                            window.open(this.props.bavaContract, '_blank')\r\n                                                                        }}>View On Explorer <img src={exlink} style={{ marginBottom: \"3px\" }} height='12' alt=\"\" /></div>\r\n                                                                    </div>\r\n                                                                    <div className=\"float-right mr-auto\">\r\n                                                                        <table>\r\n                                                                            <thead className=\"textBlackSmall\" style={{ color: 'black' }}>\r\n                                                                                <tr>\r\n                                                                                    <th scope=\"col\" width=\"140\">Wallet</th>\r\n                                                                                    <th scope=\"col\" width=\"140\">Deposited</th>\r\n                                                                                    <th scope=\"col\">Growth</th>\r\n                                                                                    <th scope=\"col\">APR&nbsp;<Popup\r\n                                                                                        trigger={open => (<span><BsFillQuestionCircleFill style={{ marginBottom: \"2px\" }} size={10} /></span>)}\r\n                                                                                        on=\"hover\"\r\n                                                                                        offsetY={-8}\r\n                                                                                        offsetX={5}\r\n                                                                                        position=\"right center\"\r\n                                                                                        contentStyle={{ width: '150px' }}\r\n                                                                                    ><div className=\"textInfo\">APR Breakdown: </div><br />\r\n                                                                                        <div className=\"textInfo\">Baklava   : {parseFloat(this.props.apr[1][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })} %</div><br />\r\n                                                                                        <div className=\"textInfo\">TraderJoe : {parseFloat(this.props.poolSegmentInfo[1][i].total3rdPartyAPR).toLocaleString('en-US', { maximumFractionDigits: 0 })} %</div>\r\n                                                                                    </Popup></th>\r\n                                                                                    <th scope=\"col\">APY <Popup\r\n                                                                                    trigger={open => (<span><BsFillQuestionCircleFill style={{ marginBottom: \"2px\" }} size={10} /></span>)}\r\n                                                                                    on=\"hover\"\r\n                                                                                    offsetY={-8}\r\n                                                                                    offsetX={5}\r\n                                                                                    position=\"right center\"\r\n                                                                                    contentStyle={{ width: '150px' }}\r\n                                                                                ><div className=\"textInfo\"><small>APY are calculated based on the compound APR number excluded locked reward.</small></div><br />\r\n                                                                                    <div className=\"textInfo\"><small>The value shown is based on daily compounding frequency.</small></div>\r\n                                                                                </Popup></th>\r\n                                                                                    <th scope=\"col\">TVL</th>\r\n                                                                                </tr>\r\n                                                                            </thead>\r\n                                                                            <tbody className=\"textGrey\">\r\n                                                                                <tr>\r\n                                                                                    <td className=\"\">{(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.lpBalanceAccount[1][i], 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 18 })}</div> : <div className=\"center\">\r\n                                                                                        <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>}</td>\r\n                                                                                    <td className=\"\">{(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.userSegmentInfo[1][i], 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 18 })}</div> : <div className=\"center\">\r\n                                                                                        <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\r\n                                                                                    <td className=\"\">{this.props.aprloading ? <div>{parseFloat(this.props.returnRatio[1][i]).toLocaleString('en-US', { maximumFractionDigits: 5 })}</div> : <div className=\"center\">\r\n                                                                                        <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\r\n                                                                                    <td className=\"\">{this.props.aprloading ? <div>{(parseFloat(this.props.apr[1][i]) + + parseFloat(this.props.poolSegmentInfo[1][i].total3rdPartyAPR)).toLocaleString('en-US', { maximumFractionDigits: 0 })}%</div> : <div className=\"center\">\r\n                                                                                        <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\r\n                                                                                    <td className=\"\">{this.props.aprloading ? <div>{parseFloat(this.props.apyDaily[1][i])>1000000 ? <div>&#x3e;100,000%</div> : <div>{parseFloat(this.props.apyDaily[1][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })}%</div>}</div> : <div className=\"center\">\r\n                                                                                        <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>}</td>\r\n                                                                                    <td className=\"\">$ {parseFloat(this.props.tvl[1][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })} </td>\r\n                                                                                </tr>\r\n                                                                            </tbody>\r\n                                                                        </table>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <br /><br /><br /><br />\r\n                                                                {this.props.farmV2Open[i] ?\r\n                                                                    <div>\r\n                                                                        <div>\r\n                                                                            <Buttons variant=\"outline-secondary\" size=\"sm\" style={{ width: '60px' }} onClick={() => {\r\n                                                                                // this.props.setTrigger(true)\r\n                                                                                this.props.setI(i, false, 2)\r\n                                                                            }}>Close</Buttons>&nbsp;&nbsp;&nbsp;</div>\r\n                                                                        {this.props.wallet || this.props.walletConnect ? <div className=\"borderTop \"><div className=\"rowC mt-3\">\r\n                                                                            <div className=\"card cardbody float-left mr-3\" style={{ width: '300px' }}>\r\n                                                                                <div className=\"card-body\" style={{ padding: '0.5rem' }}>\r\n                                                                                    <span className=\"float-left\" style={{ color: 'black' }}><small>BAVA earned</small></span><br />\r\n                                                                                    <span className=\"float-left\" style={{ color: 'black', marginTop: '8px' }}><small>{this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.pendingSegmentReward[1][i], 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 0 })}</div> :\r\n                                                                                        <div className=\"ml-3 lds-facebook\"><div></div><div></div><div></div></div>}</small></span>\r\n                                                                                    <span className=\"float-right\">\r\n                                                                                        <Buttons\r\n                                                                                            variant=\"success\"\r\n                                                                                            size=\"sm\"\r\n                                                                                            style={{ minWidth: '80px' }}\r\n                                                                                            onClick={(event) => {\r\n                                                                                                event.preventDefault()\r\n                                                                                                this.props.harvest(i, 1, 2)\r\n                                                                                            }}>\r\n                                                                                            Harvest\r\n                                                                                        </Buttons></span>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <div className=\"float-right\">\r\n                                                                                <span className=\"card cardbody float-right\" style={{ width: '650px' }}>\r\n                                                                                    <div className=\"card-body\" style={{ padding: '0.5rem' }}>\r\n                                                                                        {this.props.lpSegmentAllowance[1][i] > 2000000000000000000000000000 ?\r\n                                                                                            <div><Deposit\r\n                                                                                                lpBalanceAccount={this.props.lpBalanceAccount}\r\n                                                                                                poolSegmentInfo={this.props.poolSegmentInfo}\r\n                                                                                                userSegmentInfo={this.props.userSegmentInfo}\r\n                                                                                                i={i}\r\n                                                                                                n='1'\r\n                                                                                                v='2'\r\n                                                                                                deposit={this.props.deposit}\r\n                                                                                                withdraw={this.props.withdraw}\r\n                                                                                                approve={this.props.approve}\r\n                                                                                            /></div>\r\n                                                                                            :\r\n                                                                                            <div>\r\n                                                                                                <span className=\"float-left \" style={{ color: 'black' }}><small>Enable Pool</small></span>\r\n                                                                                                <Buttons className=\"btn-block\"\r\n                                                                                                    variant=\"outline-primary\"\r\n                                                                                                    size=\"sm\"\r\n                                                                                                    style={{ minWidth: '80px' }}\r\n                                                                                                    onClick={(event) => {\r\n                                                                                                        event.preventDefault()\r\n                                                                                                        this.props.approve(i, 1, 2)\r\n                                                                                                    }}>\r\n                                                                                                    Approve\r\n                                                                                                </Buttons>\r\n                                                                                            </div>}\r\n                                                                                    </div>\r\n                                                                                </span>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        </div> :\r\n                                                                            <div className=\"center borderTop\" >\r\n                                                                                <span className=\"mt-3\" style={{ color: 'black' }}><small>Wallet Connection to Avalanche required</small></span>\r\n                                                                            </div>}\r\n                                                                    </div> :\r\n                                                                    <div>\r\n                                                                        <Buttons variant=\"outline-secondary\" size=\"sm\" style={{ width: '60px' }} onClick={() => {\r\n                                                                            // this.props.setTrigger(true)\r\n                                                                            this.props.setI(i, true, 2)\r\n                                                                        }}><b>Open</b></Buttons>&nbsp;&nbsp;&nbsp;</div>}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            }\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                            :\r\n                            <div className=\"center\">\r\n                                <div style={{ marginBottom: '350px' }}>\r\n                                    <div className=\"bounceball\"></div> &nbsp;\r\n                                    <div className=\"textLoadingSmall\">NETWORK IS Loading...</div>\r\n                                    {/* <div className=\"textLoadingSmall\">Sorry, we're down for scheduled mainenance right now.</div> */}\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div><br/>\r\n                <Footer/>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default TraderJoe;\r\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { BsFillQuestionCircleFill } from 'react-icons/bs';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Buttons from 'react-bootstrap/Button'\nimport MediaQuery from 'react-responsive';\nimport ImgNextGen from './ImgNextGen';\nimport Popup from 'reactjs-popup';\nimport Deposit from './Deposit'\nimport Withdraw from './Withdraw'\nimport Footer from './Footer'\nimport 'reactjs-popup/dist/index.css';\nimport './App.css';\n\nimport exlink from './images/link.webp';\nimport coin98 from './images/coin98.webp';\nimport fox from './images/metamask-fox.svg';\nimport walletconnectlogo from './images/walletconnect-logo.svg';\n\nimport bava from './images/logo.webp';\nimport savax from './images/sAvax.webp';\nimport qi from './images/qi.webp';\nimport ust from './images/ust.webp';\nimport png from './images/pangolin.webp';\nimport avax from './images/avax.svg';\nimport usdc from './images/usdc.svg';\nimport usdt from './images/usdt.svg';\nimport weth from './images/weth.svg';\n\n\nclass TraderJoe extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            farmV1_joeOpen: [],\n            depositAction: [],\n            withdrawAction: []\n        }\n        this.clickfarmOpen = this.clickfarmOpen.bind(this)\n        this.setAction = this.setAction.bind(this)\n    }\n\n    clickfarmOpen(i) {\n        let ntg = 0\n        this.state.farmV1_joeOpen[i] = !(this.state.farmV1_joeOpen[i])\n        this.state.depositAction[i] = true\n        this.state.withdrawAction[i] = false\n        this.setState({ ntg })  //do ntg, just to push react setstate\n    }\n\n    setAction(i, page) {\n        let ntg = 0\n        if (page == 0) {\n            this.state.depositAction[i] = true\n            this.state.withdrawAction[i] = false\n        } else {\n            this.state.depositAction[i] = false\n            this.state.withdrawAction[i] = true\n        }\n        this.setState({ ntg })\n    }\n\n    render() {\n        const contentStyle = { background: '#fffae6', border: \"1px solid #596169\", width: \"30%\", borderRadius: \"15px\", minWidth: \"320px\" };\n        return (\n            <div id=\"content\" className=\"\" style={{ margin: \"0\", color: '#ff9a04' }}>\n                <MediaQuery minWidth={601}>\n                    <div className=\"ml-auto mr-auto card mb-3 cardbody\" style={{ color: 'black' }}>\n                        {this.props.wallet || this.props.walletConnect ?\n                            <div className=\"card-body\" style={{ paddingBottom: '5px' }}>\n                                <div className='mb-5'>\n                                    <span className=\"float-left\" style={{ color: 'black', fontSize: '16px' }}>\n                                        Your BAVA Balance<br /><b>{parseFloat(window.web3Ava.utils.fromWei(this.props.bavaTokenBalance, 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 0 })} BAVA / $ {(window.web3Ava.utils.fromWei(this.props.bavaTokenBalance, 'Ether') * this.props.BAVAPrice).toLocaleString('en-US', { maximumFractionDigits: 0 })}</b>\n                                    </span>\n                                    <span className=\"float-right\" style={{ color: 'black', fontSize: '16px' }}>\n                                        Your Locked BAVA<br /><b>{parseFloat(window.web3Ava.utils.fromWei(this.props.lockedBavaTokenBalance, 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 0 })} BAVA / $ {(window.web3Ava.utils.fromWei(this.props.lockedBavaTokenBalance, 'Ether') * this.props.BAVAPrice).toLocaleString('en-US', { maximumFractionDigits: 0 })}</b>\n                                    </span>\n                                </div><br /><br />\n                                <div>\n                                    <span className=\"float-left\" style={{ color: 'black', fontSize: '16px' }}>Total pending harvest&nbsp;&nbsp;\n                                        <Popup\n                                            trigger={open => (\n                                                <span><BsFillQuestionCircleFill size={13} /></span>\n                                            )}\n                                            on=\"hover\"\n                                            offsetY={0}\n                                            offsetX={5}\n                                            position=\"right center\"\n                                        ><span className=\"textInfo\"><small>Total BAVA tokens earned acrossed all farm </small></span>\n                                        </Popup>\n                                    </span><br />\n                                    <span className=\"float-left \" style={{ color: 'black', fontSize: '16px' }}><b>\n                                        {parseFloat(window.web3Ava.utils.fromWei(this.props.totalpendingReward, 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 0 })} BAVA / $ {(window.web3Ava.utils.fromWei(this.props.totalpendingReward, 'Ether') * this.props.BAVAPrice).toLocaleString('en-US', { maximumFractionDigits: 0 })}</b>\n                                    </span>\n                                    <span className=\"float-right \">\n                                        <span><small>All pools compound at an optimal rate</small></span>\n                                    </span>\n                                </div>\n                            </div>\n                            :\n                            <div className=\"card-body\" style={{ paddingBottom: '5px' }}>\n                                <span>\n                                    <span className=\"float-left\" style={{ color: 'silver' }}>\n                                        Your BAVA Balance<br />\n                                        <div style={{ color: 'silver' }}><b>0 BAVA</b></div>\n                                    </span>\n                                    <span className=\"float-right\" style={{ color: 'silver' }}>\n                                        Your Locked BAVA<br />\n                                        <div style={{ color: 'silver' }}><b>0 BAVA</b></div>\n                                    </span>\n                                    <br /><br />\n                                </span>\n                                <span className=\"center mb-1\">\n                                    {this.props.farmloading ?\n                                        <div>\n                                            <Popup trigger={open => (<Buttons className=\"textDarkMedium cell2\" variant=\"outline\" size=\"lg\" >Connect to display</Buttons>)} modal {...{ contentStyle }}>\n                                                {close => (\n                                                    <div>\n                                                        <Buttons className=\"close cell2\" style={{ background: \"#fffae6\", borderRadius: \"12px\", padding: \"2px 5px\", fontSize: \"18px\" }} onClick={close}>\n                                                            &times;\n                                                        </Buttons>\n                                                        <div className=\"textWhiteMedium mb-2\" style={{ borderBottom: \"1px Solid Gray\", padding: \"10px\" }}> Connect a Wallet </div>\n                                                        <div className=\"center mt-4 mb-2\">\n                                                            <Buttons type=\"button\" variant=\"secondary\" style={{ height: \"50px\", width: \"100%\", minWidth: \"150px\", maxWidth: \"300px\", padding: \"6px 25px\" }} onClick={async () => {\n                                                                await this.props.connectMetamask()\n                                                            }}>\n                                                                <img src={fox} width=\"23\" height=\"23\" className=\"float-right\" alt=\"\" />\n                                                                <span className=\"float-left\">Metamask</span></Buttons>\n                                                        </div>\n                                                        <div className=\"center mt-2 mb-2\">\n                                                            <Buttons type=\"button\" variant=\"secondary\" style={{ height: \"50px\", width: \"100%\", minWidth: \"150px\", maxWidth: \"300px\", padding: \"6px 25px\" }} onClick={async () => {\n                                                                await this.props.connectCoin98()\n                                                            }}>\n                                                                <ImgNextGen\n                                                                    srcWebp={coin98}\n                                                                    width=\"23\" height=\"23\" className=\"float-right\" alt=\"\"\n                                                                />\n                                                                <span className=\"float-left\">Coin98</span></Buttons>\n                                                        </div>\n                                                        <div className=\"center mt-2 mb-4\">\n                                                            <Buttons type=\"button\" variant=\"secondary\" style={{ height: \"50px\", width: \"100%\", minWidth: \"150px\", maxWidth: \"300px\", padding: \"6px 25px\" }} onClick={async () => {\n                                                                await this.props.mobileWalletConnect()\n                                                            }}><img src={walletconnectlogo} width=\"26\" height=\"23\" className=\"float-right\" alt=\"\" /><span className=\"float-left\">WalletConnect</span></Buttons>\n                                                        </div>\n                                                    </div>\n                                                )}\n                                            </Popup>\n                                        </div>\n                                        : <Buttons className=\"textDarkMedium1 cell2\" variant=\"outline\" size=\"lg\" >Connect to display</Buttons>\n                                    }\n                                </span>\n                                <span>\n                                    <span className=\"float-left\" style={{ color: 'silver' }}>Total pending harvest&nbsp;\n                                        <Popup\n                                            trigger={open => (\n                                                <span><BsFillQuestionCircleFill size={13} /></span>\n                                            )}\n                                            on=\"hover\"\n                                            offsetY={0}\n                                            offsetX={5}\n                                            position=\"right center\"\n                                        ><span className=\"textInfo\"><small>Total BAVA tokens earned acrossed all farm </small></span>\n                                        </Popup>\n                                    </span><br />\n                                    <span className=\"float-left\">\n                                        <div style={{ color: 'silver' }}><b>0 BAVA</b></div>\n                                    </span>\n                                    <span className=\"float-right\" style={{ color: 'silver' }}>\n                                        <small><span>All pools compound at an optimal rate</span></small>\n                                    </span>\n                                </span>\n                            </div>\n                        }\n                    </div>\n                </MediaQuery>\n\n                <MediaQuery maxWidth={600}>\n                    <div className=\"ml-auto mr-auto card mb-3 cardbody\" style={{ color: 'black' }}>\n                        {this.props.wallet || this.props.walletConnect ?\n                            <div className=\"card-body\" style={{ paddingBottom: '5px' }}>\n                                <div>\n                                    <div className=\"left mb-3\" style={{ color: 'black', fontSize: '16px' }}>\n                                        Your BAVA Balance<br /><b>{parseFloat(window.web3Ava.utils.fromWei(this.props.bavaTokenBalance, 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 0 })} BAVA / $ {(window.web3Ava.utils.fromWei(this.props.bavaTokenBalance, 'Ether') * this.props.BAVAPrice).toLocaleString('en-US', { maximumFractionDigits: 0 })}</b>\n                                    </div>\n                                    <div className=\"left mb-3\" style={{ color: 'black', fontSize: '16px' }}>\n                                        Your Locked BAVA<br /><b>{parseFloat(window.web3Ava.utils.fromWei(this.props.lockedBavaTokenBalance, 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 0 })} BAVA / $ {(window.web3Ava.utils.fromWei(this.props.lockedBavaTokenBalance, 'Ether') * this.props.BAVAPrice).toLocaleString('en-US', { maximumFractionDigits: 0 })}</b>\n                                    </div>\n                                    <div className=\"left mb-2\" style={{ color: 'black', fontSize: '16px' }}>Total pending harvest&nbsp;\n                                        <Popup\n                                            trigger={open => (\n                                                <span><BsFillQuestionCircleFill size={13} /></span>\n                                            )}\n                                            on=\"hover\"\n                                            offsetY={0}\n                                            offsetX={5}\n                                            position=\"right center\"\n                                        ><span className=\"textInfo\"><small>Total BAVA tokens earned acrossed all farm </small></span>\n                                        </Popup><br /><b>{parseFloat(window.web3Ava.utils.fromWei(this.props.totalpendingReward, 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 0 })} BAVA / $ {(window.web3Ava.utils.fromWei(this.props.totalpendingReward, 'Ether') * this.props.BAVAPrice).toLocaleString('en-US', { maximumFractionDigits: 0 })}</b>\n                                    </div>\n                                    <div className=\"left \">\n                                        <span><small>All pools compound at an optimal rate</small></span>\n                                    </div>\n                                </div>\n                            </div>\n                            : <div className=\"card-body\" style={{ paddingBottom: '5px' }}>\n                                <div>\n                                    <div className=\"left mb-3\" style={{ color: 'silver' }}>\n                                        Your BAVA Balance<br />\n                                        <div style={{ color: 'silver' }}><b>0 BAVA</b></div>\n                                        {/* <div className=\"float-right\">\n                                            {this.props.farmloading ?\n                                                <div>\n                                                    <Popup trigger={open => (<Buttons className=\"textDarkMedium cell2\" style={{ maxWidth: '110px', height: '90px', marginRight: '15px' }} variant=\"outline\" size=\"lg\" >Connect to display</Buttons>)} modal {...{ contentStyle }}>\n                                                        {close => (\n                                                            <div>\n                                                                <Buttons className=\"close cell2\" style={{ background: \"#fffae6\", borderRadius: \"12px\", padding: \"2px 5px\", fontSize: \"18px\" }} onClick={close}>\n                                                                    &times;\n                                                                </Buttons>\n                                                                <div className=\"textWhiteMedium mb-2\" style={{ borderBottom: \"1px Solid Gray\", padding: \"10px\" }}> Connect a Wallet </div>\n                                                                <div className=\"center mt-4 mb-2\">\n                                                                    <Buttons type=\"button\" variant=\"secondary\" style={{ height: \"50px\", width: \"100%\", minWidth: \"150px\", maxWidth: \"300px\", padding: \"6px 25px\" }} onClick={async () => {\n                                                                        await this.props.connectMetamask()\n                                                                    }}>\n                                                                        <img src={fox} width=\"23\" height=\"23\" className=\"float-right\" alt=\"\" />\n                                                                        <span className=\"float-left\">Metamask</span></Buttons>\n                                                                </div>\n                                                                <div className=\"center mt-2 mb-2\">\n                                                                    <Buttons type=\"button\" variant=\"secondary\" style={{ height: \"50px\", width: \"100%\", minWidth: \"150px\", maxWidth: \"300px\", padding: \"6px 25px\" }} onClick={async () => {\n                                                                        await this.props.connectCoin98()\n                                                                    }}>\n                                                                        <ImgNextGen\n                                                                            srcWebp={coin98}\n                                                                            width=\"23\" height=\"23\" className=\"float-right\" alt=\"\"\n                                                                        />\n                                                                        <span className=\"float-left\">Coin98</span></Buttons>\n                                                                </div>\n                                                                <div className=\"center mt-2 mb-4\">\n                                                                    <Buttons type=\"button\" variant=\"secondary\" style={{ height: \"50px\", width: \"100%\", minWidth: \"150px\", maxWidth: \"300px\", padding: \"6px 25px\" }} onClick={async () => {\n                                                                        await this.props.mobileWalletConnect()\n                                                                    }}><img src={walletconnectlogo} width=\"26\" height=\"23\" className=\"float-right\" alt=\"\" /><span className=\"float-left\">WalletConnect</span></Buttons>\n                                                                </div>\n                                                            </div>\n                                                        )}\n                                                    </Popup>\n                                                </div>\n                                                : <Buttons className=\"textDarkMedium1 cell2\" style={{ maxWidth: '110px', height: '90px', marginRight: '15px' }} variant=\"outline\" size=\"lg\" >Connect to display</Buttons>\n                                            }\n                                        </div> */}\n                                    </div>\n                                    <div className=\"left mb-3\" style={{ color: 'silver' }}>\n                                        Your Locked BAVA<br />\n                                        <div style={{ color: 'silver' }}><b>0 BAVA</b></div>\n                                    </div>\n                                    <div className=\"left mb-2\" style={{ color: 'silver' }}>Total pending harvest&nbsp;&nbsp;\n                                        <Popup\n                                            trigger={open => (\n                                                <span><BsFillQuestionCircleFill size={13} /></span>\n                                            )}\n                                            on=\"hover\"\n                                            offsetY={0}\n                                            offsetX={5}\n                                            position=\"right center\"\n                                        ><span className=\"textInfo\"><small>Total BAVA tokens earned acrossed all farm </small></span>\n                                        </Popup><br /><div style={{ color: 'silver' }}><b>0 BAVA</b></div>\n                                    </div>\n                                    <span className=\"left \" style={{ color: 'silver' }}>\n                                        <small><span>All pools compound at an optimal rate</span></small>\n                                    </span>\n                                </div>\n                            </div>\n                        }\n                    </div>\n                </MediaQuery>\n\n                <div className=\"center\" style={{ color: 'grey' }}><small>&nbsp;! Attention:&nbsp;Be sure to read <a href=\"https://baklavaspace.gitbook.io/\" target=\"_blank\">baklavaspace.gitbook</a> before using the pools so you are familiar with protocol risks and fees!</small></div>\n                <div className=\"ml-auto mr-auto mt-3\">\n                    <div className=\"mb-4\">\n                        <div className=\"textMiddleBold1 float-right\" style={{ marginRight: '5px' }}><big>TVL $ {parseFloat(this.props.totalTVL).toLocaleString('en-US', { maximumFractionDigits: 0 })}</big></div>\n                        <div className=\"textMiddleBold1 left\" style={{ marginLeft: '2px', marginBottom: '5px' }}><big>Select Platform</big></div>\n                        <div className=\"left\">\n                            <ButtonGroup>\n                                <Buttons style={{ color: \"#ff9a04\" }} variant=\"link\" size=\"sm\" as={Link} to=\"/menu/v2\">PANGOLIN</Buttons>\n                                <Buttons style={{ color: \"#ff9a04\" }} variant=\"link\" size=\"sm\" as={Link} to=\"/menu/v2/kyber\">KYBERSWAP</Buttons>\n                                <Buttons style={{ color: \"#ff9a04\", border: \"1px solid #ff9a04\" }} variant=\"link\" size=\"sm\" as={Link} to=\"/menu/v2/traderjoe\">TRADER JOE</Buttons>\n                            </ButtonGroup>\n                        </div>\n\n                        {/* <span className=\"float-right mr-4\">\n                            <ButtonGroup>\n                                <Button variant=\"text\" size=\"small\" color=\"inherit\" >Sort by</Button>\n                            </ButtonGroup>\n                        </span> */}\n                    </div>\n\n\n\n\n\n\n\n\n                    <div>\n                        {this.props.farmloading ?\n                            <div className=\"\" style={{}}>\n                                {this.props.bavaPoolSegmentInfo[1].map((bavaPoolSegmentInfo, key) => {\n                                    let i = this.props.bavaPoolSegmentInfo[1].indexOf(bavaPoolSegmentInfo)\n                                    return (\n                                        <div key={key}>\n                                            <div>\n                                                <div className=\"card mb-3 cardbody\">\n                                                    <div className=\"card-body\" style={{ padding: '1rem' }}>\n                                                        <div className=\"card cardbody\" style={{ border: '0px' }}>\n                                                            <MediaQuery minWidth={1001}>\n                                                                <div className='card-body rowC' style={{ padding: '0rem', cursor: 'pointer' }} onClick={() => {\n                                                                    this.clickfarmOpen(i)\n                                                                }}>\n                                                                    <div className=\"float-left rowC\" style={{ minWidth: '220px' }}>\n                                                                        <span className=\"mr-3 mt-2\">\n                                                                            <div className=\"textMiddle\" style={{ width: '48px' }}>\n                                                                                {this.props.bavaPoolSegmentInfo[1][i].icon.map((icon, key) => {\n                                                                                    return (<div key={key}>\n                                                                                        {icon.image == \"bava\" && <img className={icon.imagePosition} src={bava} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                        {icon.image == \"avax\" && <img className={icon.imagePosition} src={avax} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                        {icon.image == \"usdc\" && <img className={icon.imagePosition} src={usdc} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                        {icon.image == \"usdt\" && <img className={icon.imagePosition} src={usdt} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                        {icon.image == \"ust\" && <img className={icon.imagePosition} src={ust} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                        {icon.image == \"qi\" && <img className={icon.imagePosition} src={qi} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                        {icon.image == \"savax\" && <img className={icon.imagePosition} src={savax} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                        {icon.image == \"png\" && <img className={icon.imagePosition} src={png} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                        {icon.image == \"weth\" && <img className={icon.imagePosition} src={weth} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                    </div>)\n                                                                                })}\n                                                                            </div>\n                                                                        </span>\n                                                                        <span>\n                                                                            <div className=\"textMiddle\"><b>{this.props.bavaPoolSegmentInfo[1][i].lpName}{this.props.bavaPoolSegmentInfo[1][i].status}</b></div>\n                                                                            <div className=\"textGrey exLink0\" onClick={() => {\n                                                                                window.open(this.props.bavaPoolSegmentInfo[1][i].projectLink, '_blank')\n                                                                            }}>Uses: {this.props.bavaPoolSegmentInfo[1][i].platform} <img src={exlink} style={{ marginBottom: \"3px\" }} height='12' alt=\"\" /></div>\n                                                                            <div className=\"textGrey exLink0\" onClick={() => {\n                                                                                window.open(this.props.bavaPoolSegmentInfo[1][i].getLPLink, '_blank')\n                                                                            }}>Get {this.props.bavaPoolSegmentInfo[1][i].lpName} <img src={exlink} style={{ marginBottom: \"3px\" }} height='12' alt=\"\" /></div>\n                                                                            <div className=\"textGrey exLink0\" onClick={() => {\n                                                                                window.open(this.props.bavaContract, '_blank')\n                                                                            }}>View On Explorer <img src={exlink} style={{ marginBottom: \"3px\" }} height='12' alt=\"\" /></div>\n                                                                        </span>\n                                                                    </div>\n                                                                    <div className=\"float-right mr-auto\">\n                                                                        <table>\n                                                                            <thead className=\"textBlackSmall\" style={{ color: 'black' }}>\n                                                                                <tr>\n                                                                                    <th scope=\"col\" width=\"140\">Wallet</th>\n                                                                                    <th scope=\"col\" width=\"140\">Deposited</th>\n                                                                                    <th scope=\"col\">Growth</th>\n                                                                                    <th scope=\"col\">APR&nbsp;<Popup\n                                                                                        trigger={open => (<span><BsFillQuestionCircleFill style={{ marginBottom: \"2px\" }} size={10} /></span>)}\n                                                                                        on=\"hover\"\n                                                                                        offsetY={0}\n                                                                                        offsetX={5}\n                                                                                        position=\"right center\"\n                                                                                        contentStyle={{ width: '150px' }}\n                                                                                    ><div className=\"textInfo\">APR Breakdown: </div><br />\n                                                                                        <div className=\"textInfo\">Baklava   : {parseFloat(this.props.bavaapr[1][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })} %</div><br />\n                                                                                        <div className=\"textInfo\">TraderJoe : {parseFloat(this.props.bavaPoolSegmentInfo[1][i].total3rdPartyAPR).toLocaleString('en-US', { maximumFractionDigits: 0 })} %</div>\n                                                                                    </Popup></th>\n                                                                                    <th scope=\"col\">APY <Popup\n                                                                                        trigger={open => (<span><BsFillQuestionCircleFill style={{ marginBottom: \"2px\" }} size={10} /></span>)}\n                                                                                        on=\"hover\"\n                                                                                        offsetY={0}\n                                                                                        offsetX={5}\n                                                                                        position=\"right center\"\n                                                                                        contentStyle={{ width: '150px' }}\n                                                                                    ><div className=\"textInfo\"><small>APY are calculated based on the compound APR number excluded locked reward.</small></div><br />\n                                                                                        <div className=\"textInfo\"><small>The value shown is based on daily compounding frequency.</small></div>\n                                                                                    </Popup></th>\n                                                                                    <th scope=\"col\">TVL</th>\n                                                                                </tr>\n                                                                            </thead>\n                                                                            <tbody className=\"textGrey\">\n                                                                                <tr>\n                                                                                    <td className=\"\">{(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.bavaLpBalanceAccount[1][i]), 'Ether').toLocaleString('en-US', { maximumFractionDigits: 18 })}</div> : <div className=\"center\">\n                                                                                        <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>}</td>\n                                                                                    <td className=\"\">{(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.bavaUserSegmentInfo[1][i], 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 18 })}</div> : <div className=\"center\">\n                                                                                        <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\n                                                                                    <td className=\"\">{this.props.aprloading ? <div>{parseFloat(this.props.bavaReturnRatio[1][i]).toLocaleString('en-US', { maximumFractionDigits: 5 })}</div> : <div className=\"center\">\n                                                                                        <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\n                                                                                    <td className=\"\">{this.props.aprloading ? <div>{parseFloat(this.props.bavaapr[1][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })}%</div> : <div className=\"center\">\n                                                                                        <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\n                                                                                    <td className=\"\">{this.props.aprloading ? <div>{parseFloat(this.props.bavaapyDaily[1][i]) > 1000000 ? <div>&#x3e;100,000%</div> : <div>{parseFloat(this.props.bavaapyDaily[1][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })}%</div>}</div> : <div className=\"center\">\n                                                                                        <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>}</td>\n                                                                                    <td className=\"\">$ {parseFloat(this.props.bavatvl[1][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })} </td>\n                                                                                </tr>\n                                                                            </tbody>\n                                                                        </table>\n                                                                    </div>\n                                                                </div>\n                                                            </MediaQuery>\n                                                            <MediaQuery maxWidth={1000}>\n                                                                <div className='card-body' style={{ padding: '0rem', cursor: 'pointer' }} onClick={() => {\n                                                                    this.clickfarmOpen(i)\n                                                                }}>\n                                                                    <div className=\"float-left rowC mb-3\" style={{ minWidth: '220px' }}>\n                                                                        <span className=\"mr-3 mt-2\">\n                                                                            <div className=\"textMiddle\" style={{ width: '48px' }}>\n                                                                                {this.props.bavaPoolSegmentInfo[1][i].icon.map((icon, key) => {\n                                                                                    return (<div key={key}>\n                                                                                        {icon.image == \"bava\" && <img className={icon.imagePosition} src={bava} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                        {icon.image == \"avax\" && <img className={icon.imagePosition} src={avax} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                        {icon.image == \"usdc\" && <img className={icon.imagePosition} src={usdc} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                        {icon.image == \"usdt\" && <img className={icon.imagePosition} src={usdt} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                        {icon.image == \"ust\" && <img className={icon.imagePosition} src={ust} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                        {icon.image == \"qi\" && <img className={icon.imagePosition} src={qi} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                        {icon.image == \"savax\" && <img className={icon.imagePosition} src={savax} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                        {icon.image == \"png\" && <img className={icon.imagePosition} src={png} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                        {icon.image == \"weth\" && <img className={icon.imagePosition} src={weth} width={icon.imageSize} height={icon.imageSize} alt=\"\" />}\n                                                                                    </div>)\n                                                                                })}\n                                                                            </div>\n                                                                        </span>\n                                                                        <span>\n                                                                            <div className=\"textMiddle\"><b>{this.props.bavaPoolSegmentInfo[1][i].lpName}{this.props.bavaPoolSegmentInfo[1][i].status}</b></div>\n                                                                            <div className=\"textGrey exLink0\" onClick={() => {\n                                                                                window.open(this.props.bavaPoolSegmentInfo[1][i].projectLink, '_blank')\n                                                                            }}>Uses: {this.props.bavaPoolSegmentInfo[1][i].platform} <img src={exlink} style={{ marginBottom: \"3px\" }} height='12' alt=\"\" /></div>\n                                                                            <div className=\"textGrey exLink0\" onClick={() => {\n                                                                                window.open(this.props.bavaPoolSegmentInfo[1][i].getLPLink, '_blank')\n                                                                            }}>Get {this.props.bavaPoolSegmentInfo[1][i].lpName} <img src={exlink} style={{ marginBottom: \"3px\" }} height='12' alt=\"\" /></div>\n                                                                            <div className=\"textGrey exLink0\" onClick={() => {\n                                                                                window.open(this.props.bavaContract, '_blank')\n                                                                            }}>View On Explorer <img src={exlink} style={{ marginBottom: \"3px\" }} height='12' alt=\"\" /></div>\n                                                                        </span>\n                                                                    </div>\n                                                                    <MediaQuery minWidth={701}>\n                                                                        <div>\n                                                                            <table className=\"float-right mr-auto\">\n                                                                                <thead className=\"textBlackSmall\" style={{ color: 'black' }}>\n                                                                                    <tr>\n                                                                                        <th scope=\"col\" width=\"140\">Wallet</th>\n                                                                                        <th scope=\"col\" width=\"140\">Deposited</th>\n                                                                                        <th scope=\"col\">Growth</th>\n                                                                                        <th scope=\"col\">APR&nbsp;<Popup\n                                                                                            trigger={open => (<span><BsFillQuestionCircleFill style={{ marginBottom: \"2px\" }} size={10} /></span>)}\n                                                                                            on=\"hover\"\n                                                                                            offsetY={0}\n                                                                                            offsetX={5}\n                                                                                            position=\"right center\"\n                                                                                            contentStyle={{ width: '150px' }}\n                                                                                        ><div className=\"textInfo\">APR Breakdown: </div><br />\n                                                                                            <div className=\"textInfo\">Baklava   : {parseFloat(this.props.bavaapr[1][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })} %</div><br />\n                                                                                            <div className=\"textInfo\">TraderJoe : {parseFloat(this.props.bavaPoolSegmentInfo[1][i].total3rdPartyAPR).toLocaleString('en-US', { maximumFractionDigits: 0 })} %</div>\n                                                                                        </Popup></th>\n                                                                                        <th scope=\"col\">APY <Popup\n                                                                                            trigger={open => (<span><BsFillQuestionCircleFill style={{ marginBottom: \"2px\" }} size={10} /></span>)}\n                                                                                            on=\"hover\"\n                                                                                            offsetY={0}\n                                                                                            offsetX={5}\n                                                                                            position=\"right center\"\n                                                                                            contentStyle={{ width: '150px' }}\n                                                                                        ><div className=\"textInfo\"><small>APY are calculated based on the compound APR number excluded locked reward.</small></div><br />\n                                                                                            <div className=\"textInfo\"><small>The value shown is based on daily compounding frequency.</small></div>\n                                                                                        </Popup></th>\n                                                                                        <th scope=\"col\">TVL</th>\n                                                                                    </tr>\n                                                                                </thead>\n                                                                                <tbody className=\"textGrey\">\n                                                                                    <tr>\n                                                                                        <td className=\"\">{(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.bavaLpBalanceAccount[1][i]), 'Ether').toLocaleString('en-US', { maximumFractionDigits: 18 })}</div> : <div className=\"center\">\n                                                                                            <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>}</td>\n                                                                                        <td className=\"\">{(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.bavaUserSegmentInfo[1][i], 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 18 })}</div> : <div className=\"center\">\n                                                                                            <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\n                                                                                        <td className=\"\">{this.props.aprloading ? <div>{parseFloat(this.props.bavaReturnRatio[1][i]).toLocaleString('en-US', { maximumFractionDigits: 5 })}</div> : <div className=\"center\">\n                                                                                            <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\n                                                                                        <td className=\"\">{this.props.aprloading ? <div>{parseFloat(this.props.bavaapr[1][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })}%</div> : <div className=\"center\">\n                                                                                            <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\n                                                                                        <td className=\"\">{this.props.aprloading ? <div>{parseFloat(this.props.bavaapyDaily[1][i]) > 1000000 ? <div>&#x3e;100,000%</div> : <div>{parseFloat(this.props.bavaapyDaily[1][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })}%</div>}</div> : <div className=\"center\">\n                                                                                            <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>}</td>\n                                                                                        <td className=\"\">$ {parseFloat(this.props.bavatvl[1][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })} </td>\n                                                                                    </tr>\n                                                                                </tbody>\n                                                                            </table>\n                                                                        </div>\n                                                                    </MediaQuery>\n                                                                    <MediaQuery maxWidth={700}>\n                                                                        <MediaQuery minWidth={551}>\n                                                                            <div>\n                                                                                <table className=\"float-right mr-auto\">\n                                                                                    <thead className=\"textBlackSmall\" style={{ color: 'black' }}>\n                                                                                        <tr>\n                                                                                            <th scope=\"col\" width=\"140\">Wallet</th>\n                                                                                            <th scope=\"col\" width=\"140\">Deposited</th>\n                                                                                            <th scope=\"col\">Growth</th>\n                                                                                        </tr>\n                                                                                    </thead>\n                                                                                    <tbody className=\"textGrey\">\n                                                                                        <tr>\n                                                                                            <td className=\"\">{(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.bavaLpBalanceAccount[1][i]), 'Ether').toLocaleString('en-US', { maximumFractionDigits: 18 })}</div> : <div className=\"center\">\n                                                                                                <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>}</td>\n                                                                                            <td className=\"\">{(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.bavaUserSegmentInfo[1][i], 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 18 })}</div> : <div className=\"center\">\n                                                                                                <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\n                                                                                            <td className=\"\">{this.props.aprloading ? <div>{parseFloat(this.props.bavaReturnRatio[1][i]).toLocaleString('en-US', { maximumFractionDigits: 5 })}</div> : <div className=\"center\">\n                                                                                                <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\n                                                                                        </tr>\n                                                                                    </tbody>\n                                                                                    <thead className=\"textBlackSmall\" style={{ color: 'black' }}>\n                                                                                        <tr>\n                                                                                            <th scope=\"col\">APR&nbsp;<Popup\n                                                                                                trigger={open => (<span><BsFillQuestionCircleFill style={{ marginBottom: \"2px\" }} size={10} /></span>)}\n                                                                                                on=\"hover\"\n                                                                                                offsetY={0}\n                                                                                                offsetX={5}\n                                                                                                position=\"right center\"\n                                                                                                contentStyle={{ width: '150px' }}\n                                                                                            ><div className=\"textInfo\">APR Breakdown: </div><br />\n                                                                                                <div className=\"textInfo\">Baklava   : {parseFloat(this.props.bavaapr[1][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })} %</div><br />\n                                                                                                <div className=\"textInfo\">TraderJoe : {parseFloat(this.props.bavaPoolSegmentInfo[1][i].total3rdPartyAPR).toLocaleString('en-US', { maximumFractionDigits: 0 })} %</div>\n                                                                                            </Popup></th>\n                                                                                            <th scope=\"col\">APY <Popup\n                                                                                                trigger={open => (<span><BsFillQuestionCircleFill style={{ marginBottom: \"2px\" }} size={10} /></span>)}\n                                                                                                on=\"hover\"\n                                                                                                offsetY={0}\n                                                                                                offsetX={5}\n                                                                                                position=\"right center\"\n                                                                                                contentStyle={{ width: '150px' }}\n                                                                                            ><div className=\"textInfo\"><small>APY are calculated based on the compound APR number excluded locked reward.</small></div><br />\n                                                                                                <div className=\"textInfo\"><small>The value shown is based on daily compounding frequency.</small></div>\n                                                                                            </Popup></th>\n                                                                                            <th scope=\"col\">TVL</th>\n                                                                                        </tr>\n                                                                                    </thead>\n                                                                                    <tbody className=\"textGrey\">\n                                                                                        <tr>\n                                                                                            <td className=\"\">{this.props.aprloading ? <div>{parseFloat(this.props.bavaapr[1][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })}%</div> : <div className=\"center\">\n                                                                                                <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\n                                                                                            <td className=\"\">{this.props.aprloading ? <div>{parseFloat(this.props.bavaapyDaily[1][i]) > 1000000 ? <div>&#x3e;100,000%</div> : <div>{parseFloat(this.props.bavaapyDaily[1][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })}%</div>}</div> : <div className=\"center\">\n                                                                                                <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>}</td>\n                                                                                            <td className=\"\">$ {parseFloat(this.props.bavatvl[1][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })} </td>\n                                                                                        </tr>\n                                                                                    </tbody>\n                                                                                </table>\n                                                                            </div>\n                                                                        </MediaQuery>\n                                                                        <MediaQuery maxWidth={550}>\n                                                                            <div>\n                                                                                <table className=\"float-right mr-auto\">\n                                                                                    <thead className=\"textBlackSmall\" style={{ color: 'black' }}>\n                                                                                        <tr>\n                                                                                            <th scope=\"col\" width=\"140\">Wallet</th>\n                                                                                            <th scope=\"col\" width=\"140\">Deposited</th>\n                                                                                        </tr>\n                                                                                    </thead>\n                                                                                    <tbody className=\"textGrey\">\n                                                                                        <tr>\n                                                                                            <td className=\"\">{(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.bavaLpBalanceAccount[1][i]), 'Ether').toLocaleString('en-US', { maximumFractionDigits: 18 })}</div> : <div className=\"center\">\n                                                                                                <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>}</td>\n                                                                                            <td className=\"\">{(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.bavaUserSegmentInfo[1][i], 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 18 })}</div> : <div className=\"center\">\n                                                                                                <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\n                                                                                        </tr>\n                                                                                    </tbody>\n                                                                                    <thead className=\"textBlackSmall\" style={{ color: 'black' }}>\n                                                                                        <tr>\n                                                                                            <th scope=\"col\">Growth</th>\n                                                                                            <th scope=\"col\">APR&nbsp;<Popup\n                                                                                                trigger={open => (<span><BsFillQuestionCircleFill style={{ marginBottom: \"2px\" }} size={10} /></span>)}\n                                                                                                on=\"hover\"\n                                                                                                offsetY={0}\n                                                                                                offsetX={5}\n                                                                                                position=\"right center\"\n                                                                                                contentStyle={{ width: '150px' }}\n                                                                                            ><div className=\"textInfo\">APR Breakdown: </div><br />\n                                                                                                <div className=\"textInfo\">Baklava   : {parseFloat(this.props.bavaapr[1][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })} %</div><br />\n                                                                                                <div className=\"textInfo\">TraderJoe : {parseFloat(this.props.bavaPoolSegmentInfo[1][i].total3rdPartyAPR).toLocaleString('en-US', { maximumFractionDigits: 0 })} %</div>\n                                                                                            </Popup></th>\n                                                                                        </tr>\n                                                                                    </thead>\n                                                                                    <tbody className=\"textGrey\">\n                                                                                        <tr>\n                                                                                            <td className=\"\">{(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.bavaLpBalanceAccount[1][i]), 'Ether').toLocaleString('en-US', { maximumFractionDigits: 18 })}</div> : <div className=\"center\">\n                                                                                                <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>}</td>\n                                                                                            <td className=\"\">{this.props.aprloading ? <div>{parseFloat(this.props.bavaapr[1][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })}%</div> : <div className=\"center\">\n                                                                                                <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\n                                                                                        </tr>\n                                                                                    </tbody>\n                                                                                    <thead className=\"textBlackSmall\" style={{ color: 'black' }}>\n                                                                                        <tr>\n                                                                                            <th scope=\"col\">APY <Popup\n                                                                                                trigger={open => (<span><BsFillQuestionCircleFill style={{ marginBottom: \"2px\" }} size={10} /></span>)}\n                                                                                                on=\"hover\"\n                                                                                                offsetY={0}\n                                                                                                offsetX={5}\n                                                                                                position=\"right center\"\n                                                                                                contentStyle={{ width: '150px' }}\n                                                                                            ><div className=\"textInfo\"><small>APY are calculated based on the compound APR number excluded locked reward.</small></div><br />\n                                                                                                <div className=\"textInfo\"><small>The value shown is based on daily compounding frequency.</small></div>\n                                                                                            </Popup></th>\n                                                                                            <th scope=\"col\">TVL</th>\n                                                                                        </tr>\n                                                                                    </thead>\n                                                                                    <tbody className=\"textGrey\">\n                                                                                        <tr>\n                                                                                            <td className=\"\">{this.props.aprloading ? <div>{parseFloat(this.props.bavaapyDaily[1][i]) > 1000000 ? <div>&#x3e;100,000%</div> : <div>{parseFloat(this.props.bavaapyDaily[1][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })}%</div>}</div> : <div className=\"center\">\n                                                                                                <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>}</td>\n                                                                                            <td className=\"\">$ {parseFloat(this.props.bavatvl[1][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })} </td>\n                                                                                        </tr>\n                                                                                    </tbody>\n                                                                                </table>\n                                                                            </div>\n                                                                        </MediaQuery>\n                                                                    </MediaQuery>\n                                                                </div>\n                                                            </MediaQuery>\n                                                        </div>\n\n                                                        {this.state.farmV1_joeOpen[i] ?\n                                                            <div>\n                                                                {this.props.wallet || this.props.walletConnect ?\n                                                                    <div className=\"borderTop \">\n                                                                        <div className=\"mt-3\">\n                                                                            <MediaQuery minWidth={951}>\n                                                                                <div className=\"float-left\">\n                                                                                    <div className=\"card cardbody mr-3\" style={{ marginBottom: '6px', width: '300px' }}>\n                                                                                        <div className=\"card-body\" style={{ padding: '0.5rem' }}>\n                                                                                            <span className=\"float-left\" style={{ color: 'black' }}><small>BAVA earned</small></span><br />\n                                                                                            <span className=\"float-left\" style={{ color: 'black', marginTop: '8px' }}><small>{this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.bavaPendingSegmentReward[1][i], 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 0 })}</div> :\n                                                                                                <div className=\"ml-3 lds-facebook\"><div></div><div></div><div></div></div>}</small></span>\n                                                                                            <span className=\"float-right\">\n                                                                                                <Buttons\n                                                                                                    variant=\"success\"\n                                                                                                    size=\"sm\"\n                                                                                                    style={{ minWidth: '80px' }}\n                                                                                                    onClick={(event) => {\n                                                                                                        event.preventDefault()\n                                                                                                        this.props.harvest(i, 1, 1)\n                                                                                                    }}>\n                                                                                                    Harvest\n                                                                                                </Buttons></span>\n                                                                                        </div>\n                                                                                    </div>\n                                                                                </div>\n                                                                            </MediaQuery>\n                                                                            <MediaQuery maxWidth={950}>\n                                                                                <div>\n                                                                                    <div className=\"card cardbody\" style={{ marginBottom: '6px' }}>\n                                                                                        <div className=\"card-body\" style={{ padding: '0.5rem' }}>\n                                                                                            <span className=\"float-left\" style={{ color: 'black' }}><small>BAVA earned</small></span><br />\n                                                                                            <span className=\"float-left\" style={{ color: 'black', marginTop: '8px' }}><small>{this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.bavaPendingSegmentReward[1][i], 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 0 })}</div> :\n                                                                                                <div className=\"ml-3 lds-facebook\"><div></div><div></div><div></div></div>}</small></span>\n                                                                                            <span className=\"float-right\">\n                                                                                                <Buttons\n                                                                                                    variant=\"success\"\n                                                                                                    size=\"sm\"\n                                                                                                    style={{ minWidth: '80px' }}\n                                                                                                    onClick={(event) => {\n                                                                                                        event.preventDefault()\n                                                                                                        this.props.harvest(i, 1, 1)\n                                                                                                    }}>\n                                                                                                    Harvest\n                                                                                                </Buttons></span>\n                                                                                        </div>\n                                                                                    </div>\n                                                                                </div>\n                                                                            </MediaQuery>\n\n                                                                            <div className=\"card cardbody\" style={{ minWidth: '300px' }}>\n                                                                                <div className=\"card-body\" style={{ padding: '0.5rem' }}>\n                                                                                    <div className='ml-2 mt-2 mb-2'>\n                                                                                        {this.state.depositAction[i] == true ?\n                                                                                            <div style={{ height: '30px' }}>\n                                                                                                <div className='float-left' style={{ paddingTop: '0px' }}>\n                                                                                                    <ButtonGroup>\n                                                                                                        <div>\n                                                                                                            <Buttons className=\"textTransparentButton center\" style={{ textDecoration: 'none', marginRight: '5px' }} variant=\"link\" size=\"sm\" onClick={async () => {\n                                                                                                                await this.setAction(i, 0)\n                                                                                                            }}><b>Deposit</b></Buttons></div>\n                                                                                                        <div>\n                                                                                                            <Buttons className=\"textBlackButton center mr-1\" style={{ textDecoration: 'none' }} variant=\"link\" size=\"sm\" onClick={async () => {\n                                                                                                                await this.setAction(i, 1)\n                                                                                                            }}>Withdraw</Buttons></div>\n                                                                                                    </ButtonGroup>\n                                                                                                </div>\n                                                                                            </div>\n                                                                                            : <div style={{ height: '30px' }}>\n                                                                                                <div className='float-left' style={{ paddingTop: '0px' }}>\n                                                                                                    <ButtonGroup>\n                                                                                                        <div>\n                                                                                                            <Buttons className=\"textBlackButton center mr-1\" style={{ textDecoration: 'none' }} variant=\"link\" size=\"sm\" onClick={async () => {\n                                                                                                                await this.setAction(i, 0)\n                                                                                                            }}><b>Deposit</b></Buttons></div>\n                                                                                                        <div>\n                                                                                                            <Buttons className=\"textTransparentButton center mr-1\" style={{ textDecoration: 'none' }} variant=\"link\" size=\"sm\" onClick={async () => {\n                                                                                                                await this.setAction(i, 1)\n                                                                                                            }}>Withdraw</Buttons></div>\n                                                                                                    </ButtonGroup>\n                                                                                                </div>\n                                                                                            </div>\n                                                                                        }\n                                                                                        {/* {this.props.bavaLpSegmentAllowance[1][i] > 2000000000000000000000000000 ?\n                                                                                        <div><Deposit\n                                                                                            lpBalanceAccount={this.props.bavaLpBalanceAccount}\n                                                                                            poolSegmentInfo={this.props.bavaPoolSegmentInfo}\n                                                                                            userSegmentInfo={this.props.bavaUserSegmentInfo}\n                                                                                            i={i}\n                                                                                            n='1'\n                                                                                            v='1'\n                                                                                            deposit={this.props.deposit}\n                                                                                            withdraw={this.props.withdraw}\n                                                                                        /></div>\n                                                                                        :\n                                                                                        <div>\n                                                                                            <span className=\"float-left \" style={{ color: 'black' }}><small>Enable Pool</small></span>\n                                                                                            <Buttons className=\"btn-block\"\n                                                                                                variant=\"outline-primary\"\n                                                                                                size=\"sm\"\n                                                                                                style={{ minWidth: '80px' }}\n                                                                                                onClick={(event) => {\n                                                                                                    event.preventDefault()\n                                                                                                    this.props.approve(i, 1, 1)\n                                                                                                }}>\n                                                                                                Approve\n                                                                                            </Buttons>\n                                                                                        </div>} */}\n                                                                                    </div>\n                                                                                    <div className='borderBottom'></div>\n                                                                                    <div className='ml-1 mr-1'>\n                                                                                        {this.state.depositAction[i] == true ?\n                                                                                            <div><Deposit\n                                                                                                wallet={this.props.wallet}\n                                                                                                walletConnect={this.props.walletConnect}\n                                                                                                accountLoading={this.props.accountLoading}\n                                                                                                // lpBalanceAccount={this.props.lpBalanceAccountV2_3}\n                                                                                                // poolSegmentInfo={this.props.poolSegmentInfoV2_3}\n                                                                                                // userSegmentInfo={this.props.userSegmentInfoV2_3}\n                                                                                                lpSegmentAllowanceV2_3={this.props.bavaLpSegmentAllowance[1][i]}\n                                                                                                lpBalanceAccount={this.props.bavaLpBalanceAccount}\n                                                                                                poolSegmentInfo={this.props.bavaPoolSegmentInfo}\n                                                                                                userSegmentInfo={this.props.bavaUserSegmentInfo}\n                                                                                                i={i}\n                                                                                                n='1'\n                                                                                                v='1'\n                                                                                                approve={this.props.approve}\n                                                                                                deposit={this.props.deposit}\n                                                                                                withdraw={this.props.withdraw}\n                                                                                            /></div>\n                                                                                            :\n                                                                                            <div><Withdraw\n                                                                                                wallet={this.props.wallet}\n                                                                                                walletConnect={this.props.walletConnect}\n                                                                                                accountLoading={this.props.accountLoading}\n                                                                                                // lpBalanceAccount={this.props.lpBalanceAccountV2_3}\n                                                                                                // poolSegmentInfo={this.props.poolSegmentInfoV2_3}\n                                                                                                // userSegmentInfo={this.props.userSegmentInfoV2_3}\n                                                                                                lpSegmentAllowanceV2_3={this.props.bavaLpSegmentAllowance[1][i]}\n                                                                                                lpBalanceAccount={this.props.bavaLpBalanceAccount}\n                                                                                                poolSegmentInfo={this.props.bavaPoolSegmentInfo}\n                                                                                                userSegmentInfo={this.props.bavaUserSegmentInfo}\n                                                                                                i={i}\n                                                                                                n='1'\n                                                                                                v='1'\n                                                                                                approve={this.props.approve}\n                                                                                                deposit={this.props.deposit}\n                                                                                                withdraw={this.props.withdraw}\n                                                                                            /></div>\n                                                                                        }\n                                                                                    </div>\n                                                                                </div>\n                                                                            </div>\n                                                                        </div>\n                                                                    </div> :\n                                                                    <div className=\"center borderTop\" >\n                                                                        <span className=\"mt-3\" style={{ color: 'black' }}><small>Wallet Connection to Avalanche required</small></span>\n                                                                    </div>}\n                                                            </div>\n                                                            : <div></div>}\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    )\n                                }\n                                )}\n\n\n\n\n                                {/* {this.props.poolSegmentInfo[1].map((poolSegmentInfo, key) => {\n                                    let i = this.props.poolSegmentInfo[1].indexOf(poolSegmentInfo)\n                                    return (\n                                        <div key={key}>\n                                            {this.props.poolSegmentInfo[1][i].lpName == \"AVAX-JOE\" ? <div></div> :\n                                                <div>\n                                                    <div className=\"card mb-3 cardbody\">\n                                                        <div className=\"card-body\" style={{ padding: '1rem' }}>\n                                                            <div>\n                                                                <div>\n                                                                    <div className=\"float-left\">\n                                                                        <div className=\"textMiddle\"><b>{this.props.poolSegmentInfo[1][i].lpName}{this.props.poolSegmentInfo[1][i].status}</b></div>\n                                                                        <div className=\"textGrey exLink0\" onClick={() => {\n                                                                            window.open(this.props.poolSegmentInfo[1][i].projectLink, '_blank')\n                                                                        }}>Uses: {this.props.poolSegmentInfo[1][i].platform} <img src={exlink} style={{ marginBottom: \"3px\" }} height='12' alt=\"\" /></div>\n                                                                        <div className=\"textGrey exLink0\" onClick={() => {\n                                                                            window.open(this.props.poolSegmentInfo[1][i].getLPLink, '_blank')\n                                                                        }}>Get {this.props.poolSegmentInfo[1][i].lpName} <img src={exlink} style={{ marginBottom: \"3px\" }} height='12' alt=\"\" /></div>\n                                                                        <div className=\"textGrey exLink0\" onClick={() => {\n                                                                            window.open(this.props.bavaContract, '_blank')\n                                                                        }}>View On Explorer <img src={exlink} style={{ marginBottom: \"3px\" }} height='12' alt=\"\" /></div>\n                                                                    </div>\n                                                                    <div className=\"float-right mr-auto\">\n                                                                        <table>\n                                                                            <thead className=\"textBlackSmall\" style={{ color: 'black' }}>\n                                                                                <tr>\n                                                                                    <th scope=\"col\" width=\"140\">Wallet</th>\n                                                                                    <th scope=\"col\" width=\"140\">Deposited</th>\n                                                                                    <th scope=\"col\">Growth</th>\n                                                                                    <th scope=\"col\">APR&nbsp;<Popup\n                                                                                        trigger={open => (<span><BsFillQuestionCircleFill style={{ marginBottom: \"2px\" }} size={10} /></span>)}\n                                                                                        on=\"hover\"\n                                                                                        offsetY={-8}\n                                                                                        offsetX={5}\n                                                                                        position=\"right center\"\n                                                                                        contentStyle={{ width: '150px' }}\n                                                                                    ><div className=\"textInfo\">APR Breakdown: </div><br />\n                                                                                        <div className=\"textInfo\">Baklava   : {parseFloat(this.props.apr[1][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })} %</div><br />\n                                                                                        <div className=\"textInfo\">TraderJoe : {parseFloat(this.props.poolSegmentInfo[1][i].total3rdPartyAPR).toLocaleString('en-US', { maximumFractionDigits: 0 })} %</div>\n                                                                                    </Popup></th>\n                                                                                    <th scope=\"col\">APY <Popup\n                                                                                    trigger={open => (<span><BsFillQuestionCircleFill style={{ marginBottom: \"2px\" }} size={10} /></span>)}\n                                                                                    on=\"hover\"\n                                                                                    offsetY={-8}\n                                                                                    offsetX={5}\n                                                                                    position=\"right center\"\n                                                                                    contentStyle={{ width: '150px' }}\n                                                                                ><div className=\"textInfo\"><small>APY are calculated based on the compound APR number excluded locked reward.</small></div><br />\n                                                                                    <div className=\"textInfo\"><small>The value shown is based on daily compounding frequency.</small></div>\n                                                                                </Popup></th>\n                                                                                    <th scope=\"col\">TVL</th>\n                                                                                </tr>\n                                                                            </thead>\n                                                                            <tbody className=\"textGrey\">\n                                                                                <tr>\n                                                                                    <td className=\"\">{(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.lpBalanceAccount[1][i], 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 18 })}</div> : <div className=\"center\">\n                                                                                        <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>}</td>\n                                                                                    <td className=\"\">{(this.props.wallet || this.props.walletConnect) && this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.userSegmentInfo[1][i], 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 18 })}</div> : <div className=\"center\">\n                                                                                        <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\n                                                                                    <td className=\"\">{this.props.aprloading ? <div>{parseFloat(this.props.returnRatio[1][i]).toLocaleString('en-US', { maximumFractionDigits: 5 })}</div> : <div className=\"center\">\n                                                                                        <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\n                                                                                    <td className=\"\">{this.props.aprloading ? <div>{(parseFloat(this.props.apr[1][i]) + + parseFloat(this.props.poolSegmentInfo[1][i].total3rdPartyAPR)).toLocaleString('en-US', { maximumFractionDigits: 0 })}%</div> : <div className=\"center\">\n                                                                                        <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>} </td>\n                                                                                    <td className=\"\">{this.props.aprloading ? <div>{parseFloat(this.props.apyDaily[1][i])>1000000 ? <div>&#x3e;100,000%</div> : <div>{parseFloat(this.props.apyDaily[1][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })}%</div>}</div> : <div className=\"center\">\n                                                                                        <div className=\"lds-facebook\"><div></div><div></div><div></div></div></div>}</td>\n                                                                                    <td className=\"\">$ {parseFloat(this.props.tvl[1][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })} </td>\n                                                                                </tr>\n                                                                            </tbody>\n                                                                        </table>\n                                                                    </div>\n                                                                </div>\n                                                                <br /><br /><br /><br />\n                                                                {this.props.farmV2Open[i] ?\n                                                                    <div>\n                                                                        <div>\n                                                                            <Buttons variant=\"outline-secondary\" size=\"sm\" style={{ width: '60px' }} onClick={() => {\n                                                                                // this.props.setTrigger(true)\n                                                                                this.props.setI(i, false, 2)\n                                                                            }}>Close</Buttons>&nbsp;&nbsp;&nbsp;</div>\n                                                                        {this.props.wallet || this.props.walletConnect ? <div className=\"borderTop \"><br /><div className=\"rowC\">\n                                                                            <div className=\"card cardbody float-left mr-3\" style={{ width: '300px' }}>\n                                                                                <div className=\"card-body\" style={{ padding: '0.5rem' }}>\n                                                                                    <span className=\"float-left\" style={{ color: 'black' }}><small>BAVA earned</small></span><br />\n                                                                                    <span className=\"float-left\" style={{ color: 'black', marginTop: '8px' }}><small>{this.props.accountLoading ? <div>{parseFloat(window.web3Ava.utils.fromWei(this.props.pendingSegmentReward[1][i], 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 0 })}</div> :\n                                                                                        <div className=\"ml-3 lds-facebook\"><div></div><div></div><div></div></div>}</small></span>\n                                                                                    <span className=\"float-right\">\n                                                                                        <Buttons\n                                                                                            variant=\"success\"\n                                                                                            size=\"sm\"\n                                                                                            style={{ minWidth: '80px' }}\n                                                                                            onClick={(event) => {\n                                                                                                event.preventDefault()\n                                                                                                this.props.harvest(i, 1, 2)\n                                                                                            }}>\n                                                                                            Harvest\n                                                                                        </Buttons></span>\n                                                                                </div>\n                                                                            </div>\n                                                                            <div className=\"float-right\">\n                                                                                <span className=\"card cardbody float-right\" style={{ width: '650px' }}>\n                                                                                    <div className=\"card-body\" style={{ padding: '0.5rem' }}>\n                                                                                        {this.props.lpSegmentAllowance[1][i] > 2000000000000000000000000000 ?\n                                                                                            <div><Deposit\n                                                                                                lpBalanceAccount={this.props.lpBalanceAccount}\n                                                                                                poolSegmentInfo={this.props.poolSegmentInfo}\n                                                                                                userSegmentInfo={this.props.userSegmentInfo}\n                                                                                                i={i}\n                                                                                                n='1'\n                                                                                                v='2'\n                                                                                                deposit={this.props.deposit}\n                                                                                                withdraw={this.props.withdraw}\n                                                                                                approve={this.props.approve}\n                                                                                            /></div>\n                                                                                            :\n                                                                                            <div>\n                                                                                                <span className=\"float-left \" style={{ color: 'black' }}><small>Enable Pool</small></span>\n                                                                                                <Buttons className=\"btn-block\"\n                                                                                                    variant=\"outline-primary\"\n                                                                                                    size=\"sm\"\n                                                                                                    style={{ minWidth: '80px' }}\n                                                                                                    onClick={(event) => {\n                                                                                                        event.preventDefault()\n                                                                                                        this.props.approve(i, 1, 2)\n                                                                                                    }}>\n                                                                                                    Approve\n                                                                                                </Buttons>\n                                                                                            </div>}\n                                                                                    </div>\n                                                                                </span>\n                                                                            </div>\n                                                                        </div>\n                                                                        </div> :\n                                                                            <div className=\"center borderTop\" >\n                                                                                <br /><br />\n                                                                                <span style={{ color: 'black' }}><small>Wallet Connection to Avalanche required</small></span>\n                                                                            </div>}\n                                                                    </div> :\n                                                                    <div>\n                                                                        <Buttons variant=\"outline-secondary\" size=\"sm\" style={{ width: '60px' }} onClick={() => {\n                                                                            // this.props.setTrigger(true)\n                                                                            this.props.setI(i, true, 2)\n                                                                        }}><b>Open</b></Buttons>&nbsp;&nbsp;&nbsp;</div>}\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            }\n                                        </div>\n                                    )\n                                })} */}\n                            </div>\n                            :\n                            <div className=\"center\">\n                                <div style={{ marginBottom: '350px' }}>\n                                    <div className=\"bounceball\"></div> &nbsp;\n                                    <div className=\"textLoadingSmall\">NETWORK IS Loading...</div>\n                                    {/* <div className=\"textLoadingSmall\">Sorry, we're down for scheduled mainenance right now.</div> */}\n                                </div>\n                            </div>\n                        }\n                    </div>\n                </div><br /><br /><br />\n                <Footer />\n            </div >\n        );\n    }\n}\n\nexport default TraderJoe;\n","import React, { Component } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport './App.css';\nimport Footer from './Footer'\n\nclass Airdrop extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = { addValid: false }\n        this.state = { message: '' }\n        this.state = { claimMessage: '' }\n    }\n\n    render() {\n        return (\n            <div id=\"content\" className=\"mt-4\">\n                <label className=\"textWhite center mb-5\" style={{ fontSize: '40px', color: 'black' }}><big><b>BAVA Airdrop</b></big></label>\n                <div className=\"rowC center\">\n                    <div className=\"card cardbody mr-3\" style={{ width: '450px', height: '450px', color: 'black' }}>\n                        <div className=\"card-body center\">\n                            <div>\n                                <table className=\" textBlackSmall text-center mb-4\" style={{ width: '400px', color: 'black' }}>\n                                    <thead>\n                                        <tr >\n                                            <th scope=\"col\">Start Date</th>\n                                            <th scope=\"col\">End Date</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        <tr>\n                                            <td>{this.props.timeConverter(this.props.airdropStart)}</td>\n                                            <td>{this.props.timeConverter(this.props.airdropEnd)}</td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                                <table className=\" textBlackSmall text-center mb-4\" style={{ width: '400px', color: 'black' }}>\n                                    <thead>\n                                        <tr>\n                                            <th scope=\"col\">Airdrop Amount</th>\n                                            <th scope=\"col\" style={{ border: '0px' }}></th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        <tr>\n                                            <td>{parseFloat(window.web3Ava.utils.fromWei(this.props.airdropAmount, 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 0 })} BAVA</td>\n                                            <td style={{ border: '0px' }}></td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                                <div className='left'>\n                                    <div className=\"textBlackMedium ml-3\" style={{ color: 'black' }}><b>How to claim token:</b></div>\n                                    <div>\n                                        <li className=\"textBlackSmall\">Make sure web app is connected to the wallet (Avalanche).</li>\n                                        <li className=\"textBlackSmall\">Check if your address is registered airdrop address.</li>\n                                        <li className=\"textBlackSmall\">Make sure you have AVAX to pay for transaction fees (~1 USD worth of AVAX, paid to the network).</li>\n                                        <li className=\"textBlackSmall\">Click on claim and confirm the transaction to claim your BAVA tokens.</li>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    {this.props.wallet || this.props.walletConnect ?\n\n                        // <div className=\"card cardbody\" style={{ width: '450px', color: 'white' }}>\n                        //     <div className=\"card-body\">\n                        //         <div>\n                        //             <div>\n                        //                 <div className=\"textBlackMedium mb-1\"><b>Address:</b></div>\n                        //                 <div className=\"textBlackSmall mb-1\"><b>{this.props.account}</b></div>\n                        //             </div>\n                        //             <div className=\"center mt-2 mb-4\">\n                        //                 <Button\n                        //                     className=\"btn-block\"\n                        //                     variant=\"success\"\n                        //                     size=\"sm\"\n                        //                     style={{ minWidth: '80px' }}\n                        //                     onClick={(event) => {\n                        //                         event.preventDefault()\n                        //                         this.props.checkAirdrop(this.props.account)\n                        //                     }}>Check\n                        //                 </Button>\n                        //             </div>\n                        //             {this.props.airdropCheck ? <div>{this.props.validAirdrop ? <div className=\"textBlackMedium\">Result: Address registered\n                        //             <div className=\"center mt-2 mb-4\">\n                        //                 <Button\n                        //                     className=\"btn-block\"\n                        //                     variant=\"primary\"\n                        //                     size=\"sm\"\n                        //                     style={{ minWidth: '80px' }}\n                        //                     onClick={(event) => {\n                        //                         event.preventDefault()\n                        //                         this.props.claimAirdrop()\n                        //                     }}>Claim\n                        //                 </Button>\n                        //             </div>\n                        //             </div>\n                        //             :<div className=\"textBlackMedium\">Result: Address not registered</div>                                    \n                        //             }</div>\n                        //             : <div></div>                                    \n                        //         }\n\n                        //         </div>\n                        //     </div>\n                        // </div>\n                        <div className=\"card cardbody\" style={{ width: '450px', height: '150px' }}>\n                            <div className=\"card-body\">\n                                <div>\n                                    <div className=\"center textBlackMedium mt-2\" style={{ color: 'black', fontSize: '18px' }}><b><big>First airdrop claim period has ended!</big></b></div>\n                                    <div className=\"center comingSoon mt-4\" style={{ color: '#ffae00', fontSize: '18px', opacity: \"0\" }}><b><big>2ND AIRDROP IS COMING SOON!</big></b></div>\n                                </div>\n                            </div>\n                        </div>\n                        :\n                        <div className=\"card cardbody\" style={{ width: '450px', height: '150px' }}>\n                            <div className=\"card-body\">\n                                <div>\n                                    <div className=\"center textBlackMedium mt-2\" style={{ color: 'black', fontSize: '18px' }}><b><big>First airdrop claim period has ended!</big></b></div>\n                                    <div className=\"center comingSoon mt-4\" style={{ color: '#ffae00', fontSize: '18px', opacity: \"0\" }}><b><big>2ND AIRDROP IS COMING SOON!</big></b></div>\n                                    {/* <div className=\"center textBlackMedium mt-2 mb-3\"><b>Connect wallet to claim BAVA airdrop</b></div> */}\n                                    {/* <div className=\"center mt-4\"><button type=\"submit\" className=\"btn btn-primary btn-lg mt-3\" onClick={async () => {\n                                        await this.props.connectMetamask()\n                                    }}>Connect</button></div> */}\n                                </div>\n                            </div>\n                        </div>\n                    }\n                </div><br /><br /><br /><Footer />\n            </div >\n        );\n    }\n}\n\nexport default Airdrop;\n","import React, { Component } from 'react'\nimport litepaper from './images/Litepaper_Protocol.pdf'\nimport litepaper_turkish from './images/Litepaper_Protocol(turkish).pdf'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Buttons from 'react-bootstrap/Button'\nimport './App.css';\nimport baklava from './images/baklava.webp';\nimport discord from './images/discord.svg'\nimport twitter from './images/twitter.svg'\nimport medium from './images/medium.svg'\nimport git from './images/github.svg'\nimport gitbook from './images/docs.svg'\n\nclass LitePaper extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            turkish: false,\n            english: false\n        }\n        this.clickLanguage = this.clickLanguage.bind(this)\n    }\n\n    clickLanguage(language, boolean) {\n        // this.setState({\n        //     farmV2_2Open[pair]: boolean\n        // })\n        let ntg = 0\n        if (language == \"turkish\") {\n            this.state.turkish = boolean\n            this.state.english = false\n        } else {\n            this.state.english = boolean\n            this.state.turkish = false\n        }\n        this.setState({ ntg })  //do ntg, just to push react setstate\n    }\n\n    render() {\n        return (\n            <div id=\"content\">\n                <span className=\"center mb-3\">\n                    {this.state.turkish ?\n                        <div>\n                            <Buttons style={{ color: \"black\", fontSize: \"16px\" }} variant=\"link\" size=\"sm\" onClick={async () => {\n                                await this.clickLanguage(\"english\", true)\n                            }}>English</Buttons>\n                            <Buttons style={{ color: \"#ff9a04\", border: \"1px solid #ff9a04\", fontSize: \"16px\" }} variant=\"link\" size=\"sm\" onClick={async () => {\n                                await this.clickLanguage(\"turkish\", true)\n                            }}>Turkish</Buttons>\n                        </div>\n                        : <div>\n                            <Buttons style={{ color: \"#ff9a04\", border: \"1px solid #ff9a04\", fontSize: \"16px\" }} variant=\"link\" size=\"sm\" onClick={async () => {\n                                await this.clickLanguage(\"english\", true)\n                            }}>English</Buttons>\n                            <Buttons style={{ color: \"black\", fontSize: \"16px\" }} variant=\"link\" size=\"sm\" onClick={async () => {\n                                await this.clickLanguage(\"turkish\", true)\n                            }}>Turkish</Buttons>\n                        </div>}\n                </span>\n                <div className=\"center textMiddle\">\n                    {this.state.turkish ? <object data={litepaper_turkish} type=\"application/pdf\" width=\"1000px\" height=\"950px\"></object> : <object data={litepaper} type=\"application/pdf\" width=\"1000px\" height=\"950px\"></object>}\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default LitePaper;\n","import React, { Component } from 'react'\nimport './App.css';\nimport Footer from './Footer'\n\nclass Airdrop extends Component {\n\n    render() {\n        return (\n            <div id=\"content\" className=\"mt-5\">\n                <label className=\"textWhite center mb-5\" style={{ fontSize: '40px', color: 'black' }}><big><b>Mint your synthetic asset</b></big></label>\n                <div className=\"center \" style={{ marginTop: \"25px\" }}>\n                    <img src=\"https://whitelist.mirror.finance/images/AAPL.png\" width=\"50\" height=\"50\" alt=\"\" />&nbsp;&nbsp;\n                    <img src=\"https://whitelist.mirror.finance/images/TSLA.png\" width=\"50\" height=\"50\" alt=\"\" />&nbsp;&nbsp;\n                    <img src=\"https://whitelist.mirror.finance/images/FB.png\" width=\"50\" height=\"50\" alt=\"\" />&nbsp;&nbsp;\n                    <img src=\"https://whitelist.mirror.finance/images/GOOGL.png\" width=\"50\" height=\"50\" alt=\"\" />&nbsp;&nbsp;\n                    <img src=\"https://whitelist.mirror.finance/images/ABNB.png\" width=\"50\" height=\"50\" alt=\"\" />&nbsp;&nbsp;\n                </div>\n                <div className=\"center comingSoon\" style={{ color: '#ffae00', fontSize: '40px', marginTop: \"80px\", opacity: \"0\" }}><b><big>Coming Soon!</big></b></div>\n                <div className='center fixed-bottom'><Footer /></div>                \n            </div>\n        );\n    }\n}\n\nexport default Airdrop;","import React, { Component } from 'react'\r\nimport Web3 from 'web3'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\n\r\nimport LpToken from '../abis/Interface/LpToken.json'\r\nimport IPancakePair from '../abis/Interface/IPancakePair.json'\r\nimport BavaToken from '../abis/BavaToken.json'\r\nimport BavaMasterFarmer from '../abis/BavaMasterFarmerV2.json'\r\nimport BavaMasterFarmerV1 from '../abis/BavaMasterFarmerV1.json'\r\nimport BavaMasterFarmerV2_2 from '../abis/BavaMasterFarmerV2_2.json'\r\nimport BavaMasterFarmerV2_3 from '../abis/BavaMasterFarmerV2_3.json'\r\nimport BavaCompoundPool from '../abis/BavaCompoundPool.json'\r\nimport BavaCompoundPoolVariable from '../abis/BavaCompoundPoolVariable.json'\r\nimport BavaAirdrop from '../abis/BavaAirdrop.json'\r\nimport StakingRewards from '../abis/StakingRewards.json'\r\n\r\nimport Farm from './tokens_config/farm.json'\r\nimport FarmV1 from './tokens_config/farmV1.json'\r\nimport FarmV2_2 from './tokens_config/farmV2_2.json'\r\nimport FarmV2_3 from './tokens_config/farmV2_3.json'\r\nimport AirdropList from './tokens_config/airdrop.json'\r\n\r\nimport Navb from './Navbar'\r\nimport NavbMenu from './NavbarMenu'\r\nimport Main from './Main'\r\nimport Menu from './Menu'\r\nimport MenuV2 from './MenuV2'\r\nimport Kyber from './Kyber'\r\nimport Stake from './Stake'\r\nimport TraderJoe from './TraderJoe'\r\nimport TraderJoeV2 from './TraderJoeV2'\r\nimport Airdrop from './Airdrop'\r\nimport LitePaper from './LitePaper'\r\nimport Synthetic from './Synthetic'\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n\r\n  async componentWillMount() {\r\n    await this.loadWeb3()\r\n    await this.loadFarmData()\r\n    await this.loadBlockchainData()\r\n    this.loadTVLAPR()\r\n    while ((this.state.wallet || this.state.walletConnect) == true) {\r\n      await this.loadBlockchainUserData()\r\n      await this.delay(10000);\r\n    }\r\n  }\r\n\r\n  async loadFarmData() {\r\n    const farm = Farm.farm\r\n    this.setState({ farm })\r\n    const farmBava = FarmV1.farm\r\n    this.setState({ farmBava })\r\n    const farmV2_2 = FarmV2_2.farm\r\n    this.setState({ farmV2_2 })\r\n    const farmV2_3 = FarmV2_3.farm\r\n    this.setState({ farmV2_3 })\r\n    const airdropList = AirdropList\r\n    this.setState({ airdropList })\r\n  }\r\n\r\n  async loadBlockchainData() {\r\n    const web3Ava = window.web3Ava\r\n    const networkId = process.env.REACT_APP_networkid\r\n    this.setState({ networkId })\r\n    const farmNetworkId = process.env.REACT_APP_farmnetworkid\r\n    this.setState({ farmNetworkId })\r\n    const farmNetwork = process.env.REACT_APP_farmnetwork\r\n    this.setState({ farmNetwork })\r\n\r\n    const bavaContract = 'https://snowtrace.io/address/0xb5a054312a73581a3c0fed148b736911c02f4539'\r\n    this.setState({ bavaContract })\r\n\r\n    if (window.ethereum) {\r\n      const chainId = await window.ethereum.request({ method: 'eth_chainId' });\r\n      this.setState({ chainId })\r\n\r\n      if (this.state.chainId == \"0x61\") {\r\n        this.setState({ networkName: \"BSC Testnet\" })\r\n      } else if (this.state.chainId == \"0x38\") {\r\n        this.setState({ networkName: \"BSC\" })\r\n      } else if (this.state.chainId == \"0x1\") {\r\n        this.setState({ networkName: \"Ethereum\" })\r\n      } else if (this.state.chainId == \"0x3\") {\r\n        this.setState({ networkName: \"Ropsten\" })\r\n      } else if (this.state.chainId == \"0x4\") {\r\n        this.setState({ networkName: \"Rinkeby\" })\r\n      } else if (this.state.chainId == \"0x2a\") {\r\n        this.setState({ networkName: \"Kovan\" })\r\n      } else if (this.state.chainId == \"0x89\") {\r\n        this.setState({ networkName: \"Polygon\" })\r\n      } else if (this.state.chainId == \"0x13881\") {\r\n        this.setState({ networkName: \"Mumbai\" })\r\n      } else if (this.state.chainId == \"0xa869\") {\r\n        this.setState({ networkName: \"Fuji\" })\r\n      } else if (this.state.chainId == \"0xa86a\") {\r\n        this.setState({ networkName: \"Avalanche\" })\r\n      }\r\n\r\n      window.ethereum.on('chainChanged', this.handleChainChanged);\r\n      window.ethereum.on('accountsChanged', this.handleAccountsChanged);\r\n\r\n    } else {\r\n      this.setState({ chainID: \"0x\" })\r\n      this.setState({ networkName: \"Unavailable\" })\r\n    }\r\n\r\n    // Load contract\r\n    const bavaToken = new web3Ava.eth.Contract(BavaToken.abi, process.env.REACT_APP_bavatoken_address)\r\n    const bavaMasterFarmer = new web3Ava.eth.Contract(BavaMasterFarmer.abi, process.env.REACT_APP_bavamasterfarmv2_address)\r\n    const bavaMasterFarmerV1 = new web3Ava.eth.Contract(BavaMasterFarmerV1.abi, process.env.REACT_APP_bavamasterfarmv1_address)\r\n    const bavaAirdrop = new web3Ava.eth.Contract(BavaAirdrop.abi, process.env.REACT_APP_airdrop_address)\r\n    const bavaStake = new web3Ava.eth.Contract(StakingRewards.abi, process.env.REACT_APP_staking_rewards_address)\r\n    const bavaMasterFarmerV2_2 = new web3Ava.eth.Contract(BavaMasterFarmerV2_2.abi, process.env.REACT_APP_bavamasterfarmv2_2address)\r\n    const bavaMasterFarmerV2_3 = new web3Ava.eth.Contract(BavaMasterFarmerV2_3.abi, process.env.REACT_APP_bavamasterfarmv2_3address)\r\n\r\n    this.setState({ bavaToken })\r\n    this.setState({ bavaMasterFarmer })\r\n    this.setState({ bavaMasterFarmerV1 })\r\n    this.setState({ bavaAirdrop })\r\n    this.setState({ bavaStake })\r\n    this.setState({ bavaMasterFarmerV2_2 })\r\n    this.setState({ bavaMasterFarmerV2_3 })\r\n\r\n    let response0 = this.loadPoolLength()\r\n    let response1 = this.loadBavaPoolLength()\r\n    let response2 = this.loadAirdropIteration()\r\n    let response3 = this.loadAirdropAmount()\r\n    let response5 = this.loadAirdropStart()\r\n    let response6 = this.loadAirdropEnd()\r\n    let response7 = this.loadTotalStake()\r\n    let response8 = this.loadRewardRate()\r\n    let response9 = this.loadPoolLengthV2_2()\r\n    let response10 = this.loadPoolLengthV2_3()\r\n\r\n    let poolLength = await response0\r\n\r\n    let bavaPoolLength = await response1\r\n    let airdropIteration = await response2\r\n    let airdropAmount = await response3\r\n    let airdropStart = await response5\r\n    let airdropEnd = await response6\r\n    let totalStake = await response7\r\n    let rewardRate = await response8\r\n    let poolLengthV2_2 = await response9\r\n    let poolLengthV2_3 = await response10\r\n\r\n    this.setState({ poolLength })\r\n    this.setState({ bavaPoolLength })\r\n    this.setState({ airdropIteration })\r\n    this.setState({ airdropAmount })\r\n    this.setState({ totalStake })\r\n    this.setState({ rewardRate })\r\n    this.setState({ airdropStart })\r\n    this.setState({ airdropEnd })\r\n    this.setState({ poolLengthV2_2 })\r\n    this.setState({ poolLengthV2_3 })\r\n\r\n    if (this.state.wallet == false && this.state.walletConnect == false) {\r\n\r\n      let bavaPoolSegmentInfo = [[], []]\r\n      let poolSegmentInfo = [[], []]\r\n      let poolSegmentInfoV2_2 = [[], []]\r\n      let poolSegmentInfoV2_3 = [[], [], []]\r\n      let returnRatio = [[], []]\r\n      let bavaReturnRatio = [[], []]\r\n      let returnRatioV2_2 = [[], []]\r\n      let returnRatioV2_3 = [[], [], []]\r\n      let reinvestAmount = [[], [], []]\r\n      let n = 0\r\n      let b = 0\r\n      let c = 0\r\n      let d = 0\r\n\r\n      let bavaLpTokenPairsymbols = []\r\n      let lpTokenPairsymbols = []\r\n      let lpTokenPairsymbolsV2_2 = []\r\n      let lpTokenPairsymbolsV2_3 = []\r\n      let bavaLpTokenAddresses = []\r\n      let lpTokenAddresses = []\r\n      let lpTokenAddressesV2_2 = []\r\n      let lpTokenAddressesV2_3 = []\r\n      let returnRatioArray = this.state.myJsonMongo[\"ReturnRatio\"]\r\n      let returnRatioArrayV2_2 = this.state.myJsonMongo[\"ReturnRatioV2_2\"]\r\n      let returnRatioArrayV2_3 = this.state.myJsonMongo[\"ReturnRatioV2_3\"]\r\n\r\n      // UserInfo\r\n      let totalpendingReward = \"0\"\r\n      let bavaTokenBalance = \"0\"\r\n      let pendingSegmentReward = [[], []]\r\n\r\n      this.setState({ bavaTokenBalance: bavaTokenBalance.toString() })\r\n      this.setState({ totalpendingReward: totalpendingReward.toLocaleString('fullwide', { useGrouping: false }) })\r\n      this.setState({ pendingSegmentReward })\r\n\r\n      let responseV2_3 = []\r\n      for (let i = 0; i < this.state.poolLengthV2_3; i++) {\r\n        responseV2_3[i] = this.loadFarmReinvest(i)\r\n      }\r\n\r\n      for (let i = 0; i < this.state.poolLengthV2_3; i++) {\r\n        let poolInfo = this.state.farmV2_3[i]\r\n        let lpTokenAddress = poolInfo.lpAddresses[farmNetworkId]\r\n        let lpTokenPairsymbol = poolInfo.lpTokenPairsymbol\r\n        lpTokenPairsymbolsV2_3[i] = lpTokenPairsymbol\r\n        lpTokenAddressesV2_3[i] = lpTokenAddress\r\n        if (lpTokenPairsymbol == \"PGL\" || lpTokenPairsymbol == \"PNG\") {\r\n          poolSegmentInfoV2_3[0][d] = poolInfo\r\n          returnRatioV2_3[0][d] = returnRatioArrayV2_3[d][\"returnRatio\"]\r\n          reinvestAmount[0][d] = await responseV2_3[i]\r\n          d += 1\r\n        } else if (lpTokenPairsymbol == \"JLP\") {\r\n          poolSegmentInfoV2_3[1][d] = poolInfo\r\n          returnRatioV2_3[1][d] = returnRatioArrayV2_3[d][\"returnRatio\"]\r\n          reinvestAmount[1][d] = await responseV2_3[i]\r\n          d += 1\r\n        } else {\r\n          poolSegmentInfoV2_3[2][d] = poolInfo\r\n          returnRatioV2_3[2][d] = returnRatioArrayV2_3[d][\"returnRatio\"]\r\n          reinvestAmount[2][d] = await responseV2_3[i]\r\n          d += 1\r\n        }\r\n      }\r\n\r\n      for (let i = 0; i < this.state.bavaPoolLength; i++) {\r\n        let bavaPoolInfo = this.state.farmBava[i]\r\n        let bavaLpTokenAddress = bavaPoolInfo.lpAddresses[farmNetworkId]\r\n        let bavaLpTokenPairsymbol = bavaPoolInfo.lpTokenPairsymbol\r\n        bavaLpTokenPairsymbols[i] = bavaLpTokenPairsymbol\r\n        bavaLpTokenAddresses[i] = bavaLpTokenAddress\r\n\r\n        if (bavaLpTokenPairsymbol == \"PGL\" || bavaLpTokenPairsymbol == \"PNG\") {\r\n          bavaPoolSegmentInfo[0][b] = bavaPoolInfo\r\n          bavaReturnRatio[0][b] = 1\r\n          b += 1\r\n        } else {\r\n          bavaPoolSegmentInfo[1][b] = bavaPoolInfo\r\n          bavaReturnRatio[1][b] = 1\r\n          b += 1\r\n        }\r\n      }\r\n\r\n      for (let i = 0; i < this.state.poolLength; i++) {\r\n        let poolInfo = this.state.farm[i]\r\n        let lpTokenAddress = poolInfo.lpAddresses[farmNetworkId]\r\n        let lpTokenPairsymbol = poolInfo.lpTokenPairsymbol\r\n        lpTokenPairsymbols[i] = lpTokenPairsymbol\r\n        lpTokenAddresses[i] = lpTokenAddress\r\n\r\n        if (lpTokenPairsymbol == \"PGL\" || lpTokenPairsymbol == \"PNG\") {\r\n          poolSegmentInfo[0][n] = poolInfo\r\n          returnRatio[0][n] = returnRatioArray[n][\"returnRatio\"]\r\n          n += 1\r\n        } else {\r\n          poolSegmentInfo[1][n] = poolInfo\r\n          returnRatio[1][n] = returnRatioArray[n][\"returnRatio\"]\r\n          n += 1\r\n        }\r\n      }\r\n\r\n      for (let i = 0; i < this.state.poolLengthV2_2; i++) {\r\n        let poolInfo = this.state.farmV2_2[i]\r\n        let lpTokenAddress = poolInfo.lpAddresses[farmNetworkId]\r\n        let lpTokenPairsymbol = poolInfo.lpTokenPairsymbol\r\n        lpTokenPairsymbolsV2_2[i] = lpTokenPairsymbol\r\n        lpTokenAddressesV2_2[i] = lpTokenAddress\r\n\r\n        if (lpTokenPairsymbol == \"PGL\" || lpTokenPairsymbol == \"PNG\") {\r\n          poolSegmentInfoV2_2[0][c] = poolInfo\r\n          returnRatioV2_2[0][c] = returnRatioArrayV2_2[c][\"returnRatio\"]\r\n          c += 1\r\n        } else {\r\n          poolSegmentInfoV2_2[1][c] = poolInfo\r\n          returnRatioV2_2[1][c] = returnRatioArrayV2_2[c][\"returnRatio\"]\r\n          c += 1\r\n        }\r\n      }\r\n\r\n      this.setState({ poolSegmentInfo })\r\n      this.setState({ poolSegmentInfoV2_2 })\r\n      this.setState({ poolSegmentInfoV2_3 })\r\n      this.setState({ bavaPoolSegmentInfo })\r\n\r\n      this.setState({ lpTokenPairsymbols })\r\n      this.setState({ lpTokenPairsymbolsV2_2 })\r\n      this.setState({ lpTokenPairsymbolsV2_3 })\r\n      this.setState({ bavaLpTokenPairsymbols })\r\n\r\n      this.setState({ lpTokenAddresses })\r\n      this.setState({ lpTokenAddressesV2_2 })\r\n      this.setState({ lpTokenAddressesV2_3 })\r\n      this.setState({ bavaLpTokenAddresses })\r\n\r\n      this.setState({ returnRatio })\r\n      this.setState({ returnRatioV2_2 })\r\n      this.setState({ returnRatioV2_3 })\r\n      this.setState({ bavaReturnRatio })\r\n\r\n      this.setState({ reinvestAmount })\r\n      this.setState({ farmloading: true })\r\n    }\r\n  }\r\n  // ############ Load User blockchain data #############################################################################################################\r\n\r\n  async loadBlockchainUserData() {\r\n    // Load bavaToken\r\n    let userResponse0 = this.loadBavaTokenBalance()\r\n    let userResponse1 = this.loadLockedBavaTokenBalance()\r\n    let userResponse2 = this.loadBavaTokenAllowance()\r\n    let userResponse3 = this.loadEarnedAmount()\r\n    let userResponse4 = this.loadStakeAmount()\r\n\r\n    let bavaTokenBalance = await userResponse0\r\n    let lockedBavaTokenBalance = await userResponse1\r\n    let bavaTokenAllowance = await userResponse2\r\n    let earnedAmount = await userResponse3\r\n    let stakeAmount = await userResponse4\r\n\r\n    this.setState({ bavaTokenBalance: bavaTokenBalance.toString() })\r\n    this.setState({ lockedBavaTokenBalance: lockedBavaTokenBalance.toString() })\r\n    this.setState({ bavaTokenAllowance: bavaTokenAllowance.toString() })\r\n    this.setState({ stakeAmount: stakeAmount.amount })\r\n    this.setState({ earnedAmount })\r\n\r\n    let poolSegmentInfo = [[], []]\r\n    let poolSegmentInfoV2_2 = [[], []]\r\n    // let poolSegmentInfoV2_3 = [[], []]\r\n    let bavaPoolSegmentInfo = [[], []]\r\n    let totalpendingReward = 0\r\n\r\n    let userSegmentInfo = [[], []]\r\n    let lpBalanceAccount = [[], []]\r\n    let lpSegmentAllowance = [[], []]\r\n    let pendingSegmentReward = [[], []]\r\n\r\n    let userSegmentInfoV2_2 = [[], []]\r\n    let lpBalanceAccountV2_2 = [[], []]\r\n    let lpSegmentAllowanceV2_2 = [[], []]\r\n    let pendingSegmentRewardV2_2 = [[], []]\r\n\r\n    let userSegmentInfoV2_3 = [[], [], []]\r\n    let lpBalanceAccountV2_3 = [[], [], []]\r\n    let lpSegmentAllowanceV2_3 = [[], [], []]\r\n    let pendingSegmentRewardV2_3 = [[], [], []]\r\n\r\n    let bavaUserSegmentInfo = [[], []]\r\n    let bavaLpBalanceAccount = [[], []]\r\n    let bavaLpSegmentAllowance = [[], []]\r\n    let bavaPendingSegmentReward = [[], []]\r\n\r\n    let b = 0\r\n    let n = 0\r\n    let c = 0\r\n    let d = 0\r\n    let i = 0\r\n\r\n    let response0 = []\r\n    let response1 = []\r\n    let response2 = []\r\n    let response3 = []\r\n    let response0V2_2 = []\r\n    let response1V2_2 = []\r\n    let response2V2_2 = []\r\n    let response3V2_2 = []\r\n    let response0V2_3 = []\r\n    let response1V2_3 = []\r\n    let response2V2_3 = []\r\n    let response3V2_3 = []\r\n    let bavaResponse0 = []\r\n    let bavaResponse1 = []\r\n    let bavaResponse2 = []\r\n    let bavaResponse3 = []\r\n\r\n    for (i = 0; i < this.state.poolLength; i++) {\r\n      response0[i] = this.loadUserInfo(i)\r\n      response1[i] = this.loadUserInfo1(i)\r\n      response2[i] = this.loadUserInfo2(i)\r\n      response3[i] = this.loadUserInfo3(i)\r\n    }\r\n\r\n    for (i = 0; i < this.state.poolLengthV2_2; i++) {\r\n      response0V2_2[i] = this.loadUserInfoV2_2(i)\r\n      response1V2_2[i] = this.loadUserInfo1V2_2(i)\r\n      response2V2_2[i] = this.loadUserInfo2V2_2(i)\r\n      response3V2_2[i] = this.loadUserInfo3V2_2(i)\r\n    }\r\n\r\n    for (i = 0; i < this.state.poolLengthV2_3; i++) {\r\n      response0V2_3[i] = this.loadUserInfoV2_3(i)\r\n      response1V2_3[i] = this.loadUserInfo1V2_3(i)\r\n      response2V2_3[i] = this.loadUserInfo2V2_3(i)\r\n      response3V2_3[i] = this.loadUserInfo3V2_3(i)\r\n    }\r\n\r\n    for (i = 0; i < this.state.bavaPoolLength; i++) {\r\n      bavaResponse0[i] = this.loadBavaUserInfo(i)\r\n      bavaResponse1[i] = this.loadBavaUserInfo1(i)\r\n      bavaResponse2[i] = this.loadBavaUserInfo2(i)\r\n      bavaResponse3[i] = this.loadBavaUserInfo3(i)\r\n    }\r\n\r\n    for (i = 0; i < this.state.poolLength; i++) {\r\n      if (this.state.lpTokenPairsymbols[i] == \"PGL\" || this.state.lpTokenPairsymbols[i] == \"PNG\") {\r\n        userSegmentInfo[0][n] = (await response0[i]).amount\r\n        poolSegmentInfo[0][n] = this.state.farm[i]\r\n        lpBalanceAccount[0][n] = await response1[i]\r\n        lpSegmentAllowance[0][n] = await response2[i]\r\n        pendingSegmentReward[0][n] = await response3[i]\r\n        n += 1\r\n      } else {\r\n        userSegmentInfo[1][n] = (await response0[i]).amount\r\n        poolSegmentInfo[1][n] = this.state.farm[i]\r\n        lpBalanceAccount[1][n] = await response1[i]\r\n        lpSegmentAllowance[1][n] = await response2[i]\r\n        pendingSegmentReward[1][n] = await response3[i]\r\n        n += 1\r\n      }\r\n      totalpendingReward += parseInt(await response3[i])\r\n    }\r\n\r\n    for (i = 0; i < this.state.poolLengthV2_2; i++) {\r\n      if (this.state.lpTokenPairsymbolsV2_2[i] == \"PGL\" || this.state.lpTokenPairsymbolsV2_2[i] == \"PNG\") {\r\n        userSegmentInfoV2_2[0][c] = (await response0V2_2[i]).amount\r\n        poolSegmentInfoV2_2[0][c] = this.state.farmV2_2[i]\r\n        lpBalanceAccountV2_2[0][c] = await response1V2_2[i]\r\n        lpSegmentAllowanceV2_2[0][c] = await response2V2_2[i]\r\n        pendingSegmentRewardV2_2[0][c] = await response3V2_2[i]\r\n        c += 1\r\n      } else {\r\n        userSegmentInfoV2_2[1][c] = (await response0V2_2[i]).amount\r\n        poolSegmentInfoV2_2[1][c] = this.state.farmV2_2[i]\r\n        lpBalanceAccountV2_2[1][c] = await response1V2_2[i]\r\n        lpSegmentAllowanceV2_2[1][c] = await response2V2_2[i]\r\n        pendingSegmentRewardV2_2[1][c] = await response3V2_2[i]\r\n        c += 1\r\n      }\r\n      totalpendingReward += parseInt(await response3V2_2[i])\r\n    }\r\n\r\n    for (i = 0; i < this.state.poolLengthV2_3; i++) {\r\n      if (this.state.lpTokenPairsymbolsV2_3[i] == \"PGL\" || this.state.lpTokenPairsymbolsV2_3[i] == \"PNG\") {\r\n        userSegmentInfoV2_3[0][d] = await response0V2_3[i]\r\n        lpBalanceAccountV2_3[0][d] = await response1V2_3[i]\r\n        lpSegmentAllowanceV2_3[0][d] = await response2V2_3[i]\r\n        pendingSegmentRewardV2_3[0][d] = await response3V2_3[i]\r\n        d += 1\r\n      } else if (this.state.lpTokenPairsymbolsV2_3[i] == \"JLP\") {\r\n        userSegmentInfoV2_3[1][d] = await response0V2_3[i]\r\n        lpBalanceAccountV2_3[1][d] = await response1V2_3[i]\r\n        lpSegmentAllowanceV2_3[1][d] = await response2V2_3[i]\r\n        pendingSegmentRewardV2_3[1][d] = await response3V2_3[i]\r\n        d += 1\r\n      } else {\r\n        userSegmentInfoV2_3[2][d] = await response0V2_3[i]\r\n        lpBalanceAccountV2_3[2][d] = await response1V2_3[i]\r\n        lpSegmentAllowanceV2_3[2][d] = await response2V2_3[i]\r\n        pendingSegmentRewardV2_3[2][d] = await response3V2_3[i]\r\n      }\r\n      totalpendingReward += parseInt(await response3V2_3[i])\r\n    }\r\n\r\n    for (i = 0; i < this.state.bavaPoolLength; i++) {\r\n      if (this.state.bavaLpTokenPairsymbols[i] == \"PGL\" || this.state.bavaLpTokenPairsymbols[i] == \"PNG\") {\r\n        bavaUserSegmentInfo[0][b] = (await bavaResponse0[i]).amount\r\n        bavaPoolSegmentInfo[0][b] = this.state.farmBava[i]\r\n        bavaLpBalanceAccount[0][b] = await bavaResponse1[i]\r\n        bavaLpSegmentAllowance[0][b] = await bavaResponse2[i]\r\n        bavaPendingSegmentReward[0][b] = await bavaResponse3[i]\r\n        b += 1\r\n      } else {\r\n        bavaUserSegmentInfo[1][b] = (await bavaResponse0[i]).amount\r\n        bavaPoolSegmentInfo[1][b] = this.state.farmBava[i]\r\n        bavaLpBalanceAccount[1][b] = await bavaResponse1[i]\r\n        bavaLpSegmentAllowance[1][b] = await bavaResponse2[i]\r\n        bavaPendingSegmentReward[1][b] = await bavaResponse3[i]\r\n        b += 1\r\n      }\r\n      totalpendingReward += parseInt(await bavaResponse3[i])\r\n    }\r\n\r\n    this.setState({ poolSegmentInfo })\r\n    this.setState({ userSegmentInfo })\r\n    this.setState({ lpBalanceAccount })\r\n    this.setState({ lpSegmentAllowance })\r\n    this.setState({ pendingSegmentReward })\r\n\r\n    this.setState({ poolSegmentInfoV2_2 })\r\n    this.setState({ userSegmentInfoV2_2 })\r\n    this.setState({ lpBalanceAccountV2_2 })\r\n    this.setState({ lpSegmentAllowanceV2_2 })\r\n    this.setState({ pendingSegmentRewardV2_2 })\r\n\r\n    // this.setState({ poolSegmentInfoV2_3 })\r\n    this.setState({ userSegmentInfoV2_3 })\r\n    this.setState({ lpBalanceAccountV2_3 })\r\n    this.setState({ lpSegmentAllowanceV2_3 })\r\n    this.setState({ pendingSegmentRewardV2_3 })\r\n\r\n    this.setState({ bavaPoolSegmentInfo })\r\n    this.setState({ bavaUserSegmentInfo })\r\n    this.setState({ bavaLpBalanceAccount })\r\n    this.setState({ bavaLpSegmentAllowance })\r\n    this.setState({ bavaPendingSegmentReward })\r\n\r\n    this.setState({ totalpendingReward: totalpendingReward.toLocaleString('fullwide', { useGrouping: false }) })\r\n    this.setState({ farmloading: true })\r\n    this.setState({ accountLoading: true })\r\n  }\r\n\r\n  // *************************** Async User Info ***********************************************************************************************\r\n  // bavaToken\r\n  async loadBavaTokenBalance() {\r\n    let bavaTokenBalance = await this.state.bavaToken.methods.balanceOf(this.state.account).call()\r\n    return bavaTokenBalance\r\n  }\r\n\r\n  async loadLockedBavaTokenBalance() {\r\n    let lockedBavaTokenBalance = await this.state.bavaToken.methods.lockOf(this.state.account).call()\r\n    return lockedBavaTokenBalance\r\n  }\r\n\r\n  async loadBavaTokenAllowance() {\r\n    let bavaTokenAllowance = await this.state.bavaToken.methods.allowance(this.state.account, process.env.REACT_APP_staking_rewards_address).call()\r\n    return bavaTokenAllowance\r\n  }\r\n\r\n  async loadEarnedAmount() {\r\n    let earnedAmount = await this.state.bavaStake.methods.earned(this.state.account).call()\r\n    return earnedAmount\r\n  }\r\n\r\n  async loadStakeAmount() {\r\n    let stakeAmount = await this.state.bavaStake.methods.userInfo(this.state.account).call()\r\n    return stakeAmount\r\n  }\r\n\r\n  // bavaMasterFarmerV2\r\n\r\n  async loadUserInfo(i) {\r\n    let userInfo = await this.state.bavaMasterFarmer.methods.userInfo(i, this.state.account).call()\r\n    return userInfo\r\n  }\r\n\r\n  async loadUserInfo1(i) {\r\n    let lpTokenPair = new window.web3Ava.eth.Contract(IPancakePair.abi, this.state.lpTokenAddresses[i])\r\n    let lpTokenBalance = await lpTokenPair.methods.balanceOf(this.state.account).call()\r\n    return lpTokenBalance\r\n  }\r\n\r\n  async loadUserInfo2(i) {\r\n    let lpTokenPair = new window.web3Ava.eth.Contract(IPancakePair.abi, this.state.lpTokenAddresses[i])\r\n    let lpTokenAllowance = await lpTokenPair.methods.allowance(this.state.account, this.state.bavaMasterFarmer._address).call()\r\n    return lpTokenAllowance\r\n  }\r\n\r\n  async loadUserInfo3(i) {\r\n    let pendingReward = await this.state.bavaMasterFarmer.methods.pendingReward(i, this.state.account).call()\r\n    return pendingReward\r\n  }\r\n\r\n  // bavaMasterFarmerV2_2\r\n\r\n  async loadUserInfoV2_2(i) {\r\n    let userInfo = await this.state.bavaMasterFarmerV2_2.methods.userInfo(i, this.state.account).call()\r\n    return userInfo\r\n  }\r\n\r\n  async loadUserInfo1V2_2(i) {\r\n    let lpTokenPair = new window.web3Ava.eth.Contract(IPancakePair.abi, this.state.lpTokenAddressesV2_2[i])\r\n    let lpTokenBalance = await lpTokenPair.methods.balanceOf(this.state.account).call()\r\n    return lpTokenBalance\r\n  }\r\n\r\n  async loadUserInfo2V2_2(i) {\r\n    let lpTokenPair = new window.web3Ava.eth.Contract(IPancakePair.abi, this.state.lpTokenAddressesV2_2[i])\r\n    let lpTokenAllowance = await lpTokenPair.methods.allowance(this.state.account, this.state.bavaMasterFarmerV2_2._address).call()\r\n    return lpTokenAllowance\r\n  }\r\n\r\n  async loadUserInfo3V2_2(i) {\r\n    let pendingReward = await this.state.bavaMasterFarmerV2_2.methods.pendingReward(i, this.state.account).call()\r\n    return pendingReward\r\n  }\r\n  // #############################################################################################################\r\n  // bavaMasterFarmerV2_3\r\n  async loadUserInfoV2_3(i) {\r\n    let poolAddress = (await this.state.bavaMasterFarmerV2_3.methods.poolInfo(i).call()).poolContract\r\n    let bavaCompoundPool = new window.web3Ava.eth.Contract(BavaCompoundPool.abi, poolAddress)\r\n    let userInfo = await bavaCompoundPool.methods.balanceOf(this.state.account).call()\r\n    return userInfo\r\n  }\r\n\r\n  async loadUserInfo1V2_3(i) {\r\n    let lpTokenPair = new window.web3Ava.eth.Contract(IPancakePair.abi, this.state.lpTokenAddressesV2_3[i])\r\n    let lpTokenBalance = await lpTokenPair.methods.balanceOf(this.state.account).call()\r\n    return lpTokenBalance\r\n  }\r\n\r\n  async loadUserInfo2V2_3(i) {\r\n    let lpTokenPair = new window.web3Ava.eth.Contract(IPancakePair.abi, this.state.lpTokenAddressesV2_3[i])\r\n    let poolAddress = (await this.state.bavaMasterFarmerV2_3.methods.poolInfo(i).call()).poolContract\r\n    let lpTokenAllowance = await lpTokenPair.methods.allowance(this.state.account, poolAddress).call()\r\n    return lpTokenAllowance\r\n  }\r\n\r\n  async loadUserInfo3V2_3(i) {\r\n    let poolAddress = (await this.state.bavaMasterFarmerV2_3.methods.poolInfo(i).call()).poolContract\r\n    let bavaCompoundPool = new window.web3Ava.eth.Contract(BavaCompoundPool.abi, poolAddress)\r\n    let pendingReward = await bavaCompoundPool.methods.pendingReward(this.state.account).call()\r\n    return pendingReward\r\n  }\r\n  // #############################################################################################################\r\n  // bavaMasterFarmerV1 \r\n  async loadBavaUserInfo(i) {\r\n    let userInfo = await this.state.bavaMasterFarmerV1.methods.userInfo(i, this.state.account).call()\r\n    return userInfo\r\n  }\r\n\r\n  async loadBavaUserInfo1(i) {\r\n    let lpTokenPair = new window.web3Ava.eth.Contract(IPancakePair.abi, this.state.bavaLpTokenAddresses[i])\r\n    let lpTokenBalance = await lpTokenPair.methods.balanceOf(this.state.account).call()\r\n    return lpTokenBalance\r\n  }\r\n\r\n  async loadBavaUserInfo2(i) {\r\n    let lpTokenPair = new window.web3Ava.eth.Contract(IPancakePair.abi, this.state.bavaLpTokenAddresses[i])\r\n    let lpTokenAllowance = await lpTokenPair.methods.allowance(this.state.account, this.state.bavaMasterFarmerV1._address).call()\r\n    return lpTokenAllowance\r\n  }\r\n\r\n  async loadBavaUserInfo3(i) {\r\n    let pendingReward = await this.state.bavaMasterFarmerV1.methods.pendingReward(i, this.state.account).call()\r\n    return pendingReward\r\n  }\r\n\r\n  // bavaMasterFarmerV2_2 poolLength\r\n  async loadPoolLengthV2_2() {\r\n    let poolLengthV2_2 = await this.state.bavaMasterFarmerV2_2.methods.poolLength().call()\r\n    return poolLengthV2_2\r\n  }\r\n\r\n  // bavaMasterFarmerV2_3\r\n  async loadPoolLengthV2_3() {\r\n    let poolLengthV2_3 = await this.state.bavaMasterFarmerV2_3.methods.poolLength().call()\r\n    return poolLengthV2_3\r\n  }\r\n\r\n  async loadFarmReinvest(i) {\r\n    let reinvestAmount\r\n    let finalReinvestAmount = 0\r\n    let bonusReinvestAmount = 0\r\n    let bonusRewardPrice = 0\r\n\r\n    if (i <= 4) {\r\n      let poolAddress = (await this.state.bavaMasterFarmerV2_3.methods.poolInfo(i).call()).poolContract\r\n      let bavaCompoundPool = new window.web3Ava.eth.Contract(BavaCompoundPool.abi, poolAddress)\r\n      reinvestAmount = await bavaCompoundPool.methods.checkReward().call()\r\n      finalReinvestAmount = reinvestAmount * this.state.PNGPrice / this.state.AVAXPrice\r\n    } else if (i == 10 || i == 6 || i == 7 || i==5) {\r\n\r\n    } else {\r\n      let poolAddress = (await this.state.bavaMasterFarmerV2_3.methods.poolInfo(i).call()).poolContract\r\n      let bavaCompoundPool = new window.web3Ava.eth.Contract(BavaCompoundPoolVariable.abi, poolAddress)\r\n      reinvestAmount = await bavaCompoundPool.methods.checkReward().call()\r\n\r\n      if (reinvestAmount[\"1\"].length > 0) {\r\n        for (let n = 0; n < reinvestAmount[\"1\"].length; n++) {\r\n          if (this.state.farmV2_3[i][\"bonusReward\"][n] == \"BAVA\") {\r\n            bonusRewardPrice = this.state.BAVAPrice\r\n          } else if (this.state.farmV2_3[i][\"bonusReward\"][n] == \"QI\") {\r\n            bonusRewardPrice = this.state.QIPrice\r\n          } else if (this.state.farmV2_3[i][\"bonusReward\"][n] == \"LUNA\") {\r\n            bonusRewardPrice = this.state.LUNAPrice\r\n          } else if (this.state.farmV2_3[i][\"bonusReward\"][n] == \"WAVAX\") {\r\n            bonusRewardPrice = this.state.AVAXPrice\r\n          }\r\n          bonusReinvestAmount += (reinvestAmount[\"1\"][n] * bonusRewardPrice / this.state.AVAXPrice)\r\n        }\r\n      }\r\n      finalReinvestAmount = reinvestAmount[\"0\"] * this.state.PNGPrice / this.state.AVAXPrice + bonusReinvestAmount\r\n    }\r\n    return (finalReinvestAmount.toFixed(0)).toString()\r\n  }\r\n\r\n  // ***************************************** Async Airdrop *************************************************************\r\n\r\n  async loadPoolLength() {\r\n    let poolLength = await this.state.bavaMasterFarmer.methods.poolLength().call()\r\n    return poolLength\r\n  }\r\n\r\n  async loadBavaPoolLength() {\r\n    let bavaPoolLength = await this.state.bavaMasterFarmerV1.methods.poolLength().call()\r\n    return bavaPoolLength\r\n  }\r\n\r\n  async loadAirdropIteration() {\r\n    let airdropIteration = await this.state.bavaAirdrop.methods.airdropIteration().call()\r\n    return airdropIteration\r\n  }\r\n\r\n  async loadAirdropAmount() {\r\n    let airdropAmount = await this.state.bavaAirdrop.methods.airdropAmount().call()\r\n    return airdropAmount\r\n  }\r\n\r\n  async loadAirdropStart() {\r\n    let airdropIteration = await this.state.bavaAirdrop.methods.airdropIteration().call()\r\n    let airdropStart = await this.state.bavaAirdrop.methods.startAirdrop(airdropIteration).call()\r\n    return airdropStart\r\n  }\r\n\r\n  async loadAirdropEnd() {\r\n    let airdropIteration = await this.state.bavaAirdrop.methods.airdropIteration().call()\r\n    let airdropEnd = await this.state.bavaAirdrop.methods.endAirdrop(airdropIteration).call()\r\n    return airdropEnd\r\n  }\r\n\r\n  // ***************************************** BAVA Stake *************************************************************\r\n\r\n  async loadTotalStake() {\r\n    let totalStake = await this.state.bavaStake.methods.totalSupply().call()\r\n    return totalStake\r\n  }\r\n\r\n  async loadRewardRate() {\r\n    let rewardRate = await this.state.bavaStake.methods.rewardRate().call()\r\n    return rewardRate\r\n  }\r\n\r\n  // ***************************TVL & APR***********************************************************************\r\n  async loadTVLAPR() {\r\n\r\n    let tvl = [[], []]\r\n    let apr = [[], []]\r\n    let apyDaily = [[], []]\r\n\r\n    let bavatvl = [[], []]\r\n    let bavaapr = [[], []]\r\n    let bavaapyDaily = [[], []]\r\n\r\n    let tvlV2_2 = [[], []]\r\n    let aprV2_2 = [[], []]\r\n    let apyDailyV2_2 = [[], []]\r\n\r\n    let tvlV2_3 = [[], [], []]\r\n    let aprV2_3 = [[], [], []]\r\n    let apyDailyV2_3 = [[], [], []]\r\n\r\n    let n = 0\r\n    let b = 0\r\n    let c = 0\r\n    let d = 0\r\n    let totalTVL = 0\r\n\r\n    let tvlArray = this.state.myJsonMongo[\"TVL\"]\r\n    let aprArray = this.state.myJsonMongo[\"APR\"]\r\n    let apyArray = this.state.myJsonMongo[\"APY\"]\r\n    let bavatvlArray = this.state.myJsonMongo[\"BAVATVL\"]\r\n    let bavaaprArray = this.state.myJsonMongo[\"BAVAAPR\"]\r\n    let bavaapyArray = this.state.myJsonMongo[\"BAVAAPY\"]\r\n\r\n    // let responseV2_2 = await this.loadTVLAPRV2_2()\r\n    let tvlArrayV2_2 = this.state.myJsonMongo[\"TVLV2_2\"]\r\n    let aprArrayV2_2 = this.state.myJsonMongo[\"APRV2_2\"]\r\n    let apyArrayV2_2 = this.state.myJsonMongo[\"APYV2_2\"]\r\n\r\n    let tvlArrayV2_3 = this.state.myJsonMongo[\"TVLV2_3\"]\r\n    let aprArrayV2_3 = this.state.myJsonMongo[\"APRV2_3\"]\r\n    let apyArrayV2_3 = this.state.myJsonMongo[\"APYV2_3\"]\r\n\r\n    for (let i = 0; i < this.state.poolLength; i++) {\r\n      totalTVL += parseInt(tvlArray[n][\"tvl\"])\r\n      if (this.state.lpTokenPairsymbols[i] == \"PGL\" || this.state.lpTokenPairsymbols[i] == \"PNG\") {\r\n        tvl[0][n] = tvlArray[n][\"tvl\"]\r\n        apr[0][n] = parseFloat(aprArray[n][\"apr\"])\r\n        apyDaily[0][n] = ((1 + (apr[0][n] * 0.05 + parseFloat(this.state.poolSegmentInfo[0][n].total3rdPartyAPR)) / 36500) ** 365 - 1) * 100 + apr[0][n]\r\n        n += 1\r\n      } else {\r\n        tvl[1][n] = tvlArray[n][\"tvl\"]\r\n        apr[1][n] = parseFloat(aprArray[n][\"apr\"])\r\n        apyDaily[1][n] = ((1 + (apr[1][n] * 0.05 + parseFloat(this.state.poolSegmentInfo[1][n].total3rdPartyAPR)) / 36500) ** 365 - 1) * 100 + apr[1][n]\r\n        n += 1\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < this.state.bavaPoolLength; i++) {\r\n      totalTVL += parseInt(bavatvlArray[b][\"tvl\"])\r\n      if (this.state.bavaLpTokenPairsymbols[i] == \"PGL\" || this.state.bavaLpTokenPairsymbols[i] == \"PNG\") {\r\n        bavatvl[0][b] = bavatvlArray[b][\"tvl\"]\r\n        bavaapr[0][b] = parseFloat(bavaaprArray[b][\"apr\"])\r\n        bavaapyDaily[0][b] = ((1 + (bavaapr[0][b] * 0.05 + parseFloat(this.state.bavaPoolSegmentInfo[0][b].total3rdPartyAPR)) / 36500) ** 365 - 1) * 100 + bavaapr[0][b]\r\n        b += 1\r\n      } else {\r\n        bavatvl[1][b] = bavatvlArray[b][\"tvl\"]\r\n        bavaapr[1][b] = parseFloat(bavaaprArray[b][\"apr\"])\r\n        bavaapyDaily[1][b] = ((1 + (bavaapr[1][b] * 0.05 + parseFloat(this.state.bavaPoolSegmentInfo[1][b].total3rdPartyAPR)) / 36500) ** 365 - 1) * 100 + bavaapr[1][b]\r\n        b += 1\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < this.state.poolLengthV2_2; i++) {\r\n      totalTVL += parseInt(tvlArrayV2_2[c][\"tvl\"])\r\n      if (this.state.lpTokenPairsymbolsV2_2[i] == \"PGL\" || this.state.lpTokenPairsymbolsV2_2[i] == \"PNG\") {\r\n        tvlV2_2[0][c] = tvlArrayV2_2[c][\"tvl\"]\r\n        aprV2_2[0][c] = parseFloat(aprArrayV2_2[c][\"apr\"])\r\n        apyDailyV2_2[0][c] = ((1 + (aprV2_2[0][c] * 0.05 + parseFloat(this.state.poolSegmentInfoV2_2[0][c].total3rdPartyAPR)) / 36500) ** 365 - 1) * 100 + aprV2_2[0][c]\r\n        c += 1\r\n      } else {\r\n        tvlV2_2[1][c] = tvlArrayV2_2[c][\"tvl\"]\r\n        aprV2_2[1][c] = parseFloat(aprArrayV2_2[c][\"apr\"])\r\n        apyDailyV2_2[1][c] = ((1 + (aprV2_2[1][c] * 0.05 + parseFloat(this.state.poolSegmentInfoV2_2[1][c].total3rdPartyAPR)) / 36500) ** 365 - 1) * 100 + + aprV2_2[1][c]\r\n        c += 1\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < this.state.poolLengthV2_3; i++) {\r\n      totalTVL += parseInt(tvlArrayV2_3[d][\"tvl\"])\r\n      if (this.state.lpTokenPairsymbolsV2_3[i] == \"PGL\" || this.state.lpTokenPairsymbolsV2_3[i] == \"PNG\") {\r\n        tvlV2_3[0][d] = tvlArrayV2_3[d][\"tvl\"]\r\n        aprV2_3[0][d] = parseFloat(aprArrayV2_3[d][\"apr\"])\r\n        apyDailyV2_3[0][d] = ((1 + (aprV2_3[0][d] * 0.05 + parseFloat(this.state.poolSegmentInfoV2_3[0][d].total3rdPartyAPR)) / 36500) ** 365 - 1) * 100 + aprV2_3[0][d]\r\n        d += 1\r\n      } else if (this.state.lpTokenPairsymbolsV2_3[i] == \"JLP\") {\r\n        tvlV2_3[1][d] = tvlArrayV2_3[d][\"tvl\"]\r\n        aprV2_3[1][d] = parseFloat(aprArrayV2_3[d][\"apr\"])\r\n        apyDailyV2_3[1][d] = ((1 + (aprV2_3[1][d] * 0.05 + parseFloat(this.state.poolSegmentInfoV2_3[1][d].total3rdPartyAPR)) / 36500) ** 365 - 1) * 100 + aprV2_3[1][d]\r\n        d += 1\r\n      } else {\r\n        tvlV2_3[2][d] = tvlArrayV2_3[d][\"tvl\"]\r\n        aprV2_3[2][d] = parseFloat(aprArrayV2_3[d][\"apr\"])\r\n        apyDailyV2_3[2][d] = ((1 + (aprV2_3[2][d] * 0.05 + parseFloat(this.state.poolSegmentInfoV2_3[2][d].total3rdPartyAPR)) / 36500) ** 365 - 1) * 100 + aprV2_3[2][d]\r\n        d += 1\r\n      }\r\n    }\r\n\r\n    totalTVL += (window.web3Ava.utils.fromWei(this.state.totalStake, 'Ether') * this.state.BAVAPrice)\r\n\r\n    this.setState({ totalTVL })\r\n    this.setState({ tvl })\r\n    this.setState({ apr })\r\n    this.setState({ apyDaily })\r\n\r\n    this.setState({ tvlV2_2 })\r\n    this.setState({ aprV2_2 })\r\n    this.setState({ apyDailyV2_2 })\r\n\r\n    this.setState({ tvlV2_3 })\r\n    this.setState({ aprV2_3 })\r\n    this.setState({ apyDailyV2_3 })\r\n\r\n    this.setState({ bavatvl })\r\n    this.setState({ bavaapr })\r\n    this.setState({ bavaapyDaily })\r\n    this.setState({ aprloading: true })\r\n  }\r\n\r\n  // ************* load farmV2_2 tvl apr *************\r\n\r\n  async loadTVLAPRV2_2(i) {\r\n\r\n    let bavatvlArray = this.state.myJsonMongo[\"BAVATVL\"]\r\n    let lpTokenPair = new window.web3Ava.eth.Contract(IPancakePair.abi, this.state.lpTokenAddressesV2_2[0])\r\n    let lpTokenBalance = await lpTokenPair.methods.balanceOf(process.env.REACT_APP_bavamasterfarmv1_address).call()\r\n    let lpTokenValue = bavatvlArray[0][\"tvl\"] / window.web3Ava.utils.fromWei(lpTokenBalance, 'ether')\r\n\r\n    let BAVAPrice = this.state.BAVAPrice\r\n    let lpTokenInContract = await this.state.bavaMasterFarmerV2_2.methods.poolInfo(0).call()\r\n    let rewardPerBlock = await this.state.bavaMasterFarmerV2_2.methods.REWARD_PER_BLOCK().call()\r\n    lpTokenInContract = window.web3Ava.utils.fromWei(lpTokenInContract[\"depositAmount\"], 'ether')\r\n    let tvl = lpTokenValue * lpTokenInContract\r\n    let apr = ((28000 * 365 * 645 * window.web3Ava.utils.fromWei(rewardPerBlock, 'ether') * BAVAPrice) / tvl) * 100\r\n    let apyDaily = ((1 + apr / 36500) ** 365 - 1) * 100\r\n\r\n    let array = { 'TVL': [{ 'tvl': tvl }], 'APR': [{ 'apr': apr }], 'APY': [{ 'apyDaily': apyDaily }] }\r\n    return array\r\n  }\r\n\r\n  // ***********************************************************************************************************************************************\r\n\r\n  async loadWeb3() {\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum)\r\n    }\r\n    // window.web3Ava = new Web3(`https://api.avax.network/ext/bc/C/rpc`);\r\n    window.web3Ava = new Web3(`https://rpc.ankr.com/avalanche`);\r\n    // window.web3Ava = new Web3(`https://ava-mainnet.public.blastapi.io/ext/bc/C/rpc`);\r\n    // window.web3Ava = new Web3(`https://api.avax-test.network/ext/bc/C/rpc`);\r\n\r\n    let responseMongo = await fetch(`https://ap-southeast-1.aws.data.mongodb-api.com/app/bdl-uyejj/endpoint/tvl`);\r\n    let responseGecko = await fetch(`https://api.coingecko.com/api/v3/simple/price?ids=joe%2Cwrapped-avax%2Cpangolin%2Cweth%2Cbaklava%2Cusd-coin%2Ctether%2Cbenqi%2Cterra-luna&vs_currencies=usd`);\r\n    const myJsonMongo = await responseMongo.json();\r\n    const myJsonGecko = await responseGecko.json();\r\n    this.setState({ myJsonMongo })\r\n\r\n    // let gasPrice = await window.web3Fx.eth.getGasPrice();\r\n    // console.log(gasPrice)\r\n    // gasPrice = await window.web3Eth.eth.getGasPrice();\r\n    // console.log(gasPrice)\r\n    // gasPrice = await window.web3Ava.eth.getGasPrice();\r\n    // console.log(gasPrice)\r\n\r\n    let AVAXPrice = myJsonGecko[\"wrapped-avax\"][\"usd\"]\r\n    let BAVAPrice = myJsonGecko[\"baklava\"][\"usd\"]\r\n    let PNGPrice = myJsonGecko[\"pangolin\"][\"usd\"]\r\n    let LUNAPrice = myJsonGecko[\"terra-luna\"][\"usd\"]\r\n    let WETHPrice = myJsonGecko[\"weth\"][\"usd\"]\r\n    let USDTPrice = myJsonGecko[\"tether\"][\"usd\"]\r\n    let USDCPrice = myJsonGecko[\"usd-coin\"][\"usd\"]\r\n    let JOEPrice = myJsonGecko[\"joe\"][\"usd\"]\r\n    let QIPrice = myJsonGecko[\"benqi\"][\"usd\"]\r\n\r\n    this.setState({ AVAXPrice: AVAXPrice.toFixed(5) })\r\n    this.setState({ BAVAPrice: BAVAPrice.toFixed(5) })\r\n    this.setState({ PNGPrice: PNGPrice.toFixed(5) })\r\n    this.setState({ LUNAPrice: LUNAPrice.toFixed(5) })\r\n    this.setState({ JOEPrice: JOEPrice.toFixed(5) })\r\n    this.setState({ QIPrice: QIPrice.toFixed(5) })\r\n    this.setState({ loading: true })\r\n  }\r\n\r\n\r\n  connectMetamask = () => {\r\n    if (window.ethereum) {\r\n      window.ethereum\r\n        .request({ method: 'eth_requestAccounts' })\r\n        .then(async () => {\r\n          await this.switchNetwork()\r\n          const chainId = await window.ethereum.request({ method: 'eth_chainId' });\r\n          if (chainId == process.env.REACT_APP_chainid) {\r\n            // await this.WalletDisconnect()\r\n            await this.setWalletTrigger(true)\r\n            this.loadBlockchainUserData()\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          if (err.code === 4001) {\r\n            // EIP-1193 userRejectedRequest error\r\n            // If this happens, the user rejected the connection request.\r\n            alert(\"Something went wrong...Code: 4001 User rejected the request.\")\r\n          } else {\r\n            console.error(err);\r\n          }\r\n        });\r\n    } else {\r\n      alert(\"No wallet provider was found\")\r\n    }\r\n  }\r\n\r\n  connectCoin98 = () => {\r\n    if (window.coin98) {\r\n      window.ethereum\r\n        .request({ method: 'eth_accounts' })\r\n        .then(async (accounts) => {\r\n          let chainId = await window.ethereum.request({ method: 'eth_chainId' });\r\n          if (chainId == \"0xa86a\") {\r\n            if (accounts[0]) {\r\n              this.WalletDisconnect()\r\n              this.setWalletTrigger(true)\r\n            } else {\r\n              alert(\"No wallet found, please create wallet\")\r\n            }\r\n          } else {\r\n            alert(\"Wrong Network, please switch to Avalanche network\")\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          if (err.code === 4001) {\r\n            // EIP-1193 userRejectedRequest error\r\n            // If this happens, the user rejected the connection request.\r\n            alert(\"Something went wrong...Code: 4001 User rejected the request.\")\r\n          } else {\r\n            console.error(err);\r\n          }\r\n        });\r\n    } else {\r\n      alert(\"No wallet provider was found\")\r\n    }\r\n  }\r\n\r\n\r\n  mobileWalletConnect = async () => {\r\n    window.provider = new WalletConnectProvider({\r\n      rpc: {\r\n        43114: \"https://api.avax.network/ext/bc/C/rpc\"\r\n        // 56: `https://bsc-dataseed.binance.org/`\r\n        // 1: \"https://api.avax.network/ext/bc/C/rpc\"\r\n      },\r\n      chainId: 43114,\r\n      // chainId: 56,\r\n    });\r\n    await window.provider.enable();\r\n    window.web3Con = await new Web3(window.provider);\r\n    const accounts = await window.web3Con.eth.getAccounts();\r\n    const chainId = await window.provider.request('eth_chainId');\r\n    this.setState({ account: accounts[0] })\r\n    const first4Account = this.state.account.substring(0, 4)\r\n    const last4Account = this.state.account.slice(-4)\r\n    this.setState({ first4Account: first4Account })\r\n    this.setState({ last4Account: last4Account })\r\n    this.setState({ walletConnect: true })\r\n    this.setWalletTrigger(false)\r\n    this.loadBlockchainUserData()\r\n\r\n    // Subscribe to accounts change\r\n    window.provider.on(\"accountsChanged\", this.handleAccountsChanged);\r\n    // Subscribe to session disconnection\r\n    window.provider.on(\"disconnect\", (code, reason) => {\r\n      // console.log(code, reason);\r\n      this.WalletDisconnect()\r\n    });\r\n    window.provider.on(\"chainChanged\", async () => {\r\n      this.WalletDisconnect()\r\n      alert(\"You're connected to an unsupported network.\")\r\n    });\r\n  }\r\n\r\n  WalletDisconnect = async () => {\r\n    if (window.provider.connected == true) {\r\n      await window.provider.disconnect()\r\n      this.setState({ walletConnect: false })\r\n      this.setState({ accountLoading: false })\r\n    }\r\n    this.loadBlockchainUserData()\r\n  }\r\n\r\n  switchNetwork = async () => {\r\n    try {\r\n      await window.ethereum.request({\r\n        method: 'wallet_switchEthereumChain',\r\n        params: [{ chainId: process.env.REACT_APP_chainid }],\r\n      })\r\n    }\r\n    catch (switchError) {\r\n      // This error code indicates that the chain has not been added to MetaMask.\r\n      if (switchError.code === 4902) {\r\n        try {\r\n          // console.log(switchError.code)\r\n          await window.ethereum.request({\r\n            method: 'wallet_addEthereumChain',\r\n            params: [{\r\n              chainId: '0xa86a', rpcUrls: ['https://api.avax.network/ext/bc/C/rpc'], chainName: 'Avalanche Mainnet C-Chain',\r\n              nativeCurrency: {\r\n                name: 'AVAX',\r\n                symbol: 'AVAX', // 2-6 characters long\r\n                decimals: 18\r\n              }, blockExplorerUrls: ['https://snowtrace.io/']\r\n            }],\r\n          });\r\n          const chainId = await window.ethereum.request({ method: 'eth_chainId' });\r\n          this.setState({ chainId })\r\n          if (this.state.chainId == \"0x61\") {\r\n            this.setState({ networkName: \"BSC Testnet\" })\r\n          } else if (this.state.chainId == \"0x38\") {\r\n            this.setState({ networkName: \"BSC\" })\r\n          } else if (this.state.chainId == \"0x1\") {\r\n            this.setState({ networkName: \"Ethereum\" })\r\n          } else if (this.state.chainId == \"0x3\") {\r\n            this.setState({ networkName: \"Ropsten\" })\r\n          } else if (this.state.chainId == \"0x4\") {\r\n            this.setState({ networkName: \"Rinkeby\" })\r\n          } else if (this.state.chainId == \"0x2a\") {\r\n            this.setState({ networkName: \"Kovan\" })\r\n          } else if (this.state.chainId == \"0x89\") {\r\n            this.setState({ networkName: \"Polygon\" })\r\n          } else if (this.state.chainId == \"0x13881\") {\r\n            this.setState({ networkName: \"Mumbai\" })\r\n          } else if (this.state.chainId == \"0xa869\") {\r\n            this.setState({ networkName: \"Fuji\" })\r\n          } else if (this.state.chainId == \"0xa86a\") {\r\n            this.setState({ networkName: \"Avalanche\" })\r\n          }\r\n        } catch (addError) {\r\n          // handle \"add\" error\r\n        }\r\n      }\r\n      // handle other \"switch\" errors\r\n    }\r\n  }\r\n\r\n\r\n  handleAccountsChanged = async (accounts) => {\r\n    if (accounts.length === 0) {\r\n      // MetaMask is locked or the user has not connected any accounts\r\n      this.setWalletTrigger(false)\r\n    } else if (accounts[0] !== this.state.account) {\r\n      const accounts = await window.web3.eth.getAccounts()\r\n      this.setState({ account: accounts[0] })\r\n      const first4Account = this.state.account.substring(0, 4)\r\n      const last4Account = this.state.account.slice(-4)\r\n      this.setState({ first4Account: first4Account })\r\n      this.setState({ last4Account: last4Account })\r\n      this.setState({ airdropCheck: false })\r\n      this.loadBlockchainUserData()\r\n      // Do any other work!\r\n    }\r\n  }\r\n\r\n  handleChainChanged = async () => {\r\n    // We recommend reloading the page, unless you must do otherwise\r\n    const chainId = await window.ethereum.request({ method: 'eth_chainId' });\r\n    this.setState({ chainId })\r\n    if (chainId != process.env.REACT_APP_chainid) {\r\n      this.setWalletTrigger(false)\r\n    }\r\n    if (this.state.chainId == \"0x61\") {\r\n      this.setState({ networkName: \"BSC Testnet\" })\r\n    } else if (this.state.chainId == \"0x38\") {\r\n      this.setState({ networkName: \"BSC\" })\r\n    } else if (this.state.chainId == \"0x1\") {\r\n      this.setState({ networkName: \"Ethereum\" })\r\n    } else if (this.state.chainId == \"0x3\") {\r\n      this.setState({ networkName: \"Ropsten\" })\r\n    } else if (this.state.chainId == \"0x4\") {\r\n      this.setState({ networkName: \"Rinkeby\" })\r\n    } else if (this.state.chainId == \"0x2a\") {\r\n      this.setState({ networkName: \"Kovan\" })\r\n    } else if (this.state.chainId == \"0x89\") {\r\n      this.setState({ networkName: \"Polygon\" })\r\n    } else if (this.state.chainId == \"0x13881\") {\r\n      this.setState({ networkName: \"Mumbai\" })\r\n    } else if (this.state.chainId == \"0xa869\") {\r\n      this.setState({ networkName: \"Fuji\" })\r\n    } else if (this.state.chainId == \"0xa86a\") {\r\n      this.setState({ networkName: \"Avalanche\" })\r\n    }\r\n    this.switchNetwork()\r\n    // Run any other necessary logic...\r\n  }\r\n\r\n  delay = ms => new Promise(res => setTimeout(res, ms));\r\n\r\n  timeConverter = (UNIX_timestamp) => {\r\n    var a = new Date(UNIX_timestamp * 1000);\r\n    var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n    var year = a.getFullYear();\r\n    var month = months[a.getMonth()];\r\n    var date = a.getDate();\r\n    var hour = a.getHours().toLocaleString('en-US', { minimumIntegerDigits: 2, useGrouping: false });\r\n    var min = a.getMinutes().toLocaleString('en-US', { minimumIntegerDigits: 2, useGrouping: false });\r\n    var sec = a.getSeconds().toLocaleString('en-US', { minimumIntegerDigits: 2, useGrouping: false });\r\n    var time = date + ' ' + month + ' ' + year + ' ' + hour + ':' + min + ':' + sec;\r\n    return time;\r\n  }\r\n\r\n  deposit = async (i, amount, n, v) => {\r\n    let bavaMasterFarmer\r\n    let bavaCompoundPool\r\n    if (this.state.walletConnect == true) {\r\n      if (v == 1) {\r\n        bavaMasterFarmer = new window.web3Con.eth.Contract(BavaMasterFarmerV1.abi, process.env.REACT_APP_bavamasterfarmv1_address)\r\n      } else if (v == 2) {\r\n        bavaMasterFarmer = new window.web3Con.eth.Contract(BavaMasterFarmer.abi, process.env.REACT_APP_bavamasterfarmv2_address)\r\n      } else if (v == 3) {\r\n        bavaMasterFarmer = new window.web3Con.eth.Contract(BavaMasterFarmerV2_2.abi, process.env.REACT_APP_bavamasterfarmv2_2address)\r\n      } else if (v == 4) {\r\n        bavaMasterFarmer = new window.web3Con.eth.Contract(BavaMasterFarmerV2_3.abi, process.env.REACT_APP_bavamasterfarmv2_3address)\r\n        let poolAddress = (await bavaMasterFarmer.methods.poolInfo(i).call()).poolContract\r\n        bavaCompoundPool = new window.web3Con.eth.Contract(BavaCompoundPool.abi, poolAddress)\r\n      }\r\n    } else if (this.state.wallet == true) {\r\n      if (v == 1) {\r\n        bavaMasterFarmer = new window.web3.eth.Contract(BavaMasterFarmerV1.abi, process.env.REACT_APP_bavamasterfarmv1_address)\r\n      } else if (v == 2) {\r\n        bavaMasterFarmer = new window.web3.eth.Contract(BavaMasterFarmer.abi, process.env.REACT_APP_bavamasterfarmv2_address)\r\n      } else if (v == 3) {\r\n        bavaMasterFarmer = new window.web3.eth.Contract(BavaMasterFarmerV2_2.abi, process.env.REACT_APP_bavamasterfarmv2_2address)\r\n      } else if (v == 4) {\r\n        bavaMasterFarmer = new window.web3.eth.Contract(BavaMasterFarmerV2_3.abi, process.env.REACT_APP_bavamasterfarmv2_3address)\r\n        let poolAddress = (await bavaMasterFarmer.methods.poolInfo(i).call()).poolContract\r\n        bavaCompoundPool = new window.web3.eth.Contract(BavaCompoundPool.abi, poolAddress)\r\n      }\r\n    } if (v == 4) {\r\n      await bavaCompoundPool.methods.deposit(amount).send({ from: this.state.account }).then(async (result) => {\r\n        this.loadBlockchainUserData()\r\n      }).catch((err) => {\r\n        if (err.code === 4001) {\r\n          // EIP-1193 userRejectedRequest error\r\n          // If this happens, the user rejected the connection request.\r\n          alert(\"Something went wrong...Code: 4001 User rejected the request.\")\r\n        } else {\r\n          console.error(err);\r\n        }\r\n      });\r\n    } else {\r\n      await bavaMasterFarmer.methods.deposit(i, amount).send({ from: this.state.account }).then(async (result) => {\r\n        this.loadBlockchainUserData()\r\n      }).catch((err) => {\r\n        if (err.code === 4001) {\r\n          // EIP-1193 userRejectedRequest error\r\n          // If this happens, the user rejected the connection request.\r\n          alert(\"Something went wrong...Code: 4001 User rejected the request.\")\r\n        } else {\r\n          console.error(err);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  approve = async (i, n, v) => {\r\n    let lpTokenAddress\r\n    let bavaMasterFarmerAddress\r\n    let lpToken\r\n    if (v == 1) {\r\n      lpTokenAddress = this.state.bavaPoolSegmentInfo[n][i].lpAddresses[this.state.farmNetworkId]\r\n      bavaMasterFarmerAddress = this.state.bavaMasterFarmerV1._address\r\n    } else if (v == 2) {\r\n      lpTokenAddress = this.state.poolSegmentInfo[n][i].lpAddresses[this.state.farmNetworkId]\r\n      bavaMasterFarmerAddress = this.state.bavaMasterFarmer._address\r\n    } else if (v == 3) {\r\n      lpTokenAddress = this.state.poolSegmentInfoV2_2[n][i].lpAddresses[this.state.farmNetworkId]\r\n      bavaMasterFarmerAddress = this.state.bavaMasterFarmerV2_2._address\r\n    } else if (v == 4) {\r\n      let bavaMasterFarmer = new window.web3.eth.Contract(BavaMasterFarmerV2_3.abi, process.env.REACT_APP_bavamasterfarmv2_3address)\r\n      lpTokenAddress = (await bavaMasterFarmer.methods.poolInfo(i).call()).lpToken\r\n      bavaMasterFarmerAddress = (await bavaMasterFarmer.methods.poolInfo(i).call()).poolContract\r\n    }\r\n    if (this.state.walletConnect == true) {\r\n      lpToken = new window.web3Con.eth.Contract(LpToken.abi, lpTokenAddress)\r\n    } else if (this.state.wallet == true) {\r\n      lpToken = new window.web3.eth.Contract(LpToken.abi, lpTokenAddress)\r\n    }\r\n    await lpToken.methods.approve(bavaMasterFarmerAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: this.state.account }).then(async (result) => {\r\n      this.loadBlockchainUserData()\r\n    }).catch((err) => {\r\n      if (err.code === 4001) {\r\n        // EIP-1193 userRejectedRequest error\r\n        // If this happens, the user rejected the connection request.\r\n        alert(\"Something went wrong...Code: 4001 User rejected the request.\")\r\n      } else {\r\n        console.error(err);\r\n      }\r\n    });\r\n  }\r\n\r\n  withdraw = async (i, amount, n, v) => {\r\n    let bavaMasterFarmer\r\n    let bavaCompoundPool\r\n    if (this.state.walletConnect == true) {\r\n      if (v == 1) {\r\n        bavaMasterFarmer = new window.web3Con.eth.Contract(BavaMasterFarmerV1.abi, process.env.REACT_APP_bavamasterfarmv1_address)\r\n      } else if (v == 2) {\r\n        bavaMasterFarmer = new window.web3Con.eth.Contract(BavaMasterFarmer.abi, process.env.REACT_APP_bavamasterfarmv2_address)\r\n      } else if (v == 3) {\r\n        bavaMasterFarmer = new window.web3Con.eth.Contract(BavaMasterFarmerV2_2.abi, process.env.REACT_APP_bavamasterfarmv2_2address)\r\n      } else if (v == 4) {\r\n        bavaMasterFarmer = new window.web3Con.eth.Contract(BavaMasterFarmerV2_3.abi, process.env.REACT_APP_bavamasterfarmv2_3address)\r\n        let poolAddress = (await bavaMasterFarmer.methods.poolInfo(i).call()).poolContract\r\n        bavaCompoundPool = new window.web3Con.eth.Contract(BavaCompoundPool.abi, poolAddress)\r\n      }\r\n    } else if (this.state.wallet == true) {\r\n      if (v == 1) {\r\n        bavaMasterFarmer = new window.web3.eth.Contract(BavaMasterFarmerV1.abi, process.env.REACT_APP_bavamasterfarmv1_address)\r\n      } else if (v == 2) {\r\n        bavaMasterFarmer = new window.web3.eth.Contract(BavaMasterFarmer.abi, process.env.REACT_APP_bavamasterfarmv2_address)\r\n      } else if (v == 3) {\r\n        bavaMasterFarmer = new window.web3.eth.Contract(BavaMasterFarmerV2_2.abi, process.env.REACT_APP_bavamasterfarmv2_2address)\r\n      } else if (v == 4) {\r\n        bavaMasterFarmer = new window.web3.eth.Contract(BavaMasterFarmerV2_3.abi, process.env.REACT_APP_bavamasterfarmv2_3address)\r\n        let poolAddress = (await bavaMasterFarmer.methods.poolInfo(i).call()).poolContract\r\n        bavaCompoundPool = new window.web3.eth.Contract(BavaCompoundPool.abi, poolAddress)\r\n      }\r\n    } if (v == 4) {\r\n      await bavaCompoundPool.methods.withdraw(amount).send({ from: this.state.account }).then(async (result) => {\r\n        this.loadBlockchainUserData()\r\n      }).catch((err) => {\r\n        if (err.code === 4001) {\r\n          // EIP-1193 userRejectedRequest error\r\n          // If this happens, the user rejected the connection request.\r\n          alert(\"Something went wrong...Code: 4001 User rejected the request.\")\r\n        } else {\r\n          console.error(err);\r\n        }\r\n      });\r\n    } else {\r\n      await bavaMasterFarmer.methods.withdraw(i, amount).send({ from: this.state.account }).then(async (result) => {\r\n        this.loadBlockchainUserData()\r\n      }).catch((err) => {\r\n        if (err.code === 4001) {\r\n          // EIP-1193 userRejectedRequest error\r\n          // If this happens, the user rejected the connection request.\r\n          alert(\"Something went wrong...Code: 4001 User rejected the request.\")\r\n        } else {\r\n          console.error(err);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  harvest = async (i, n, v) => {\r\n    let bavaMasterFarmer\r\n    let bavaCompoundPool\r\n    if (this.state.walletConnect == false && this.state.wallet == false) {\r\n      alert(\"Wallet is not connected\")\r\n    } else {\r\n      if (this.state.walletConnect == true) {\r\n        if (v == 1) {\r\n          bavaMasterFarmer = new window.web3Con.eth.Contract(BavaMasterFarmerV1.abi, process.env.REACT_APP_bavamasterfarmv1_address)\r\n          if (this.state.bavaPendingSegmentReward[n][i] <= 0) {\r\n            alert(\"No token to harvest! Please deposit LP to earn BAVA\")\r\n            return\r\n          }\r\n        } else if (v == 2) {\r\n          bavaMasterFarmer = new window.web3Con.eth.Contract(BavaMasterFarmer.abi, process.env.REACT_APP_bavamasterfarmv2_address)\r\n          if (this.state.pendingSegmentReward[n][i] <= 0) {\r\n            alert(\"No token to harvest! Please deposit LP to earn BAVA\")\r\n            return\r\n          }\r\n        } else if (v == 3) {\r\n          bavaMasterFarmer = new window.web3Con.eth.Contract(BavaMasterFarmerV2_2.abi, process.env.REACT_APP_bavamasterfarmv2_2address)\r\n          if (this.state.pendingSegmentRewardV2_2[n][i] <= 0) {\r\n            alert(\"No token to harvest! Please deposit LP to earn BAVA\")\r\n            return\r\n          }\r\n        } else if (v == 4) {\r\n          bavaMasterFarmer = new window.web3Con.eth.Contract(BavaMasterFarmerV2_3.abi, process.env.REACT_APP_bavamasterfarmv2_3address)\r\n          let poolAddress = (await bavaMasterFarmer.methods.poolInfo(i).call()).poolContract\r\n          bavaCompoundPool = new window.web3Con.eth.Contract(BavaCompoundPool.abi, poolAddress)\r\n          if (this.state.pendingSegmentRewardV2_3[n][i] <= 0) {\r\n            alert(\"No token to harvest! Please deposit LP to earn BAVA\")\r\n            return\r\n          }\r\n        }\r\n      } else if (this.state.wallet == true) {\r\n        if (v == 1) {\r\n          bavaMasterFarmer = new window.web3.eth.Contract(BavaMasterFarmerV1.abi, process.env.REACT_APP_bavamasterfarmv1_address)\r\n          if (this.state.bavaPendingSegmentReward[n][i] <= 0) {\r\n            alert(\"No token to harvest! Please deposit LP to earn BAVA\")\r\n            return\r\n          }\r\n        } else if (v == 2) {\r\n          bavaMasterFarmer = new window.web3.eth.Contract(BavaMasterFarmer.abi, process.env.REACT_APP_bavamasterfarmv2_address)\r\n          if (this.state.pendingSegmentReward[n][i] <= 0) {\r\n            alert(\"No token to harvest! Please deposit LP to earn BAVA\")\r\n            return\r\n          }\r\n        } else if (v == 3) {\r\n          bavaMasterFarmer = new window.web3.eth.Contract(BavaMasterFarmerV2_2.abi, process.env.REACT_APP_bavamasterfarmv2_2address)\r\n          if (this.state.pendingSegmentRewardV2_2[n][i] <= 0) {\r\n            alert(\"No token to harvest! Please deposit LP to earn BAVA\")\r\n            return\r\n          }\r\n        } else if (v == 4) {\r\n          bavaMasterFarmer = new window.web3.eth.Contract(BavaMasterFarmerV2_3.abi, process.env.REACT_APP_bavamasterfarmv2_3address)\r\n          let poolAddress = (await bavaMasterFarmer.methods.poolInfo(i).call()).poolContract\r\n          bavaCompoundPool = new window.web3.eth.Contract(BavaCompoundPool.abi, poolAddress)\r\n          if (this.state.pendingSegmentRewardV2_3[n][i] <= 0) {\r\n            alert(\"No token to harvest! Please deposit LP to earn BAVA\")\r\n            return\r\n          }\r\n        }\r\n      }\r\n      if (v == 4) {\r\n        bavaCompoundPool.methods.claimReward().send({ from: this.state.account }).then(async (result) => {\r\n          this.loadBlockchainUserData()\r\n        }).catch((err) => {\r\n          if (err.code === 4001) {\r\n            // EIP-1193 userRejectedRequest error\r\n            // If this happens, the user rejected the connection request.\r\n            alert(\"Something went wrong...Code: 4001 User rejected the request.\")\r\n          } else {\r\n            console.error(err);\r\n          }\r\n        });\r\n      } else {\r\n        bavaMasterFarmer.methods.claimReward(i).send({ from: this.state.account }).then(async (result) => {\r\n          this.loadBlockchainUserData()\r\n        }).catch((err) => {\r\n          if (err.code === 4001) {\r\n            // EIP-1193 userRejectedRequest error\r\n            // If this happens, the user rejected the connection request.\r\n            alert(\"Something went wrong...Code: 4001 User rejected the request.\")\r\n          } else {\r\n            console.error(err);\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  reinvest = async (i, n) => {\r\n    let bavaMasterFarmer\r\n    let bavaCompoundPool\r\n    if (this.state.walletConnect == false && this.state.wallet == false) {\r\n      alert(\"Wallet is not connected\")\r\n    } else {\r\n      if (this.state.walletConnect == true) {\r\n        bavaMasterFarmer = new window.web3Con.eth.Contract(BavaMasterFarmerV2_3.abi, process.env.REACT_APP_bavamasterfarmv2_3address)\r\n        let poolAddress = (await bavaMasterFarmer.methods.poolInfo(i).call()).poolContract\r\n        bavaCompoundPool = new window.web3Con.eth.Contract(BavaCompoundPool.abi, poolAddress)\r\n      } else if (this.state.wallet == true) {\r\n        bavaMasterFarmer = new window.web3.eth.Contract(BavaMasterFarmerV2_3.abi, process.env.REACT_APP_bavamasterfarmv2_3address)\r\n        let poolAddress = (await bavaMasterFarmer.methods.poolInfo(i).call()).poolContract\r\n        bavaCompoundPool = new window.web3.eth.Contract(BavaCompoundPool.abi, poolAddress)\r\n      }\r\n      bavaCompoundPool.methods.reinvest().send({ from: this.state.account }).then(async (result) => {\r\n        this.loadBlockchainUserData()\r\n      }).catch((err) => {\r\n        if (err.code === 4001) {\r\n          // EIP-1193 userRejectedRequest error\r\n          // If this happens, the user rejected the connection request.\r\n          alert(\"Something went wrong...Code: 4001 User rejected the request.\")\r\n        } else {\r\n          console.error(err);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  checkAirdrop = async (address) => {\r\n    let checksum = window.web3Ava.utils.toChecksumAddress(address)\r\n    if (checksum in this.state.airdropList) {\r\n      this.setState({ validAirdrop: true })\r\n    } else {\r\n      this.setState({ validAirdrop: false })\r\n    }\r\n    this.setState({ airdropCheck: true })\r\n  }\r\n\r\n  claimAirdrop = async () => {\r\n    let bavaAirdrop\r\n    if (this.state.walletConnect == true) {\r\n      bavaAirdrop = new window.web3Con.eth.Contract(BavaAirdrop.abi, process.env.REACT_APP_airdrop_address)\r\n    } else if (this.state.wallet == true) {\r\n      bavaAirdrop = new window.web3.eth.Contract(BavaAirdrop.abi, process.env.REACT_APP_airdrop_address)\r\n    }\r\n    if ((Date.now() / 1000).toFixed(0) < this.state.airdropStart) {\r\n      alert(\"Distribution not started yet\")\r\n    } else if ((Date.now() / 1000).toFixed(0) > this.state.airdropEnd) {\r\n      alert(\"Distribution already end\")\r\n    } else {\r\n      if ((this.state.account in this.state.airdropList) == true) {\r\n        let processed = await bavaAirdrop.methods.processedAirdrops(this.state.account, this.state.airdropIteration).call()\r\n        if (processed == false) {\r\n          let hash = this.state.airdropList[this.state.account]\r\n          await bavaAirdrop.methods.claimTokens(hash).send({ from: this.state.account }).then(async (result) => {\r\n          }).catch((err) => {\r\n            if (err.code === 4001) {\r\n              // EIP-1193 userRejectedRequest error\r\n              // If this happens, the user rejected the connection request.\r\n              alert(\"Something went wrong...Code: 4001 User rejected the request.\")\r\n            } else {\r\n              console.error(err);\r\n            }\r\n          });\r\n        } else {\r\n          alert(\"Airdrop already claimed from this address\")\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  approveStake = async () => {\r\n    let bavaToken\r\n    if (this.state.walletConnect == true) {\r\n      bavaToken = new window.web3Con.eth.Contract(BavaToken.abi, process.env.REACT_APP_bavatoken_address)\r\n    } else if (this.state.wallet == true) {\r\n      bavaToken = new window.web3.eth.Contract(BavaToken.abi, process.env.REACT_APP_bavatoken_address)\r\n    }\r\n    await bavaToken.methods.approve(process.env.REACT_APP_staking_rewards_address, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: this.state.account }).then(async (result) => {\r\n      this.loadBlockchainUserData()\r\n    }).catch((err) => {\r\n      if (err.code === 4001) {\r\n        // EIP-1193 userRejectedRequest error\r\n        // If this happens, the user rejected the connection request.\r\n        alert(\"Something went wrong...Code: 4001 User rejected the request.\")\r\n      } else {\r\n        console.error(err);\r\n      }\r\n    });\r\n  }\r\n\r\n  stake = async (amount) => {\r\n    let bavaStake\r\n    if (this.state.walletConnect == true) {\r\n      bavaStake = new window.web3Con.eth.Contract(StakingRewards.abi, process.env.REACT_APP_staking_rewards_address)\r\n    } else if (this.state.wallet == true) {\r\n      bavaStake = new window.web3.eth.Contract(StakingRewards.abi, process.env.REACT_APP_staking_rewards_address)\r\n    }\r\n    await bavaStake.methods.stake(amount).send({ from: this.state.account }).then((result) => {\r\n      this.loadBlockchainUserData()\r\n    }).catch((err) => {\r\n      if (err.code === 4001) {\r\n        // EIP-1193 userRejectedRequest error\r\n        // If this happens, the user rejected the connection request.\r\n        alert(\"Something went wrong...Code: 4001 User rejected the request.\")\r\n      } else {\r\n        console.error(err);\r\n      }\r\n    });\r\n  }\r\n\r\n  unstake = async (amount) => {\r\n    let bavaStake\r\n    if (this.state.walletConnect == true) {\r\n      bavaStake = new window.web3Con.eth.Contract(StakingRewards.abi, process.env.REACT_APP_staking_rewards_address)\r\n    } else if (this.state.wallet == true) {\r\n      bavaStake = new window.web3.eth.Contract(StakingRewards.abi, process.env.REACT_APP_staking_rewards_address)\r\n    }\r\n    await bavaStake.methods.withdraw(amount).send({ from: this.state.account }).then(async (result) => {\r\n      this.loadBlockchainUserData()\r\n    }).catch((err) => {\r\n      if (err.code === 4001) {\r\n        // EIP-1193 userRejectedRequest error\r\n        // If this happens, the user rejected the connection request.\r\n        alert(\"Something went wrong...Code: 4001 User rejected the request.\")\r\n      } else {\r\n        console.error(err);\r\n      }\r\n    });\r\n  }\r\n\r\n  getReward = async () => {\r\n    let bavaStake\r\n    if (this.state.walletConnect == true) {\r\n      bavaStake = new window.web3Con.eth.Contract(StakingRewards.abi, process.env.REACT_APP_staking_rewards_address)\r\n    } else if (this.state.wallet == true) {\r\n      bavaStake = new window.web3.eth.Contract(StakingRewards.abi, process.env.REACT_APP_staking_rewards_address)\r\n    }\r\n    await bavaStake.methods.getReward().send({ from: this.state.account }).then(async (result) => {\r\n      this.loadBlockchainUserData()\r\n    }).catch((err) => {\r\n      if (err.code === 4001) {\r\n        // EIP-1193 userRejectedRequest error\r\n        // If this happens, the user rejected the connection request.\r\n        alert(\"Something went wrong...Code: 4001 User rejected the request.\")\r\n      } else {\r\n        console.error(err);\r\n      }\r\n    });\r\n  }\r\n\r\n  exit = async (amount) => {\r\n    let bavaStake\r\n    if (this.state.walletConnect == true) {\r\n      bavaStake = new window.web3Con.eth.Contract(StakingRewards.abi, process.env.REACT_APP_staking_rewards_address)\r\n    } else if (this.state.wallet == true) {\r\n      bavaStake = new window.web3.eth.Contract(StakingRewards.abi, process.env.REACT_APP_staking_rewards_address)\r\n    }\r\n    await bavaStake.methods.exit().send({ from: this.state.account }).then(async (result) => {\r\n      this.loadBlockchainUserData()\r\n    }).catch((err) => {\r\n      if (err.code === 4001) {\r\n        // EIP-1193 userRejectedRequest error\r\n        // If this happens, the user rejected the connection request.\r\n        alert(\"Something went wrong...Code: 4001 User rejected the request.\")\r\n      } else {\r\n        console.error(err);\r\n      }\r\n    });\r\n  }\r\n\r\n  setI = (pair, boolean, version) => {\r\n    if (version == 1) {\r\n      this.state.farmV1Open[pair] = boolean\r\n    } else if (version == 2) {\r\n      this.state.farmV2Open[pair] = boolean\r\n    }\r\n    this.setState({ i: pair })  //do ntg, just to push react setstate\r\n  }\r\n\r\n  setWalletTrigger = async (state) => {\r\n    if (state == false) {\r\n      await this.setState({ wallet: state })\r\n      this.setState({ accountLoading: state })\r\n    } else {\r\n      const accounts = await window.web3.eth.getAccounts()\r\n      this.setState({ account: accounts[0] })\r\n      const first4Account = this.state.account.substring(0, 4)\r\n      const last4Account = this.state.account.slice(-4)\r\n      this.setState({ first4Account: first4Account })\r\n      this.setState({ last4Account: last4Account })\r\n      this.setState({ wallet: state })\r\n    }\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      account: '',\r\n      lpToken: {},\r\n      bavaToken: {},\r\n      restakingFarm: {},\r\n      bavaTokenBalance: '0',\r\n      bavaTokenTotalSupply: '0',\r\n      bavaTokenCapSupply: '0',\r\n      bavaTokenLock: '0',\r\n      bavaContract: '',\r\n      i: '0',\r\n      n: '0',\r\n      loading: false,\r\n      farmloading: false,\r\n      wallet: false,\r\n      aprloading: false,\r\n      walletConnect: false,\r\n      farmV1Open: [],\r\n      farmV2Open: [],\r\n      userSegmentInfo: [[], []],\r\n      poolSegmentInfo: [[], []],\r\n      poolSegmentInfoV2_2: [[], []],\r\n      lpTokenSegmentInContract: [[], []],\r\n      lpBalanceAccount: [[], []],\r\n      lpTokenSegmentBsymbol: [[], []],\r\n      pendingSegmentReward: [[], []],\r\n      lpSegmentAllowance: [[], []],\r\n      lpSegmentAllowanceV2_2: [[], []],\r\n      lpSegmentAllowanceV2_3: [[], [], []],\r\n      bavaLpSegmentAllowance: [[], []],\r\n      bavaLpBalanceAccount: [[], []],\r\n      lpTokenValue: [[], []],\r\n      tvl: [[], []],\r\n      apr: [[], []],\r\n      apyDaily: [[], []],\r\n      tvlV2_2: [[], []],\r\n      aprV2_2: [[], []],\r\n      apyDailyV2_2: [[], []],\r\n      tvlV2_3: [[], [], []],\r\n      aprV2_3: [[], [], []],\r\n      apyDailyV2_3: [[], [], []],\r\n      bavatvl: [[], []],\r\n      bavaapr: [[], []],\r\n      bavaapyDaily: [[], []],\r\n      returnRatio: [[], []],\r\n      bavaReturnRatio: [[], []],\r\n      reinvestAmount: [[], []],\r\n      totalpendingReward: '0',\r\n      buttonPopup: false,\r\n      networkName: \"Loading\",\r\n      poolLength: '0',\r\n      startBlk: '0',\r\n      totalTVL: '0',\r\n      lockedBavaTokenBalance: '0',\r\n      accountLoading: false,\r\n      totalAirdropAmount: '0',\r\n      airdropAmount: '0',\r\n      airdropStart: '0',\r\n      airdropEnd: '0',\r\n      validAirdrop: false,\r\n      stakeAmount: '0',\r\n      earnedAmount: '0',\r\n      totalStake: '0',\r\n      rewardRate: '0',\r\n      bavaTokenAllowance: '0'\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let mainContent\r\n    let menuContent\r\n    let menuV2Content\r\n    let kyberContent\r\n    let traderjoeContent\r\n    let airdropContent\r\n    let stakeContent\r\n    let litepaperContent\r\n    let syntheticContent\r\n    let traderjoeV2Content\r\n    let navLandingContent\r\n    let navMenuContent\r\n\r\n    navLandingContent = <Navb\r\n      account={this.state.account}\r\n      first4Account={this.state.first4Account}\r\n      last4Account={this.state.last4Account}\r\n      wallet={this.state.wallet}\r\n      setWalletTrigger={this.setWalletTrigger}\r\n      loadWeb3={this.loadWeb3}\r\n      connectMetamask={this.connectMetamask}\r\n      mobileWalletConnect={this.mobileWalletConnect}\r\n      WalletDisconnect={this.WalletDisconnect}\r\n      connectCoin98={this.connectCoin98}\r\n      networkName={this.state.networkName}\r\n      walletConnect={this.state.walletConnect}\r\n    />\r\n    navMenuContent = <NavbMenu\r\n      account={this.state.account}\r\n      first4Account={this.state.first4Account}\r\n      last4Account={this.state.last4Account}\r\n      wallet={this.state.wallet}\r\n      setWalletTrigger={this.setWalletTrigger}\r\n      loadWeb3={this.loadWeb3}\r\n      connectMetamask={this.connectMetamask}\r\n      mobileWalletConnect={this.mobileWalletConnect}\r\n      WalletDisconnect={this.WalletDisconnect}\r\n      connectCoin98={this.connectCoin98}\r\n      networkName={this.state.networkName}\r\n      walletConnect={this.state.walletConnect}\r\n      BAVAPrice={this.state.BAVAPrice}\r\n    />\r\n    mainContent = <Main\r\n      lpTokenBalance={this.state.lpTokenBalance}\r\n      bavaTokenBalance={this.state.bavaTokenBalance}\r\n      deposit={this.deposit}\r\n      withdraw={this.withdraw}\r\n      lpTokenInContract={this.state.lpTokenInContract}\r\n      poolLength={this.state.poolLength}\r\n      startBlk={this.state.startBlk}\r\n      bavaTokenTotalSupply={this.state.bavaTokenTotalSupply}\r\n      bavaTokenCapSupply={this.state.bavaTokenCapSupply}\r\n      bavaTokenLock={this.state.bavaTokenLock}\r\n    />\r\n    menuContent = <Menu\r\n      lpTokenBalance={this.state.lpTokenBalance}\r\n      bavaTokenBalance={this.state.bavaTokenBalance}\r\n      deposit={this.deposit}\r\n      withdraw={this.withdraw}\r\n      approve={this.approve}\r\n      setI={this.setI}\r\n      connectMetamask={this.connectMetamask}\r\n      lpSegmentAllowance={this.state.lpSegmentAllowance}\r\n      bavaContract={this.state.bavaContract}\r\n      bavaTokenTotalSupply={this.state.bavaTokenTotalSupply}\r\n      totalpendingReward={this.state.totalpendingReward}\r\n      userSegmentInfo={this.state.userSegmentInfo}\r\n      poolSegmentInfo={this.state.poolSegmentInfo}\r\n      lpBalanceAccount={this.state.lpBalanceAccount}\r\n      pendingSegmentReward={this.state.pendingSegmentReward}\r\n      buttonPopup={this.state.buttonPopup}\r\n      harvest={this.harvest}\r\n      BAVAPrice={this.state.BAVAPrice}\r\n      tvl={this.state.tvl}\r\n      apr={this.state.apr}\r\n      apyDaily={this.state.apyDaily}\r\n      farmloading={this.state.farmloading}\r\n      aprloading={this.state.aprloading}\r\n      walletConnect={this.state.walletConnect}\r\n      wallet={this.state.wallet}\r\n      farmV1Open={this.state.farmV1Open}\r\n      farmV2Open={this.state.farmV2Open}\r\n      accountLoading={this.state.accountLoading}\r\n      lockedBavaTokenBalance={this.state.lockedBavaTokenBalance}\r\n      totalTVL={this.state.totalTVL}\r\n      bavaPoolSegmentInfo={this.state.bavaPoolSegmentInfo}\r\n      bavaLpTokenPairsymbols={this.state.bavaLpTokenPairsymbols}\r\n      bavaLpTokenAddresses={this.state.bavaLpTokenAddresses}\r\n      bavaUserSegmentInfo={this.state.bavaUserSegmentInfo}\r\n      bavaLpBalanceAccount={this.state.bavaLpBalanceAccount}\r\n      bavaLpSegmentAllowance={this.state.bavaLpSegmentAllowance}\r\n      bavaPendingSegmentReward={this.state.bavaPendingSegmentReward}\r\n      bavatvl={this.state.bavatvl}\r\n      bavaapr={this.state.bavaapr}\r\n      bavaapyDaily={this.state.bavaapyDaily}\r\n      returnRatio={this.state.returnRatio}\r\n      bavaReturnRatio={this.state.bavaReturnRatio}\r\n      poolSegmentInfoV2_2={this.state.poolSegmentInfoV2_2}\r\n      lpTokenPairsymbolsV2_2={this.state.lpTokenPairsymbolsV2_2}\r\n      lpTokenAddressesV2_2={this.state.lpTokenAddressesV2_2}\r\n      returnRatioV2_2={this.state.returnRatioV2_2}\r\n      tvlV2_2={this.state.tvlV2_2}\r\n      aprV2_2={this.state.aprV2_2}\r\n      apyDailyV2_2={this.state.apyDailyV2_2}\r\n      userSegmentInfoV2_2={this.state.userSegmentInfoV2_2}\r\n      lpBalanceAccountV2_2={this.state.lpBalanceAccountV2_2}\r\n      lpSegmentAllowanceV2_2={this.state.lpSegmentAllowanceV2_2}\r\n      pendingSegmentRewardV2_2={this.state.pendingSegmentRewardV2_2}\r\n    />\r\n    menuV2Content = <MenuV2\r\n      lpTokenBalance={this.state.lpTokenBalance}\r\n      bavaTokenBalance={this.state.bavaTokenBalance}\r\n      deposit={this.deposit}\r\n      withdraw={this.withdraw}\r\n      approve={this.approve}\r\n      setI={this.setI}\r\n      connectMetamask={this.connectMetamask}\r\n      lpSegmentAllowance={this.state.lpSegmentAllowance}\r\n      bavaContract={this.state.bavaContract}\r\n      bavaTokenTotalSupply={this.state.bavaTokenTotalSupply}\r\n      totalpendingReward={this.state.totalpendingReward}\r\n      poolSegmentInfo={this.state.poolSegmentInfo}\r\n      buttonPopup={this.state.buttonPopup}\r\n      harvest={this.harvest}\r\n      reinvest={this.reinvest}\r\n      reinvestAmount={this.state.reinvestAmount}\r\n      BAVAPrice={this.state.BAVAPrice}\r\n      AVAXPrice={this.state.AVAXPrice}\r\n      tvl={this.state.tvl}\r\n      apr={this.state.apr}\r\n      apyDaily={this.state.apyDaily}\r\n      farmloading={this.state.farmloading}\r\n      aprloading={this.state.aprloading}\r\n      walletConnect={this.state.walletConnect}\r\n      wallet={this.state.wallet}\r\n      farmV1Open={this.state.farmV1Open}\r\n      farmV2Open={this.state.farmV2Open}\r\n      accountLoading={this.state.accountLoading}\r\n      lockedBavaTokenBalance={this.state.lockedBavaTokenBalance}\r\n      totalTVL={this.state.totalTVL}\r\n      returnRatio={this.state.returnRatio}\r\n      bavaReturnRatio={this.state.bavaReturnRatio}\r\n      poolSegmentInfoV2_3={this.state.poolSegmentInfoV2_3}\r\n      lpTokenPairsymbolsV2_3={this.state.lpTokenPairsymbolsV2_3}\r\n      lpTokenAddressesV2_3={this.state.lpTokenAddressesV2_3}\r\n      returnRatioV2_3={this.state.returnRatioV2_3}\r\n      tvlV2_3={this.state.tvlV2_3}\r\n      aprV2_3={this.state.aprV2_3}\r\n      apyDailyV2_3={this.state.apyDailyV2_3}\r\n      userSegmentInfoV2_3={this.state.userSegmentInfoV2_3}\r\n      lpBalanceAccountV2_3={this.state.lpBalanceAccountV2_3}\r\n      lpSegmentAllowanceV2_3={this.state.lpSegmentAllowanceV2_3}\r\n      pendingSegmentRewardV2_3={this.state.pendingSegmentRewardV2_3}\r\n    />\r\n    traderjoeContent = <TraderJoe\r\n      lpTokenBalance={this.state.lpTokenBalance}\r\n      bavaTokenBalance={this.state.bavaTokenBalance}\r\n      deposit={this.deposit}\r\n      withdraw={this.withdraw}\r\n      approve={this.approve}\r\n      setI={this.setI}\r\n      connectMetamask={this.connectMetamask}\r\n      lpSegmentAllowance={this.state.lpSegmentAllowance}\r\n      bavaContract={this.state.bavaContract}\r\n      bavaTokenTotalSupply={this.state.bavaTokenTotalSupply}\r\n      totalpendingReward={this.state.totalpendingReward}\r\n      userSegmentInfo={this.state.userSegmentInfo}\r\n      poolSegmentInfo={this.state.poolSegmentInfo}\r\n      lpBalanceAccount={this.state.lpBalanceAccount}\r\n      pendingSegmentReward={this.state.pendingSegmentReward}\r\n      buttonPopup={this.state.buttonPopup}\r\n      harvest={this.harvest}\r\n      BAVAPrice={this.state.BAVAPrice}\r\n      tvl={this.state.tvl}\r\n      apr={this.state.apr}\r\n      apyDaily={this.state.apyDaily}\r\n      farmloading={this.state.farmloading}\r\n      aprloading={this.state.aprloading}\r\n      walletConnect={this.state.walletConnect}\r\n      wallet={this.state.wallet}\r\n      farmV1Open={this.state.farmV1Open}\r\n      farmV2Open={this.state.farmV2Open}\r\n      accountLoading={this.state.accountLoading}\r\n      lockedBavaTokenBalance={this.state.lockedBavaTokenBalance}\r\n      totalTVL={this.state.totalTVL}\r\n      bavaPoolSegmentInfo={this.state.bavaPoolSegmentInfo}\r\n      bavaLpTokenPairsymbols={this.state.bavaLpTokenPairsymbols}\r\n      bavaLpTokenAddresses={this.state.bavaLpTokenAddresses}\r\n      bavaUserSegmentInfo={this.state.bavaUserSegmentInfo}\r\n      bavaLpBalanceAccount={this.state.bavaLpBalanceAccount}\r\n      bavaLpSegmentAllowance={this.state.bavaLpSegmentAllowance}\r\n      bavaPendingSegmentReward={this.state.bavaPendingSegmentReward}\r\n      bavatvl={this.state.bavatvl}\r\n      bavaapr={this.state.bavaapr}\r\n      bavaapyDaily={this.state.bavaapyDaily}\r\n      returnRatio={this.state.returnRatio}\r\n      bavaReturnRatio={this.state.bavaReturnRatio}\r\n    />\r\n    traderjoeV2Content = <TraderJoeV2\r\n      lpTokenBalance={this.state.lpTokenBalance}\r\n      bavaTokenBalance={this.state.bavaTokenBalance}\r\n      deposit={this.deposit}\r\n      withdraw={this.withdraw}\r\n      approve={this.approve}\r\n      setI={this.setI}\r\n      connectMetamask={this.connectMetamask}\r\n      lpSegmentAllowance={this.state.lpSegmentAllowance}\r\n      bavaContract={this.state.bavaContract}\r\n      bavaTokenTotalSupply={this.state.bavaTokenTotalSupply}\r\n      totalpendingReward={this.state.totalpendingReward}\r\n      userSegmentInfo={this.state.userSegmentInfo}\r\n      poolSegmentInfo={this.state.poolSegmentInfo}\r\n      lpBalanceAccount={this.state.lpBalanceAccount}\r\n      pendingSegmentReward={this.state.pendingSegmentReward}\r\n      buttonPopup={this.state.buttonPopup}\r\n      harvest={this.harvest}\r\n      BAVAPrice={this.state.BAVAPrice}\r\n      tvl={this.state.tvl}\r\n      apr={this.state.apr}\r\n      apyDaily={this.state.apyDaily}\r\n      farmloading={this.state.farmloading}\r\n      aprloading={this.state.aprloading}\r\n      walletConnect={this.state.walletConnect}\r\n      wallet={this.state.wallet}\r\n      farmV1Open={this.state.farmV1Open}\r\n      farmV2Open={this.state.farmV2Open}\r\n      accountLoading={this.state.accountLoading}\r\n      lockedBavaTokenBalance={this.state.lockedBavaTokenBalance}\r\n      totalTVL={this.state.totalTVL}\r\n      bavaPoolSegmentInfo={this.state.bavaPoolSegmentInfo}\r\n      bavaLpTokenPairsymbols={this.state.bavaLpTokenPairsymbols}\r\n      bavaLpTokenAddresses={this.state.bavaLpTokenAddresses}\r\n      bavaUserSegmentInfo={this.state.bavaUserSegmentInfo}\r\n      bavaLpBalanceAccount={this.state.bavaLpBalanceAccount}\r\n      bavaLpSegmentAllowance={this.state.bavaLpSegmentAllowance}\r\n      bavaPendingSegmentReward={this.state.bavaPendingSegmentReward}\r\n      bavatvl={this.state.bavatvl}\r\n      bavaapr={this.state.bavaapr}\r\n      bavaapyDaily={this.state.bavaapyDaily}\r\n      returnRatio={this.state.returnRatio}\r\n      bavaReturnRatio={this.state.bavaReturnRatio}\r\n    />\r\n    kyberContent = <Kyber\r\n      lpTokenBalance={this.state.lpTokenBalance}\r\n      bavaTokenBalance={this.state.bavaTokenBalance}\r\n      deposit={this.deposit}\r\n      withdraw={this.withdraw}\r\n      approve={this.approve}\r\n      setI={this.setI}\r\n      connectMetamask={this.connectMetamask}\r\n      lpSegmentAllowance={this.state.lpSegmentAllowance}\r\n      bavaContract={this.state.bavaContract}\r\n      bavaTokenTotalSupply={this.state.bavaTokenTotalSupply}\r\n      totalpendingReward={this.state.totalpendingReward}\r\n      poolSegmentInfo={this.state.poolSegmentInfo}\r\n      buttonPopup={this.state.buttonPopup}\r\n      harvest={this.harvest}\r\n      reinvest={this.reinvest}\r\n      reinvestAmount={this.state.reinvestAmount}\r\n      BAVAPrice={this.state.BAVAPrice}\r\n      AVAXPrice={this.state.AVAXPrice}\r\n      tvl={this.state.tvl}\r\n      apr={this.state.apr}\r\n      apyDaily={this.state.apyDaily}\r\n      farmloading={this.state.farmloading}\r\n      aprloading={this.state.aprloading}\r\n      walletConnect={this.state.walletConnect}\r\n      wallet={this.state.wallet}\r\n      farmV1Open={this.state.farmV1Open}\r\n      farmV2Open={this.state.farmV2Open}\r\n      accountLoading={this.state.accountLoading}\r\n      lockedBavaTokenBalance={this.state.lockedBavaTokenBalance}\r\n      totalTVL={this.state.totalTVL}\r\n      returnRatio={this.state.returnRatio}\r\n      bavaReturnRatio={this.state.bavaReturnRatio}\r\n      poolSegmentInfoV2_3={this.state.poolSegmentInfoV2_3}\r\n      lpTokenPairsymbolsV2_3={this.state.lpTokenPairsymbolsV2_3}\r\n      lpTokenAddressesV2_3={this.state.lpTokenAddressesV2_3}\r\n      returnRatioV2_3={this.state.returnRatioV2_3}\r\n      tvlV2_3={this.state.tvlV2_3}\r\n      aprV2_3={this.state.aprV2_3}\r\n      apyDailyV2_3={this.state.apyDailyV2_3}\r\n      userSegmentInfoV2_3={this.state.userSegmentInfoV2_3}\r\n      lpBalanceAccountV2_3={this.state.lpBalanceAccountV2_3}\r\n      lpSegmentAllowanceV2_3={this.state.lpSegmentAllowanceV2_3}\r\n      pendingSegmentRewardV2_3={this.state.pendingSegmentRewardV2_3}\r\n    />\r\n    airdropContent = <Airdrop\r\n      wallet={this.state.wallet}\r\n      connectMetamask={this.connectMetamask}\r\n      claimAirdrop={this.claimAirdrop}\r\n      checkAirdrop={this.checkAirdrop}\r\n      timeConverter={this.timeConverter}\r\n      checkClaimAmount={this.checkClaimAmount}\r\n      claimDistributePurse={this.claimDistributePurse}\r\n      account={this.state.account}\r\n      rewardEndTime={this.state.rewardEndTime}\r\n      rewardStartTime={this.state.rewardStartTime}\r\n      distributedAmount={this.state.distributedAmount}\r\n      distributedPercentage={this.state.distributedPercentage}\r\n      rewardStartTimeDate={this.state.rewardStartTimeDate}\r\n      rewardEndTimeDate={this.state.rewardEndTimeDate}\r\n      claimAmount={this.state.claimAmount}\r\n      totalTransferAmount={this.state.totalTransferAmount}\r\n      purseTokenTotalSupply={this.state.purseTokenTotalSupply}\r\n      airdropStart={this.state.airdropStart}\r\n      airdropEnd={this.state.airdropEnd}\r\n      totalAirdropAmount={this.state.totalAirdropAmount}\r\n      airdropAmount={this.state.airdropAmount}\r\n      validAirdrop={this.state.validAirdrop}\r\n      airdropCheck={this.state.airdropCheck}\r\n    />\r\n    stakeContent = <Stake\r\n      bavaTokenBalance={this.state.bavaTokenBalance}\r\n      BAVAPrice={this.state.BAVAPrice}\r\n      walletConnect={this.state.walletConnect}\r\n      wallet={this.state.wallet}\r\n      accountLoading={this.state.accountLoading}\r\n      lockedBavaTokenBalance={this.state.lockedBavaTokenBalance}\r\n      totalStake={this.state.totalStake}\r\n      stakeAmount={this.state.stakeAmount}\r\n      earnedAmount={this.state.earnedAmount}\r\n      rewardRate={this.state.rewardRate}\r\n      bavaTokenAllowance={this.state.bavaTokenAllowance}\r\n      farmloading={this.state.farmloading}\r\n      connectMetamask={this.connectMetamask}\r\n      approveStake={this.approveStake}\r\n      stake={this.stake}\r\n      unstake={this.unstake}\r\n      getReward={this.getReward}\r\n      exit={this.exit}\r\n    />\r\n    litepaperContent = <LitePaper\r\n    />\r\n    syntheticContent = <Synthetic\r\n    />\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <Switch>\r\n            <Route path=\"/\" exact > {navLandingContent} </Route>\r\n            <Route path=\"/home\" exact > {navLandingContent} </Route>\r\n            <Route path=\"/menu\" exact > {navMenuContent} </Route>\r\n            <Route path=\"/menu/v2\" exact > {navMenuContent} </Route>\r\n            <Route path=\"/menu/v2/kyber\" exact > {navMenuContent} </Route>\r\n            <Route path=\"/menu/v2/traderjoe\" exact > {navMenuContent} </Route>\r\n            <Route path=\"/menu/traderjoe/\" exact > {navMenuContent} </Route>\r\n            <Route path=\"/claim/\" exact > {navMenuContent} </Route>\r\n            <Route path=\"/stake/\" exact > {navMenuContent} </Route>\r\n            <Route path=\"/litepaper\" exact > {navMenuContent} </Route>\r\n            <Route path=\"/synthetic\" exact > {navMenuContent} </Route>\r\n          </Switch>\r\n          <div className=\"container-fluid\" style={{ position: \"relative\", top: \"100px\", marginTop: \"0px\" }}>\r\n            <main role=\"main\" className=\"content ml-auto mr-auto\" style={{ maxWidth: '1000px' }}>\r\n              <Switch>\r\n                <Route path=\"/\" exact > {mainContent} </Route>\r\n                <Route path=\"/home\" exact > {mainContent} </Route>\r\n                <Route path=\"/menu\" exact > {menuContent} </Route>\r\n                <Route path=\"/menu/v2\" exact > {menuV2Content} </Route>\r\n                <Route path=\"/menu/v2/kyber\" exact > {kyberContent} </Route>\r\n                <Route path=\"/menu/v2/traderjoe\" exact > {traderjoeV2Content} </Route>\r\n                <Route path=\"/menu/traderjoe/\" exact > {traderjoeContent} </Route>\r\n                <Route path=\"/claim/\" exact > {airdropContent} </Route>\r\n                <Route path=\"/stake/\" exact > {stakeContent} </Route>\r\n                <Route path=\"/litepaper\" exact > {litepaperContent} </Route>\r\n                <Route path=\"/synthetic\" exact > {syntheticContent} </Route>\r\n              </Switch>\r\n            </main>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}